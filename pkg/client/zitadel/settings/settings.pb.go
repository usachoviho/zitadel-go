// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/settings.proto

package settings

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	object "github.com/zitadel/zitadel-go/v3/pkg/client/zitadel/object"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecretGeneratorType int32

const (
	SecretGeneratorType_SECRET_GENERATOR_TYPE_UNSPECIFIED            SecretGeneratorType = 0
	SecretGeneratorType_SECRET_GENERATOR_TYPE_INIT_CODE              SecretGeneratorType = 1
	SecretGeneratorType_SECRET_GENERATOR_TYPE_VERIFY_EMAIL_CODE      SecretGeneratorType = 2
	SecretGeneratorType_SECRET_GENERATOR_TYPE_VERIFY_PHONE_CODE      SecretGeneratorType = 3
	SecretGeneratorType_SECRET_GENERATOR_TYPE_PASSWORD_RESET_CODE    SecretGeneratorType = 4
	SecretGeneratorType_SECRET_GENERATOR_TYPE_PASSWORDLESS_INIT_CODE SecretGeneratorType = 5
	SecretGeneratorType_SECRET_GENERATOR_TYPE_APP_SECRET             SecretGeneratorType = 6
	SecretGeneratorType_SECRET_GENERATOR_TYPE_OTP_SMS                SecretGeneratorType = 7
	SecretGeneratorType_SECRET_GENERATOR_TYPE_OTP_EMAIL              SecretGeneratorType = 8
)

// Enum value maps for SecretGeneratorType.
var (
	SecretGeneratorType_name = map[int32]string{
		0: "SECRET_GENERATOR_TYPE_UNSPECIFIED",
		1: "SECRET_GENERATOR_TYPE_INIT_CODE",
		2: "SECRET_GENERATOR_TYPE_VERIFY_EMAIL_CODE",
		3: "SECRET_GENERATOR_TYPE_VERIFY_PHONE_CODE",
		4: "SECRET_GENERATOR_TYPE_PASSWORD_RESET_CODE",
		5: "SECRET_GENERATOR_TYPE_PASSWORDLESS_INIT_CODE",
		6: "SECRET_GENERATOR_TYPE_APP_SECRET",
		7: "SECRET_GENERATOR_TYPE_OTP_SMS",
		8: "SECRET_GENERATOR_TYPE_OTP_EMAIL",
	}
	SecretGeneratorType_value = map[string]int32{
		"SECRET_GENERATOR_TYPE_UNSPECIFIED":            0,
		"SECRET_GENERATOR_TYPE_INIT_CODE":              1,
		"SECRET_GENERATOR_TYPE_VERIFY_EMAIL_CODE":      2,
		"SECRET_GENERATOR_TYPE_VERIFY_PHONE_CODE":      3,
		"SECRET_GENERATOR_TYPE_PASSWORD_RESET_CODE":    4,
		"SECRET_GENERATOR_TYPE_PASSWORDLESS_INIT_CODE": 5,
		"SECRET_GENERATOR_TYPE_APP_SECRET":             6,
		"SECRET_GENERATOR_TYPE_OTP_SMS":                7,
		"SECRET_GENERATOR_TYPE_OTP_EMAIL":              8,
	}
)

func (x SecretGeneratorType) Enum() *SecretGeneratorType {
	p := new(SecretGeneratorType)
	*p = x
	return p
}

func (x SecretGeneratorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretGeneratorType) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_settings_proto_enumTypes[0].Descriptor()
}

func (SecretGeneratorType) Type() protoreflect.EnumType {
	return &file_zitadel_settings_proto_enumTypes[0]
}

func (x SecretGeneratorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretGeneratorType.Descriptor instead.
func (SecretGeneratorType) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_settings_proto_rawDescGZIP(), []int{0}
}

type SMSProviderConfigState int32

const (
	SMSProviderConfigState_SMS_PROVIDER_CONFIG_STATE_UNSPECIFIED SMSProviderConfigState = 0
	SMSProviderConfigState_SMS_PROVIDER_CONFIG_ACTIVE            SMSProviderConfigState = 1
	SMSProviderConfigState_SMS_PROVIDER_CONFIG_INACTIVE          SMSProviderConfigState = 2
)

// Enum value maps for SMSProviderConfigState.
var (
	SMSProviderConfigState_name = map[int32]string{
		0: "SMS_PROVIDER_CONFIG_STATE_UNSPECIFIED",
		1: "SMS_PROVIDER_CONFIG_ACTIVE",
		2: "SMS_PROVIDER_CONFIG_INACTIVE",
	}
	SMSProviderConfigState_value = map[string]int32{
		"SMS_PROVIDER_CONFIG_STATE_UNSPECIFIED": 0,
		"SMS_PROVIDER_CONFIG_ACTIVE":            1,
		"SMS_PROVIDER_CONFIG_INACTIVE":          2,
	}
)

func (x SMSProviderConfigState) Enum() *SMSProviderConfigState {
	p := new(SMSProviderConfigState)
	*p = x
	return p
}

func (x SMSProviderConfigState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SMSProviderConfigState) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_settings_proto_enumTypes[1].Descriptor()
}

func (SMSProviderConfigState) Type() protoreflect.EnumType {
	return &file_zitadel_settings_proto_enumTypes[1]
}

func (x SMSProviderConfigState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SMSProviderConfigState.Descriptor instead.
func (SMSProviderConfigState) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_settings_proto_rawDescGZIP(), []int{1}
}

type SecretGenerator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneratorType       SecretGeneratorType   `protobuf:"varint,1,opt,name=generator_type,json=generatorType,proto3,enum=zitadel.settings.v1.SecretGeneratorType" json:"generator_type,omitempty"`
	Details             *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	Length              uint32                `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	Expiry              *durationpb.Duration  `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	IncludeLowerLetters bool                  `protobuf:"varint,5,opt,name=include_lower_letters,json=includeLowerLetters,proto3" json:"include_lower_letters,omitempty"`
	IncludeUpperLetters bool                  `protobuf:"varint,6,opt,name=include_upper_letters,json=includeUpperLetters,proto3" json:"include_upper_letters,omitempty"`
	IncludeDigits       bool                  `protobuf:"varint,7,opt,name=include_digits,json=includeDigits,proto3" json:"include_digits,omitempty"`
	IncludeSymbols      bool                  `protobuf:"varint,8,opt,name=include_symbols,json=includeSymbols,proto3" json:"include_symbols,omitempty"`
}

func (x *SecretGenerator) Reset() {
	*x = SecretGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_settings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretGenerator) ProtoMessage() {}

func (x *SecretGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_settings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretGenerator.ProtoReflect.Descriptor instead.
func (*SecretGenerator) Descriptor() ([]byte, []int) {
	return file_zitadel_settings_proto_rawDescGZIP(), []int{0}
}

func (x *SecretGenerator) GetGeneratorType() SecretGeneratorType {
	if x != nil {
		return x.GeneratorType
	}
	return SecretGeneratorType_SECRET_GENERATOR_TYPE_UNSPECIFIED
}

func (x *SecretGenerator) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *SecretGenerator) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *SecretGenerator) GetExpiry() *durationpb.Duration {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *SecretGenerator) GetIncludeLowerLetters() bool {
	if x != nil {
		return x.IncludeLowerLetters
	}
	return false
}

func (x *SecretGenerator) GetIncludeUpperLetters() bool {
	if x != nil {
		return x.IncludeUpperLetters
	}
	return false
}

func (x *SecretGenerator) GetIncludeDigits() bool {
	if x != nil {
		return x.IncludeDigits
	}
	return false
}

func (x *SecretGenerator) GetIncludeSymbols() bool {
	if x != nil {
		return x.IncludeSymbols
	}
	return false
}

type SecretGeneratorQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//
	//	*SecretGeneratorQuery_TypeQuery
	Query isSecretGeneratorQuery_Query `protobuf_oneof:"query"`
}

func (x *SecretGeneratorQuery) Reset() {
	*x = SecretGeneratorQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_settings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretGeneratorQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretGeneratorQuery) ProtoMessage() {}

func (x *SecretGeneratorQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_settings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretGeneratorQuery.ProtoReflect.Descriptor instead.
func (*SecretGeneratorQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_settings_proto_rawDescGZIP(), []int{1}
}

func (m *SecretGeneratorQuery) GetQuery() isSecretGeneratorQuery_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *SecretGeneratorQuery) GetTypeQuery() *SecretGeneratorTypeQuery {
	if x, ok := x.GetQuery().(*SecretGeneratorQuery_TypeQuery); ok {
		return x.TypeQuery
	}
	return nil
}

type isSecretGeneratorQuery_Query interface {
	isSecretGeneratorQuery_Query()
}

type SecretGeneratorQuery_TypeQuery struct {
	TypeQuery *SecretGeneratorTypeQuery `protobuf:"bytes,1,opt,name=type_query,json=typeQuery,proto3,oneof"`
}

func (*SecretGeneratorQuery_TypeQuery) isSecretGeneratorQuery_Query() {}

type SecretGeneratorTypeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneratorType SecretGeneratorType `protobuf:"varint,1,opt,name=generator_type,json=generatorType,proto3,enum=zitadel.settings.v1.SecretGeneratorType" json:"generator_type,omitempty"`
}

func (x *SecretGeneratorTypeQuery) Reset() {
	*x = SecretGeneratorTypeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_settings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretGeneratorTypeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretGeneratorTypeQuery) ProtoMessage() {}

func (x *SecretGeneratorTypeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_settings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretGeneratorTypeQuery.ProtoReflect.Descriptor instead.
func (*SecretGeneratorTypeQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_settings_proto_rawDescGZIP(), []int{2}
}

func (x *SecretGeneratorTypeQuery) GetGeneratorType() SecretGeneratorType {
	if x != nil {
		return x.GeneratorType
	}
	return SecretGeneratorType_SECRET_GENERATOR_TYPE_UNSPECIFIED
}

type SMTPConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details        *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	SenderAddress  string                `protobuf:"bytes,2,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	SenderName     string                `protobuf:"bytes,3,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	Tls            bool                  `protobuf:"varint,4,opt,name=tls,proto3" json:"tls,omitempty"`
	Host           string                `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	User           string                `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	ReplyToAddress string                `protobuf:"bytes,7,opt,name=reply_to_address,json=replyToAddress,proto3" json:"reply_to_address,omitempty"`
}

func (x *SMTPConfig) Reset() {
	*x = SMTPConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_settings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMTPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMTPConfig) ProtoMessage() {}

func (x *SMTPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_settings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMTPConfig.ProtoReflect.Descriptor instead.
func (*SMTPConfig) Descriptor() ([]byte, []int) {
	return file_zitadel_settings_proto_rawDescGZIP(), []int{3}
}

func (x *SMTPConfig) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *SMTPConfig) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *SMTPConfig) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *SMTPConfig) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *SMTPConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SMTPConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SMTPConfig) GetReplyToAddress() string {
	if x != nil {
		return x.ReplyToAddress
	}
	return ""
}

type SMSProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails  `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Id      string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	State   SMSProviderConfigState `protobuf:"varint,3,opt,name=state,proto3,enum=zitadel.settings.v1.SMSProviderConfigState" json:"state,omitempty"`
	// Types that are assignable to Config:
	//
	//	*SMSProvider_Twilio
	Config isSMSProvider_Config `protobuf_oneof:"config"`
}

func (x *SMSProvider) Reset() {
	*x = SMSProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_settings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSProvider) ProtoMessage() {}

func (x *SMSProvider) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_settings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSProvider.ProtoReflect.Descriptor instead.
func (*SMSProvider) Descriptor() ([]byte, []int) {
	return file_zitadel_settings_proto_rawDescGZIP(), []int{4}
}

func (x *SMSProvider) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *SMSProvider) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SMSProvider) GetState() SMSProviderConfigState {
	if x != nil {
		return x.State
	}
	return SMSProviderConfigState_SMS_PROVIDER_CONFIG_STATE_UNSPECIFIED
}

func (m *SMSProvider) GetConfig() isSMSProvider_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *SMSProvider) GetTwilio() *TwilioConfig {
	if x, ok := x.GetConfig().(*SMSProvider_Twilio); ok {
		return x.Twilio
	}
	return nil
}

type isSMSProvider_Config interface {
	isSMSProvider_Config()
}

type SMSProvider_Twilio struct {
	Twilio *TwilioConfig `protobuf:"bytes,4,opt,name=twilio,proto3,oneof"`
}

func (*SMSProvider_Twilio) isSMSProvider_Config() {}

type TwilioConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid          string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	SenderNumber string `protobuf:"bytes,2,opt,name=sender_number,json=senderNumber,proto3" json:"sender_number,omitempty"`
}

func (x *TwilioConfig) Reset() {
	*x = TwilioConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_settings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwilioConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwilioConfig) ProtoMessage() {}

func (x *TwilioConfig) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_settings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwilioConfig.ProtoReflect.Descriptor instead.
func (*TwilioConfig) Descriptor() ([]byte, []int) {
	return file_zitadel_settings_proto_rawDescGZIP(), []int{5}
}

func (x *TwilioConfig) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *TwilioConfig) GetSenderNumber() string {
	if x != nil {
		return x.SenderNumber
	}
	return ""
}

type DebugNotificationProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Compact bool                  `protobuf:"varint,2,opt,name=compact,proto3" json:"compact,omitempty"`
}

func (x *DebugNotificationProvider) Reset() {
	*x = DebugNotificationProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_settings_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugNotificationProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugNotificationProvider) ProtoMessage() {}

func (x *DebugNotificationProvider) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_settings_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugNotificationProvider.ProtoReflect.Descriptor instead.
func (*DebugNotificationProvider) Descriptor() ([]byte, []int) {
	return file_zitadel_settings_proto_rawDescGZIP(), []int{6}
}

func (x *DebugNotificationProvider) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *DebugNotificationProvider) GetCompact() bool {
	if x != nil {
		return x.Compact
	}
	return false
}

type OIDCSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details                    *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	AccessTokenLifetime        *durationpb.Duration  `protobuf:"bytes,2,opt,name=access_token_lifetime,json=accessTokenLifetime,proto3" json:"access_token_lifetime,omitempty"`
	IdTokenLifetime            *durationpb.Duration  `protobuf:"bytes,3,opt,name=id_token_lifetime,json=idTokenLifetime,proto3" json:"id_token_lifetime,omitempty"`
	RefreshTokenIdleExpiration *durationpb.Duration  `protobuf:"bytes,4,opt,name=refresh_token_idle_expiration,json=refreshTokenIdleExpiration,proto3" json:"refresh_token_idle_expiration,omitempty"`
	RefreshTokenExpiration     *durationpb.Duration  `protobuf:"bytes,5,opt,name=refresh_token_expiration,json=refreshTokenExpiration,proto3" json:"refresh_token_expiration,omitempty"`
}

func (x *OIDCSettings) Reset() {
	*x = OIDCSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_settings_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDCSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDCSettings) ProtoMessage() {}

func (x *OIDCSettings) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_settings_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDCSettings.ProtoReflect.Descriptor instead.
func (*OIDCSettings) Descriptor() ([]byte, []int) {
	return file_zitadel_settings_proto_rawDescGZIP(), []int{7}
}

func (x *OIDCSettings) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *OIDCSettings) GetAccessTokenLifetime() *durationpb.Duration {
	if x != nil {
		return x.AccessTokenLifetime
	}
	return nil
}

func (x *OIDCSettings) GetIdTokenLifetime() *durationpb.Duration {
	if x != nil {
		return x.IdTokenLifetime
	}
	return nil
}

func (x *OIDCSettings) GetRefreshTokenIdleExpiration() *durationpb.Duration {
	if x != nil {
		return x.RefreshTokenIdleExpiration
	}
	return nil
}

func (x *OIDCSettings) GetRefreshTokenExpiration() *durationpb.Duration {
	if x != nil {
		return x.RefreshTokenExpiration
	}
	return nil
}

type SecurityPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	// states if iframe embedding is enabled or disabled
	EnableIframeEmbedding bool `protobuf:"varint,2,opt,name=enable_iframe_embedding,json=enableIframeEmbedding,proto3" json:"enable_iframe_embedding,omitempty"`
	// origins allowed loading ZITADEL in an iframe if enable_iframe_embedding is true
	AllowedOrigins []string `protobuf:"bytes,3,rep,name=allowed_origins,json=allowedOrigins,proto3" json:"allowed_origins,omitempty"`
}

func (x *SecurityPolicy) Reset() {
	*x = SecurityPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_settings_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityPolicy) ProtoMessage() {}

func (x *SecurityPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_settings_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityPolicy.ProtoReflect.Descriptor instead.
func (*SecurityPolicy) Descriptor() ([]byte, []int) {
	return file_zitadel_settings_proto_rawDescGZIP(), []int{8}
}

func (x *SecurityPolicy) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *SecurityPolicy) GetEnableIframeEmbedding() bool {
	if x != nil {
		return x.EnableIframeEmbedding
	}
	return false
}

func (x *SecurityPolicy) GetAllowedOrigins() []string {
	if x != nil {
		return x.AllowedOrigins
	}
	return nil
}

var File_zitadel_settings_proto protoreflect.FileDescriptor

var file_zitadel_settings_proto_rawDesc = []byte{
	0x0a, 0x16, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x03, 0x0a,
	0x0f, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x4f, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0x92, 0x41, 0x03, 0x4a, 0x01, 0x36, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0c, 0x92, 0x41, 0x09, 0x4a, 0x07, 0x22, 0x33, 0x36, 0x30, 0x30, 0x73, 0x22, 0x52,
	0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x55, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22,
	0x74, 0x0a, 0x14, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4e, 0x0a, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x09, 0x74, 0x79,
	0x70, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0c, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x6b, 0x0a, 0x18, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x4f, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x8b, 0x03, 0x0a, 0x0a, 0x53, 0x4d, 0x54, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x45, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e,
	0x92, 0x41, 0x1b, 0x4a, 0x19, 0x22, 0x6e, 0x6f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x40, 0x6d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x22, 0x52, 0x0d,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a,
	0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x4a, 0x09, 0x22, 0x5a, 0x49, 0x54, 0x41, 0x44, 0x45,
	0x4c, 0x22, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x6c, 0x73,
	0x12, 0x33, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f,
	0x92, 0x41, 0x1c, 0x4a, 0x1a, 0x22, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d,
	0x61, 0x72, 0x6b, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x3a, 0x35, 0x38, 0x37, 0x22, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x2b, 0x92, 0x41, 0x28, 0x4a, 0x26, 0x22, 0x31, 0x39, 0x37, 0x66, 0x30,
	0x31, 0x31, 0x37, 0x2d, 0x35, 0x32, 0x39, 0x65, 0x2d, 0x34, 0x34, 0x33, 0x64, 0x2d, 0x62, 0x66,
	0x36, 0x63, 0x2d, 0x30, 0x32, 0x39, 0x32, 0x64, 0x64, 0x39, 0x61, 0x30, 0x32, 0x62, 0x37, 0x22,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1e, 0x92, 0x41, 0x1b, 0x4a, 0x19, 0x22, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x74, 0x6f, 0x40,
	0x6d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x22,
	0x52, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0xdc, 0x01, 0x0a, 0x0b, 0x53, 0x4d, 0x53, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x53, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6c,
	0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x77, 0x69, 0x6c, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x74,
	0x77, 0x69, 0x6c, 0x69, 0x6f, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x45, 0x0a, 0x0c, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6a, 0x0a, 0x19, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x22, 0x8c, 0x03, 0x0a, 0x0c, 0x4f, 0x49, 0x44, 0x43, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4d, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c,
	0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x11, 0x69, 0x64, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x69,
	0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x5c,
	0x0a, 0x1d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x1a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64,
	0x6c, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x18,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xa6, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x69, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x2a, 0x8a, 0x03, 0x0a, 0x13, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x45, 0x43,
	0x52, 0x45, 0x54, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x2b,
	0x0a, 0x27, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54,
	0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x5f, 0x45,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x12, 0x2b, 0x0a, 0x27, 0x53,
	0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x4e,
	0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x03, 0x12, 0x2d, 0x0a, 0x29, 0x53, 0x45, 0x43, 0x52,
	0x45, 0x54, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x04, 0x12, 0x30, 0x0a, 0x2c, 0x53, 0x45, 0x43, 0x52, 0x45,
	0x54, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x49, 0x4e,
	0x49, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x05, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x45, 0x43,
	0x52, 0x45, 0x54, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x10, 0x06, 0x12,
	0x21, 0x0a, 0x1d, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41,
	0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x54, 0x50, 0x5f, 0x53, 0x4d, 0x53,
	0x10, 0x07, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x54, 0x50, 0x5f,
	0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x08, 0x2a, 0x85, 0x01, 0x0a, 0x16, 0x53, 0x4d, 0x53, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x29, 0x0a, 0x25, 0x53, 0x4d, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a,
	0x1a, 0x53, 0x4d, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x20, 0x0a,
	0x1c, 0x53, 0x4d, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x42,
	0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zitadel_settings_proto_rawDescOnce sync.Once
	file_zitadel_settings_proto_rawDescData = file_zitadel_settings_proto_rawDesc
)

func file_zitadel_settings_proto_rawDescGZIP() []byte {
	file_zitadel_settings_proto_rawDescOnce.Do(func() {
		file_zitadel_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_settings_proto_rawDescData)
	})
	return file_zitadel_settings_proto_rawDescData
}

var file_zitadel_settings_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_zitadel_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_zitadel_settings_proto_goTypes = []interface{}{
	(SecretGeneratorType)(0),          // 0: zitadel.settings.v1.SecretGeneratorType
	(SMSProviderConfigState)(0),       // 1: zitadel.settings.v1.SMSProviderConfigState
	(*SecretGenerator)(nil),           // 2: zitadel.settings.v1.SecretGenerator
	(*SecretGeneratorQuery)(nil),      // 3: zitadel.settings.v1.SecretGeneratorQuery
	(*SecretGeneratorTypeQuery)(nil),  // 4: zitadel.settings.v1.SecretGeneratorTypeQuery
	(*SMTPConfig)(nil),                // 5: zitadel.settings.v1.SMTPConfig
	(*SMSProvider)(nil),               // 6: zitadel.settings.v1.SMSProvider
	(*TwilioConfig)(nil),              // 7: zitadel.settings.v1.TwilioConfig
	(*DebugNotificationProvider)(nil), // 8: zitadel.settings.v1.DebugNotificationProvider
	(*OIDCSettings)(nil),              // 9: zitadel.settings.v1.OIDCSettings
	(*SecurityPolicy)(nil),            // 10: zitadel.settings.v1.SecurityPolicy
	(*object.ObjectDetails)(nil),      // 11: zitadel.v1.ObjectDetails
	(*durationpb.Duration)(nil),       // 12: google.protobuf.Duration
}
var file_zitadel_settings_proto_depIdxs = []int32{
	0,  // 0: zitadel.settings.v1.SecretGenerator.generator_type:type_name -> zitadel.settings.v1.SecretGeneratorType
	11, // 1: zitadel.settings.v1.SecretGenerator.details:type_name -> zitadel.v1.ObjectDetails
	12, // 2: zitadel.settings.v1.SecretGenerator.expiry:type_name -> google.protobuf.Duration
	4,  // 3: zitadel.settings.v1.SecretGeneratorQuery.type_query:type_name -> zitadel.settings.v1.SecretGeneratorTypeQuery
	0,  // 4: zitadel.settings.v1.SecretGeneratorTypeQuery.generator_type:type_name -> zitadel.settings.v1.SecretGeneratorType
	11, // 5: zitadel.settings.v1.SMTPConfig.details:type_name -> zitadel.v1.ObjectDetails
	11, // 6: zitadel.settings.v1.SMSProvider.details:type_name -> zitadel.v1.ObjectDetails
	1,  // 7: zitadel.settings.v1.SMSProvider.state:type_name -> zitadel.settings.v1.SMSProviderConfigState
	7,  // 8: zitadel.settings.v1.SMSProvider.twilio:type_name -> zitadel.settings.v1.TwilioConfig
	11, // 9: zitadel.settings.v1.DebugNotificationProvider.details:type_name -> zitadel.v1.ObjectDetails
	11, // 10: zitadel.settings.v1.OIDCSettings.details:type_name -> zitadel.v1.ObjectDetails
	12, // 11: zitadel.settings.v1.OIDCSettings.access_token_lifetime:type_name -> google.protobuf.Duration
	12, // 12: zitadel.settings.v1.OIDCSettings.id_token_lifetime:type_name -> google.protobuf.Duration
	12, // 13: zitadel.settings.v1.OIDCSettings.refresh_token_idle_expiration:type_name -> google.protobuf.Duration
	12, // 14: zitadel.settings.v1.OIDCSettings.refresh_token_expiration:type_name -> google.protobuf.Duration
	11, // 15: zitadel.settings.v1.SecurityPolicy.details:type_name -> zitadel.v1.ObjectDetails
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_zitadel_settings_proto_init() }
func file_zitadel_settings_proto_init() {
	if File_zitadel_settings_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zitadel_settings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_settings_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretGeneratorQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_settings_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretGeneratorTypeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_settings_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMTPConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_settings_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_settings_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwilioConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_settings_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugNotificationProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_settings_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDCSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_settings_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zitadel_settings_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SecretGeneratorQuery_TypeQuery)(nil),
	}
	file_zitadel_settings_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SMSProvider_Twilio)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_settings_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_settings_proto_goTypes,
		DependencyIndexes: file_zitadel_settings_proto_depIdxs,
		EnumInfos:         file_zitadel_settings_proto_enumTypes,
		MessageInfos:      file_zitadel_settings_proto_msgTypes,
	}.Build()
	File_zitadel_settings_proto = out.File
	file_zitadel_settings_proto_rawDesc = nil
	file_zitadel_settings_proto_goTypes = nil
	file_zitadel_settings_proto_depIdxs = nil
}
