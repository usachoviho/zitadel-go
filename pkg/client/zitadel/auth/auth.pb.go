// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: zitadel/auth.proto

package auth

import (
	_ "github.com/caos/zitadel-go/pkg/client/zitadel/authoption"
	change "github.com/caos/zitadel-go/pkg/client/zitadel/change"
	idp "github.com/caos/zitadel-go/pkg/client/zitadel/idp"
	object "github.com/caos/zitadel-go/pkg/client/zitadel/object"
	org "github.com/caos/zitadel-go/pkg/client/zitadel/org"
	policy "github.com/caos/zitadel-go/pkg/client/zitadel/policy"
	user "github.com/caos/zitadel-go/pkg/client/zitadel/user"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthzRequest) Reset() {
	*x = HealthzRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzRequest) ProtoMessage() {}

func (x *HealthzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzRequest.ProtoReflect.Descriptor instead.
func (*HealthzRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{0}
}

type HealthzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthzResponse) Reset() {
	*x = HealthzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzResponse) ProtoMessage() {}

func (x *HealthzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzResponse.ProtoReflect.Descriptor instead.
func (*HealthzResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{1}
}

//GetMyUserRequest is an empty request
// the request parameters are read from the token-header
type GetMyUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMyUserRequest) Reset() {
	*x = GetMyUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyUserRequest) ProtoMessage() {}

func (x *GetMyUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyUserRequest.ProtoReflect.Descriptor instead.
func (*GetMyUserRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{2}
}

type GetMyUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      *user.User           `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	LastLogin *timestamp.Timestamp `protobuf:"bytes,2,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
}

func (x *GetMyUserResponse) Reset() {
	*x = GetMyUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyUserResponse) ProtoMessage() {}

func (x *GetMyUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyUserResponse.ProtoReflect.Descriptor instead.
func (*GetMyUserResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{3}
}

func (x *GetMyUserResponse) GetUser() *user.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetMyUserResponse) GetLastLogin() *timestamp.Timestamp {
	if x != nil {
		return x.LastLogin
	}
	return nil
}

type ListMyUserChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *change.ChangeQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListMyUserChangesRequest) Reset() {
	*x = ListMyUserChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyUserChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyUserChangesRequest) ProtoMessage() {}

func (x *ListMyUserChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyUserChangesRequest.ProtoReflect.Descriptor instead.
func (*ListMyUserChangesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{4}
}

func (x *ListMyUserChangesRequest) GetQuery() *change.ChangeQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type ListMyUserChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*change.Change    `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListMyUserChangesResponse) Reset() {
	*x = ListMyUserChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyUserChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyUserChangesResponse) ProtoMessage() {}

func (x *ListMyUserChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyUserChangesResponse.ProtoReflect.Descriptor instead.
func (*ListMyUserChangesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{5}
}

func (x *ListMyUserChangesResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListMyUserChangesResponse) GetResult() []*change.Change {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListMyUserSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyUserSessionsRequest) Reset() {
	*x = ListMyUserSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyUserSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyUserSessionsRequest) ProtoMessage() {}

func (x *ListMyUserSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyUserSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListMyUserSessionsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{6}
}

type ListMyUserSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*user.Session `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListMyUserSessionsResponse) Reset() {
	*x = ListMyUserSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyUserSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyUserSessionsResponse) ProtoMessage() {}

func (x *ListMyUserSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyUserSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListMyUserSessionsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{7}
}

func (x *ListMyUserSessionsResponse) GetResult() []*user.Session {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateMyUserNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *UpdateMyUserNameRequest) Reset() {
	*x = UpdateMyUserNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMyUserNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMyUserNameRequest) ProtoMessage() {}

func (x *UpdateMyUserNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMyUserNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateMyUserNameRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateMyUserNameRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type UpdateMyUserNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateMyUserNameResponse) Reset() {
	*x = UpdateMyUserNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMyUserNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMyUserNameResponse) ProtoMessage() {}

func (x *UpdateMyUserNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMyUserNameResponse.ProtoReflect.Descriptor instead.
func (*UpdateMyUserNameResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateMyUserNameResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetMyPasswordComplexityPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMyPasswordComplexityPolicyRequest) Reset() {
	*x = GetMyPasswordComplexityPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyPasswordComplexityPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyPasswordComplexityPolicyRequest) ProtoMessage() {}

func (x *GetMyPasswordComplexityPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyPasswordComplexityPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetMyPasswordComplexityPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{10}
}

type GetMyPasswordComplexityPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.PasswordComplexityPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetMyPasswordComplexityPolicyResponse) Reset() {
	*x = GetMyPasswordComplexityPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyPasswordComplexityPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyPasswordComplexityPolicyResponse) ProtoMessage() {}

func (x *GetMyPasswordComplexityPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyPasswordComplexityPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetMyPasswordComplexityPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{11}
}

func (x *GetMyPasswordComplexityPolicyResponse) GetPolicy() *policy.PasswordComplexityPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type UpdateMyPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPassword string `protobuf:"bytes,1,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
}

func (x *UpdateMyPasswordRequest) Reset() {
	*x = UpdateMyPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMyPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMyPasswordRequest) ProtoMessage() {}

func (x *UpdateMyPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMyPasswordRequest.ProtoReflect.Descriptor instead.
func (*UpdateMyPasswordRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateMyPasswordRequest) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *UpdateMyPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type UpdateMyPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateMyPasswordResponse) Reset() {
	*x = UpdateMyPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMyPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMyPasswordResponse) ProtoMessage() {}

func (x *UpdateMyPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMyPasswordResponse.ProtoReflect.Descriptor instead.
func (*UpdateMyPasswordResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateMyPasswordResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetMyProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMyProfileRequest) Reset() {
	*x = GetMyProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyProfileRequest) ProtoMessage() {}

func (x *GetMyProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyProfileRequest.ProtoReflect.Descriptor instead.
func (*GetMyProfileRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{14}
}

type GetMyProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Profile *user.Profile         `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetMyProfileResponse) Reset() {
	*x = GetMyProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyProfileResponse) ProtoMessage() {}

func (x *GetMyProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyProfileResponse.ProtoReflect.Descriptor instead.
func (*GetMyProfileResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{15}
}

func (x *GetMyProfileResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *GetMyProfileResponse) GetProfile() *user.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type UpdateMyProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName         string      `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName          string      `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	NickName          string      `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	DisplayName       string      `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	PreferredLanguage string      `protobuf:"bytes,5,opt,name=preferred_language,json=preferredLanguage,proto3" json:"preferred_language,omitempty"`
	Gender            user.Gender `protobuf:"varint,6,opt,name=gender,proto3,enum=zitadel.user.v1.Gender" json:"gender,omitempty"`
}

func (x *UpdateMyProfileRequest) Reset() {
	*x = UpdateMyProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMyProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMyProfileRequest) ProtoMessage() {}

func (x *UpdateMyProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMyProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateMyProfileRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateMyProfileRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdateMyProfileRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UpdateMyProfileRequest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UpdateMyProfileRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UpdateMyProfileRequest) GetPreferredLanguage() string {
	if x != nil {
		return x.PreferredLanguage
	}
	return ""
}

func (x *UpdateMyProfileRequest) GetGender() user.Gender {
	if x != nil {
		return x.Gender
	}
	return user.Gender_GENDER_UNSPECIFIED
}

type UpdateMyProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateMyProfileResponse) Reset() {
	*x = UpdateMyProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMyProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMyProfileResponse) ProtoMessage() {}

func (x *UpdateMyProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMyProfileResponse.ProtoReflect.Descriptor instead.
func (*UpdateMyProfileResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateMyProfileResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetMyEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMyEmailRequest) Reset() {
	*x = GetMyEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyEmailRequest) ProtoMessage() {}

func (x *GetMyEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyEmailRequest.ProtoReflect.Descriptor instead.
func (*GetMyEmailRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{18}
}

type GetMyEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Email   *user.Email           `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GetMyEmailResponse) Reset() {
	*x = GetMyEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyEmailResponse) ProtoMessage() {}

func (x *GetMyEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyEmailResponse.ProtoReflect.Descriptor instead.
func (*GetMyEmailResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{19}
}

func (x *GetMyEmailResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *GetMyEmailResponse) GetEmail() *user.Email {
	if x != nil {
		return x.Email
	}
	return nil
}

type SetMyEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"` //TODO: check if no value is allowed
}

func (x *SetMyEmailRequest) Reset() {
	*x = SetMyEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMyEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMyEmailRequest) ProtoMessage() {}

func (x *SetMyEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMyEmailRequest.ProtoReflect.Descriptor instead.
func (*SetMyEmailRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{20}
}

func (x *SetMyEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type SetMyEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetMyEmailResponse) Reset() {
	*x = SetMyEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMyEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMyEmailResponse) ProtoMessage() {}

func (x *SetMyEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMyEmailResponse.ProtoReflect.Descriptor instead.
func (*SetMyEmailResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{21}
}

func (x *SetMyEmailResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type VerifyMyEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *VerifyMyEmailRequest) Reset() {
	*x = VerifyMyEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMyEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMyEmailRequest) ProtoMessage() {}

func (x *VerifyMyEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMyEmailRequest.ProtoReflect.Descriptor instead.
func (*VerifyMyEmailRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{22}
}

func (x *VerifyMyEmailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type VerifyMyEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *VerifyMyEmailResponse) Reset() {
	*x = VerifyMyEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMyEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMyEmailResponse) ProtoMessage() {}

func (x *VerifyMyEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMyEmailResponse.ProtoReflect.Descriptor instead.
func (*VerifyMyEmailResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{23}
}

func (x *VerifyMyEmailResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResendMyEmailVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResendMyEmailVerificationRequest) Reset() {
	*x = ResendMyEmailVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendMyEmailVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendMyEmailVerificationRequest) ProtoMessage() {}

func (x *ResendMyEmailVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendMyEmailVerificationRequest.ProtoReflect.Descriptor instead.
func (*ResendMyEmailVerificationRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{24}
}

type ResendMyEmailVerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResendMyEmailVerificationResponse) Reset() {
	*x = ResendMyEmailVerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendMyEmailVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendMyEmailVerificationResponse) ProtoMessage() {}

func (x *ResendMyEmailVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendMyEmailVerificationResponse.ProtoReflect.Descriptor instead.
func (*ResendMyEmailVerificationResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{25}
}

func (x *ResendMyEmailVerificationResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetMyPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMyPhoneRequest) Reset() {
	*x = GetMyPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyPhoneRequest) ProtoMessage() {}

func (x *GetMyPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyPhoneRequest.ProtoReflect.Descriptor instead.
func (*GetMyPhoneRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{26}
}

type GetMyPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Phone   *user.Phone           `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *GetMyPhoneResponse) Reset() {
	*x = GetMyPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyPhoneResponse) ProtoMessage() {}

func (x *GetMyPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyPhoneResponse.ProtoReflect.Descriptor instead.
func (*GetMyPhoneResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{27}
}

func (x *GetMyPhoneResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *GetMyPhoneResponse) GetPhone() *user.Phone {
	if x != nil {
		return x.Phone
	}
	return nil
}

type SetMyPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *SetMyPhoneRequest) Reset() {
	*x = SetMyPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMyPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMyPhoneRequest) ProtoMessage() {}

func (x *SetMyPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMyPhoneRequest.ProtoReflect.Descriptor instead.
func (*SetMyPhoneRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{28}
}

func (x *SetMyPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type SetMyPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetMyPhoneResponse) Reset() {
	*x = SetMyPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMyPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMyPhoneResponse) ProtoMessage() {}

func (x *SetMyPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMyPhoneResponse.ProtoReflect.Descriptor instead.
func (*SetMyPhoneResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{29}
}

func (x *SetMyPhoneResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type VerifyMyPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *VerifyMyPhoneRequest) Reset() {
	*x = VerifyMyPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMyPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMyPhoneRequest) ProtoMessage() {}

func (x *VerifyMyPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMyPhoneRequest.ProtoReflect.Descriptor instead.
func (*VerifyMyPhoneRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{30}
}

func (x *VerifyMyPhoneRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type VerifyMyPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *VerifyMyPhoneResponse) Reset() {
	*x = VerifyMyPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMyPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMyPhoneResponse) ProtoMessage() {}

func (x *VerifyMyPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMyPhoneResponse.ProtoReflect.Descriptor instead.
func (*VerifyMyPhoneResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{31}
}

func (x *VerifyMyPhoneResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResendMyPhoneVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResendMyPhoneVerificationRequest) Reset() {
	*x = ResendMyPhoneVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendMyPhoneVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendMyPhoneVerificationRequest) ProtoMessage() {}

func (x *ResendMyPhoneVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendMyPhoneVerificationRequest.ProtoReflect.Descriptor instead.
func (*ResendMyPhoneVerificationRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{32}
}

type ResendMyPhoneVerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResendMyPhoneVerificationResponse) Reset() {
	*x = ResendMyPhoneVerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendMyPhoneVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendMyPhoneVerificationResponse) ProtoMessage() {}

func (x *ResendMyPhoneVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendMyPhoneVerificationResponse.ProtoReflect.Descriptor instead.
func (*ResendMyPhoneVerificationResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{33}
}

func (x *ResendMyPhoneVerificationResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveMyPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveMyPhoneRequest) Reset() {
	*x = RemoveMyPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMyPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMyPhoneRequest) ProtoMessage() {}

func (x *RemoveMyPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMyPhoneRequest.ProtoReflect.Descriptor instead.
func (*RemoveMyPhoneRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{34}
}

type RemoveMyPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveMyPhoneResponse) Reset() {
	*x = RemoveMyPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMyPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMyPhoneResponse) ProtoMessage() {}

func (x *RemoveMyPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMyPhoneResponse.ProtoReflect.Descriptor instead.
func (*RemoveMyPhoneResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{35}
}

func (x *RemoveMyPhoneResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListMyLinkedIDPsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"` //PLANNED: queries for idp name and login name
}

func (x *ListMyLinkedIDPsRequest) Reset() {
	*x = ListMyLinkedIDPsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyLinkedIDPsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyLinkedIDPsRequest) ProtoMessage() {}

func (x *ListMyLinkedIDPsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyLinkedIDPsRequest.ProtoReflect.Descriptor instead.
func (*ListMyLinkedIDPsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{36}
}

func (x *ListMyLinkedIDPsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type ListMyLinkedIDPsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*idp.IDPUserLink  `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListMyLinkedIDPsResponse) Reset() {
	*x = ListMyLinkedIDPsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyLinkedIDPsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyLinkedIDPsResponse) ProtoMessage() {}

func (x *ListMyLinkedIDPsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyLinkedIDPsResponse.ProtoReflect.Descriptor instead.
func (*ListMyLinkedIDPsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{37}
}

func (x *ListMyLinkedIDPsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListMyLinkedIDPsResponse) GetResult() []*idp.IDPUserLink {
	if x != nil {
		return x.Result
	}
	return nil
}

type RemoveMyLinkedIDPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdpId        string `protobuf:"bytes,1,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
	LinkedUserId string `protobuf:"bytes,2,opt,name=linked_user_id,json=linkedUserId,proto3" json:"linked_user_id,omitempty"`
}

func (x *RemoveMyLinkedIDPRequest) Reset() {
	*x = RemoveMyLinkedIDPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMyLinkedIDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMyLinkedIDPRequest) ProtoMessage() {}

func (x *RemoveMyLinkedIDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMyLinkedIDPRequest.ProtoReflect.Descriptor instead.
func (*RemoveMyLinkedIDPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{38}
}

func (x *RemoveMyLinkedIDPRequest) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

func (x *RemoveMyLinkedIDPRequest) GetLinkedUserId() string {
	if x != nil {
		return x.LinkedUserId
	}
	return ""
}

type RemoveMyLinkedIDPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveMyLinkedIDPResponse) Reset() {
	*x = RemoveMyLinkedIDPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMyLinkedIDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMyLinkedIDPResponse) ProtoMessage() {}

func (x *RemoveMyLinkedIDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMyLinkedIDPResponse.ProtoReflect.Descriptor instead.
func (*RemoveMyLinkedIDPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{39}
}

func (x *RemoveMyLinkedIDPResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListMyAuthFactorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyAuthFactorsRequest) Reset() {
	*x = ListMyAuthFactorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyAuthFactorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyAuthFactorsRequest) ProtoMessage() {}

func (x *ListMyAuthFactorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyAuthFactorsRequest.ProtoReflect.Descriptor instead.
func (*ListMyAuthFactorsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{40}
}

type ListMyAuthFactorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*user.AuthFactor `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListMyAuthFactorsResponse) Reset() {
	*x = ListMyAuthFactorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyAuthFactorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyAuthFactorsResponse) ProtoMessage() {}

func (x *ListMyAuthFactorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyAuthFactorsResponse.ProtoReflect.Descriptor instead.
func (*ListMyAuthFactorsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{41}
}

func (x *ListMyAuthFactorsResponse) GetResult() []*user.AuthFactor {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddMyAuthFactorU2FRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMyAuthFactorU2FRequest) Reset() {
	*x = AddMyAuthFactorU2FRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyAuthFactorU2FRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyAuthFactorU2FRequest) ProtoMessage() {}

func (x *AddMyAuthFactorU2FRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyAuthFactorU2FRequest.ProtoReflect.Descriptor instead.
func (*AddMyAuthFactorU2FRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{42}
}

type AddMyAuthFactorU2FResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     *user.WebAuthNKey     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Details *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddMyAuthFactorU2FResponse) Reset() {
	*x = AddMyAuthFactorU2FResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyAuthFactorU2FResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyAuthFactorU2FResponse) ProtoMessage() {}

func (x *AddMyAuthFactorU2FResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyAuthFactorU2FResponse.ProtoReflect.Descriptor instead.
func (*AddMyAuthFactorU2FResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{43}
}

func (x *AddMyAuthFactorU2FResponse) GetKey() *user.WebAuthNKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *AddMyAuthFactorU2FResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type AddMyAuthFactorOTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMyAuthFactorOTPRequest) Reset() {
	*x = AddMyAuthFactorOTPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyAuthFactorOTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyAuthFactorOTPRequest) ProtoMessage() {}

func (x *AddMyAuthFactorOTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyAuthFactorOTPRequest.ProtoReflect.Descriptor instead.
func (*AddMyAuthFactorOTPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{44}
}

type AddMyAuthFactorOTPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string                `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Secret  string                `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	Details *object.ObjectDetails `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddMyAuthFactorOTPResponse) Reset() {
	*x = AddMyAuthFactorOTPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyAuthFactorOTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyAuthFactorOTPResponse) ProtoMessage() {}

func (x *AddMyAuthFactorOTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyAuthFactorOTPResponse.ProtoReflect.Descriptor instead.
func (*AddMyAuthFactorOTPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{45}
}

func (x *AddMyAuthFactorOTPResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AddMyAuthFactorOTPResponse) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *AddMyAuthFactorOTPResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type VerifyMyAuthFactorOTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *VerifyMyAuthFactorOTPRequest) Reset() {
	*x = VerifyMyAuthFactorOTPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMyAuthFactorOTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMyAuthFactorOTPRequest) ProtoMessage() {}

func (x *VerifyMyAuthFactorOTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMyAuthFactorOTPRequest.ProtoReflect.Descriptor instead.
func (*VerifyMyAuthFactorOTPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{46}
}

func (x *VerifyMyAuthFactorOTPRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type VerifyMyAuthFactorOTPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *VerifyMyAuthFactorOTPResponse) Reset() {
	*x = VerifyMyAuthFactorOTPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMyAuthFactorOTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMyAuthFactorOTPResponse) ProtoMessage() {}

func (x *VerifyMyAuthFactorOTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMyAuthFactorOTPResponse.ProtoReflect.Descriptor instead.
func (*VerifyMyAuthFactorOTPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{47}
}

func (x *VerifyMyAuthFactorOTPResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type VerifyMyAuthFactorU2FRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verification *user.WebAuthNVerification `protobuf:"bytes,1,opt,name=verification,proto3" json:"verification,omitempty"`
}

func (x *VerifyMyAuthFactorU2FRequest) Reset() {
	*x = VerifyMyAuthFactorU2FRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMyAuthFactorU2FRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMyAuthFactorU2FRequest) ProtoMessage() {}

func (x *VerifyMyAuthFactorU2FRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMyAuthFactorU2FRequest.ProtoReflect.Descriptor instead.
func (*VerifyMyAuthFactorU2FRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{48}
}

func (x *VerifyMyAuthFactorU2FRequest) GetVerification() *user.WebAuthNVerification {
	if x != nil {
		return x.Verification
	}
	return nil
}

type VerifyMyAuthFactorU2FResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *VerifyMyAuthFactorU2FResponse) Reset() {
	*x = VerifyMyAuthFactorU2FResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMyAuthFactorU2FResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMyAuthFactorU2FResponse) ProtoMessage() {}

func (x *VerifyMyAuthFactorU2FResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMyAuthFactorU2FResponse.ProtoReflect.Descriptor instead.
func (*VerifyMyAuthFactorU2FResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{49}
}

func (x *VerifyMyAuthFactorU2FResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveMyAuthFactorOTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveMyAuthFactorOTPRequest) Reset() {
	*x = RemoveMyAuthFactorOTPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMyAuthFactorOTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMyAuthFactorOTPRequest) ProtoMessage() {}

func (x *RemoveMyAuthFactorOTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMyAuthFactorOTPRequest.ProtoReflect.Descriptor instead.
func (*RemoveMyAuthFactorOTPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{50}
}

type RemoveMyAuthFactorOTPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveMyAuthFactorOTPResponse) Reset() {
	*x = RemoveMyAuthFactorOTPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMyAuthFactorOTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMyAuthFactorOTPResponse) ProtoMessage() {}

func (x *RemoveMyAuthFactorOTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMyAuthFactorOTPResponse.ProtoReflect.Descriptor instead.
func (*RemoveMyAuthFactorOTPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{51}
}

func (x *RemoveMyAuthFactorOTPResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveMyAuthFactorU2FRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *RemoveMyAuthFactorU2FRequest) Reset() {
	*x = RemoveMyAuthFactorU2FRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMyAuthFactorU2FRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMyAuthFactorU2FRequest) ProtoMessage() {}

func (x *RemoveMyAuthFactorU2FRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMyAuthFactorU2FRequest.ProtoReflect.Descriptor instead.
func (*RemoveMyAuthFactorU2FRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{52}
}

func (x *RemoveMyAuthFactorU2FRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type RemoveMyAuthFactorU2FResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveMyAuthFactorU2FResponse) Reset() {
	*x = RemoveMyAuthFactorU2FResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMyAuthFactorU2FResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMyAuthFactorU2FResponse) ProtoMessage() {}

func (x *RemoveMyAuthFactorU2FResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMyAuthFactorU2FResponse.ProtoReflect.Descriptor instead.
func (*RemoveMyAuthFactorU2FResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{53}
}

func (x *RemoveMyAuthFactorU2FResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListMyPasswordlessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyPasswordlessRequest) Reset() {
	*x = ListMyPasswordlessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyPasswordlessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyPasswordlessRequest) ProtoMessage() {}

func (x *ListMyPasswordlessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyPasswordlessRequest.ProtoReflect.Descriptor instead.
func (*ListMyPasswordlessRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{54}
}

type ListMyPasswordlessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*user.WebAuthNToken `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListMyPasswordlessResponse) Reset() {
	*x = ListMyPasswordlessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyPasswordlessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyPasswordlessResponse) ProtoMessage() {}

func (x *ListMyPasswordlessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyPasswordlessResponse.ProtoReflect.Descriptor instead.
func (*ListMyPasswordlessResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{55}
}

func (x *ListMyPasswordlessResponse) GetResult() []*user.WebAuthNToken {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddMyPasswordlessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMyPasswordlessRequest) Reset() {
	*x = AddMyPasswordlessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyPasswordlessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyPasswordlessRequest) ProtoMessage() {}

func (x *AddMyPasswordlessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyPasswordlessRequest.ProtoReflect.Descriptor instead.
func (*AddMyPasswordlessRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{56}
}

type AddMyPasswordlessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     *user.WebAuthNKey     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Details *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddMyPasswordlessResponse) Reset() {
	*x = AddMyPasswordlessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyPasswordlessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyPasswordlessResponse) ProtoMessage() {}

func (x *AddMyPasswordlessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyPasswordlessResponse.ProtoReflect.Descriptor instead.
func (*AddMyPasswordlessResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{57}
}

func (x *AddMyPasswordlessResponse) GetKey() *user.WebAuthNKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *AddMyPasswordlessResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type VerifyMyPasswordlessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verification *user.WebAuthNVerification `protobuf:"bytes,1,opt,name=verification,proto3" json:"verification,omitempty"`
}

func (x *VerifyMyPasswordlessRequest) Reset() {
	*x = VerifyMyPasswordlessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMyPasswordlessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMyPasswordlessRequest) ProtoMessage() {}

func (x *VerifyMyPasswordlessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMyPasswordlessRequest.ProtoReflect.Descriptor instead.
func (*VerifyMyPasswordlessRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{58}
}

func (x *VerifyMyPasswordlessRequest) GetVerification() *user.WebAuthNVerification {
	if x != nil {
		return x.Verification
	}
	return nil
}

type VerifyMyPasswordlessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *VerifyMyPasswordlessResponse) Reset() {
	*x = VerifyMyPasswordlessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMyPasswordlessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMyPasswordlessResponse) ProtoMessage() {}

func (x *VerifyMyPasswordlessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMyPasswordlessResponse.ProtoReflect.Descriptor instead.
func (*VerifyMyPasswordlessResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{59}
}

func (x *VerifyMyPasswordlessResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveMyPasswordlessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *RemoveMyPasswordlessRequest) Reset() {
	*x = RemoveMyPasswordlessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMyPasswordlessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMyPasswordlessRequest) ProtoMessage() {}

func (x *RemoveMyPasswordlessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMyPasswordlessRequest.ProtoReflect.Descriptor instead.
func (*RemoveMyPasswordlessRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{60}
}

func (x *RemoveMyPasswordlessRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type RemoveMyPasswordlessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveMyPasswordlessResponse) Reset() {
	*x = RemoveMyPasswordlessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMyPasswordlessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMyPasswordlessResponse) ProtoMessage() {}

func (x *RemoveMyPasswordlessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMyPasswordlessResponse.ProtoReflect.Descriptor instead.
func (*RemoveMyPasswordlessResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{61}
}

func (x *RemoveMyPasswordlessResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListMyUserGrantsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListMyUserGrantsRequest) Reset() {
	*x = ListMyUserGrantsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyUserGrantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyUserGrantsRequest) ProtoMessage() {}

func (x *ListMyUserGrantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyUserGrantsRequest.ProtoReflect.Descriptor instead.
func (*ListMyUserGrantsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{62}
}

func (x *ListMyUserGrantsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type ListMyUserGrantsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*UserGrant        `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListMyUserGrantsResponse) Reset() {
	*x = ListMyUserGrantsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyUserGrantsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyUserGrantsResponse) ProtoMessage() {}

func (x *ListMyUserGrantsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyUserGrantsResponse.ProtoReflect.Descriptor instead.
func (*ListMyUserGrantsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{63}
}

func (x *ListMyUserGrantsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListMyUserGrantsResponse) GetResult() []*UserGrant {
	if x != nil {
		return x.Result
	}
	return nil
}

type UserGrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId     string   `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	ProjectId string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	UserId    string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles     []string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	OrgName   string   `protobuf:"bytes,5,opt,name=org_name,json=orgName,proto3" json:"org_name,omitempty"`
	GrantId   string   `protobuf:"bytes,6,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
}

func (x *UserGrant) Reset() {
	*x = UserGrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGrant) ProtoMessage() {}

func (x *UserGrant) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGrant.ProtoReflect.Descriptor instead.
func (*UserGrant) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{64}
}

func (x *UserGrant) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UserGrant) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UserGrant) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserGrant) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserGrant) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *UserGrant) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

type ListMyProjectOrgsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*org.OrgQuery `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListMyProjectOrgsRequest) Reset() {
	*x = ListMyProjectOrgsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyProjectOrgsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyProjectOrgsRequest) ProtoMessage() {}

func (x *ListMyProjectOrgsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyProjectOrgsRequest.ProtoReflect.Descriptor instead.
func (*ListMyProjectOrgsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{65}
}

func (x *ListMyProjectOrgsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListMyProjectOrgsRequest) GetQueries() []*org.OrgQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListMyProjectOrgsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*org.Org          `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListMyProjectOrgsResponse) Reset() {
	*x = ListMyProjectOrgsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyProjectOrgsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyProjectOrgsResponse) ProtoMessage() {}

func (x *ListMyProjectOrgsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyProjectOrgsResponse.ProtoReflect.Descriptor instead.
func (*ListMyProjectOrgsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{66}
}

func (x *ListMyProjectOrgsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListMyProjectOrgsResponse) GetResult() []*org.Org {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListMyZitadelFeaturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyZitadelFeaturesRequest) Reset() {
	*x = ListMyZitadelFeaturesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyZitadelFeaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyZitadelFeaturesRequest) ProtoMessage() {}

func (x *ListMyZitadelFeaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyZitadelFeaturesRequest.ProtoReflect.Descriptor instead.
func (*ListMyZitadelFeaturesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{67}
}

type ListMyZitadelFeaturesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []string `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListMyZitadelFeaturesResponse) Reset() {
	*x = ListMyZitadelFeaturesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyZitadelFeaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyZitadelFeaturesResponse) ProtoMessage() {}

func (x *ListMyZitadelFeaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyZitadelFeaturesResponse.ProtoReflect.Descriptor instead.
func (*ListMyZitadelFeaturesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{68}
}

func (x *ListMyZitadelFeaturesResponse) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListMyZitadelPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyZitadelPermissionsRequest) Reset() {
	*x = ListMyZitadelPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyZitadelPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyZitadelPermissionsRequest) ProtoMessage() {}

func (x *ListMyZitadelPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyZitadelPermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListMyZitadelPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{69}
}

type ListMyZitadelPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []string `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListMyZitadelPermissionsResponse) Reset() {
	*x = ListMyZitadelPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyZitadelPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyZitadelPermissionsResponse) ProtoMessage() {}

func (x *ListMyZitadelPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyZitadelPermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListMyZitadelPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{70}
}

func (x *ListMyZitadelPermissionsResponse) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListMyProjectPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyProjectPermissionsRequest) Reset() {
	*x = ListMyProjectPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyProjectPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyProjectPermissionsRequest) ProtoMessage() {}

func (x *ListMyProjectPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyProjectPermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListMyProjectPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{71}
}

type ListMyProjectPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []string `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListMyProjectPermissionsResponse) Reset() {
	*x = ListMyProjectPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_auth_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyProjectPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyProjectPermissionsResponse) ProtoMessage() {}

func (x *ListMyProjectPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_auth_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyProjectPermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListMyProjectPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_auth_proto_rawDescGZIP(), []int{72}
}

func (x *ListMyProjectPermissionsResponse) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_zitadel_auth_proto protoreflect.FileDescriptor

var file_zitadel_auth_proto_rawDesc = []byte{
	0x0a, 0x12, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x12, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2f, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x69,
	0x64, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x10, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x6a, 0x0a, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x2f, 0x92, 0x41, 0x2c, 0x32,
	0x2a, 0x54, 0x68, 0x65, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x20, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x50, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x81, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1b, 0x0a, 0x19,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x1a, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x42, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x26,
	0x0a, 0x24, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74,
	0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x22, 0x75, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x28, 0x46,
	0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2c, 0x0a,
	0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x28, 0x46, 0x52, 0x0b,
	0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4f, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x15, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x7f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0xab, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x12, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x0a, 0x52, 0x11,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x22, 0x4e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x32, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0x49, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x36, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4c, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x4d,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x21, 0x52, 0x65, 0x73,
	0x65, 0x6e, 0x64, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x22, 0x37, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x10, 0x01, 0x18, 0x32,
	0x3a, 0x01, 0x2b, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x49, 0x0a, 0x12, 0x53, 0x65,
	0x74, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x36, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d,
	0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4c, 0x0a,
	0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x52,
	0x65, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x58, 0x0a, 0x21, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x4c, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x46, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49,
	0x44, 0x50, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x82, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6f, 0x0a, 0x18,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44,
	0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x06, 0x69, 0x64, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x69, 0x64, 0x70, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0e, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a,
	0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49,
	0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1b, 0x0a,
	0x19, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x55, 0x32, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x41,
	0x64, 0x64, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32,
	0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68,
	0x4e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1b,
	0x0a, 0x19, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7b, 0x0a, 0x1a, 0x41,
	0x64, 0x64, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54,
	0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3e, 0x0a, 0x1c, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54,
	0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x54, 0x0a, 0x1d, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54,
	0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x73,
	0x0a, 0x1c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53,
	0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x4e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x1d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f,
	0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x1d, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f,
	0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x45, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1b, 0x0a, 0x19,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x1a, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74,
	0x68, 0x4e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x1a, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x19,
	0x41, 0x64, 0x64, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68,
	0x4e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x72,
	0x0a, 0x1b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a,
	0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x4e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x1c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x44, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x53, 0x0a,
	0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x46, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x81, 0x01, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa6,
	0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x32, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x7b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x5a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x37, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x5a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x79, 0x5a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a,
	0x20, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x5a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x20,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x91, 0x2e, 0x0a, 0x0b, 0x41, 0x75, 0x74,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x7a, 0x12, 0x1f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08,
	0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x12, 0x78, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x82,
	0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x12, 0xa0, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x19, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x6d, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xa4, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x1a, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x99, 0x01, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x1a, 0x12,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xc9, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x35, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x20, 0x12, 0x1e, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74,
	0x79, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x99, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x1a, 0x12, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d,
	0x65, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18,
	0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x89, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x95, 0x01, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x11, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x01,
	0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x81, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x84, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x74,
	0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x1a, 0x0f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x6d, 0x65, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f,
	0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x95, 0x01, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x6d, 0x65, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xc6, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x65,
	0x6e, 0x64, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e,
	0x64, 0x4d, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18,
	0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x81, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11,
	0x12, 0x0f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x84, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x1a, 0x0f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x95, 0x01, 0x0a, 0x0d,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x3a, 0x01, 0x2a,
	0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x12, 0xc6, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x79,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x79, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29,
	0x22, 0x24, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x2f, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x8a, 0x01, 0x0a,
	0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x25,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65,
	0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x9d, 0x01, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50, 0x73, 0x12, 0x28,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xaf, 0x01, 0x0a, 0x11, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50, 0x12,
	0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64,
	0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x2a, 0x28,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xa5, 0x01, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x22, 0x1e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x12, 0xa7, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54, 0x50, 0x12, 0x2a, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54, 0x50, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x41, 0x75,
	0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x2f, 0x6f, 0x74, 0x70, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xb8, 0x01,
	0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54, 0x50, 0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54, 0x50, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d,
	0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54, 0x50, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22, 0x22,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x6f, 0x74, 0x70, 0x2f, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xad, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f,
	0x54, 0x50, 0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x2f, 0x6f, 0x74, 0x70, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xa7, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x12,
	0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x55, 0x32, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x22, 0x1a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x75, 0x32, 0x66, 0x3a, 0x01, 0x2a, 0x82,
	0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x12, 0xb8, 0x01, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x12, 0x2d, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x55, 0x32, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x55, 0x32, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x22, 0x22, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x75, 0x32, 0x66, 0x2f,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xb8, 0x01,
	0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4d, 0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d,
	0x79, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x75, 0x32, 0x66, 0x2f, 0x7b, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xa8, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x12,
	0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x22, 0x1e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x12, 0xa0, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x12, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x6d, 0x65, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73,
	0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xb1, 0x01, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x12,
	0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x2f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2f, 0x5f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xb1, 0x01, 0x0a, 0x14, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c,
	0x65, 0x73, 0x73, 0x12, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x2a, 0x21, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x6d, 0x65, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73,
	0x2f, 0x7b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x0f, 0x0a,
	0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x9d,
	0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x22, 0x16, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x65,
	0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a,
	0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xa5,
	0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4f, 0x72, 0x67, 0x73, 0x12, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4f,
	0x72, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xaf, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x79, 0x5a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x5a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x5a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x1c, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x65, 0x2f, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xbb, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x79, 0x5a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x5a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79,
	0x5a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x21, 0x22, 0x1f, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x65, 0x2f, 0x5f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xb3, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x22, 0x17, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d,
	0x65, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x42, 0xb7, 0x01, 0x5a,
	0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x6f, 0x73,
	0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x92, 0x41, 0x8c, 0x01, 0x12, 0x3f, 0x0a, 0x0c, 0x61, 0x75,
	0x74, 0x68, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x2a, 0x12, 0x28, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x61, 0x6f, 0x73, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x02, 0x32, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zitadel_auth_proto_rawDescOnce sync.Once
	file_zitadel_auth_proto_rawDescData = file_zitadel_auth_proto_rawDesc
)

func file_zitadel_auth_proto_rawDescGZIP() []byte {
	file_zitadel_auth_proto_rawDescOnce.Do(func() {
		file_zitadel_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_auth_proto_rawDescData)
	})
	return file_zitadel_auth_proto_rawDescData
}

var file_zitadel_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 73)
var file_zitadel_auth_proto_goTypes = []interface{}{
	(*HealthzRequest)(nil),                        // 0: zitadel.auth.v1.HealthzRequest
	(*HealthzResponse)(nil),                       // 1: zitadel.auth.v1.HealthzResponse
	(*GetMyUserRequest)(nil),                      // 2: zitadel.auth.v1.GetMyUserRequest
	(*GetMyUserResponse)(nil),                     // 3: zitadel.auth.v1.GetMyUserResponse
	(*ListMyUserChangesRequest)(nil),              // 4: zitadel.auth.v1.ListMyUserChangesRequest
	(*ListMyUserChangesResponse)(nil),             // 5: zitadel.auth.v1.ListMyUserChangesResponse
	(*ListMyUserSessionsRequest)(nil),             // 6: zitadel.auth.v1.ListMyUserSessionsRequest
	(*ListMyUserSessionsResponse)(nil),            // 7: zitadel.auth.v1.ListMyUserSessionsResponse
	(*UpdateMyUserNameRequest)(nil),               // 8: zitadel.auth.v1.UpdateMyUserNameRequest
	(*UpdateMyUserNameResponse)(nil),              // 9: zitadel.auth.v1.UpdateMyUserNameResponse
	(*GetMyPasswordComplexityPolicyRequest)(nil),  // 10: zitadel.auth.v1.GetMyPasswordComplexityPolicyRequest
	(*GetMyPasswordComplexityPolicyResponse)(nil), // 11: zitadel.auth.v1.GetMyPasswordComplexityPolicyResponse
	(*UpdateMyPasswordRequest)(nil),               // 12: zitadel.auth.v1.UpdateMyPasswordRequest
	(*UpdateMyPasswordResponse)(nil),              // 13: zitadel.auth.v1.UpdateMyPasswordResponse
	(*GetMyProfileRequest)(nil),                   // 14: zitadel.auth.v1.GetMyProfileRequest
	(*GetMyProfileResponse)(nil),                  // 15: zitadel.auth.v1.GetMyProfileResponse
	(*UpdateMyProfileRequest)(nil),                // 16: zitadel.auth.v1.UpdateMyProfileRequest
	(*UpdateMyProfileResponse)(nil),               // 17: zitadel.auth.v1.UpdateMyProfileResponse
	(*GetMyEmailRequest)(nil),                     // 18: zitadel.auth.v1.GetMyEmailRequest
	(*GetMyEmailResponse)(nil),                    // 19: zitadel.auth.v1.GetMyEmailResponse
	(*SetMyEmailRequest)(nil),                     // 20: zitadel.auth.v1.SetMyEmailRequest
	(*SetMyEmailResponse)(nil),                    // 21: zitadel.auth.v1.SetMyEmailResponse
	(*VerifyMyEmailRequest)(nil),                  // 22: zitadel.auth.v1.VerifyMyEmailRequest
	(*VerifyMyEmailResponse)(nil),                 // 23: zitadel.auth.v1.VerifyMyEmailResponse
	(*ResendMyEmailVerificationRequest)(nil),      // 24: zitadel.auth.v1.ResendMyEmailVerificationRequest
	(*ResendMyEmailVerificationResponse)(nil),     // 25: zitadel.auth.v1.ResendMyEmailVerificationResponse
	(*GetMyPhoneRequest)(nil),                     // 26: zitadel.auth.v1.GetMyPhoneRequest
	(*GetMyPhoneResponse)(nil),                    // 27: zitadel.auth.v1.GetMyPhoneResponse
	(*SetMyPhoneRequest)(nil),                     // 28: zitadel.auth.v1.SetMyPhoneRequest
	(*SetMyPhoneResponse)(nil),                    // 29: zitadel.auth.v1.SetMyPhoneResponse
	(*VerifyMyPhoneRequest)(nil),                  // 30: zitadel.auth.v1.VerifyMyPhoneRequest
	(*VerifyMyPhoneResponse)(nil),                 // 31: zitadel.auth.v1.VerifyMyPhoneResponse
	(*ResendMyPhoneVerificationRequest)(nil),      // 32: zitadel.auth.v1.ResendMyPhoneVerificationRequest
	(*ResendMyPhoneVerificationResponse)(nil),     // 33: zitadel.auth.v1.ResendMyPhoneVerificationResponse
	(*RemoveMyPhoneRequest)(nil),                  // 34: zitadel.auth.v1.RemoveMyPhoneRequest
	(*RemoveMyPhoneResponse)(nil),                 // 35: zitadel.auth.v1.RemoveMyPhoneResponse
	(*ListMyLinkedIDPsRequest)(nil),               // 36: zitadel.auth.v1.ListMyLinkedIDPsRequest
	(*ListMyLinkedIDPsResponse)(nil),              // 37: zitadel.auth.v1.ListMyLinkedIDPsResponse
	(*RemoveMyLinkedIDPRequest)(nil),              // 38: zitadel.auth.v1.RemoveMyLinkedIDPRequest
	(*RemoveMyLinkedIDPResponse)(nil),             // 39: zitadel.auth.v1.RemoveMyLinkedIDPResponse
	(*ListMyAuthFactorsRequest)(nil),              // 40: zitadel.auth.v1.ListMyAuthFactorsRequest
	(*ListMyAuthFactorsResponse)(nil),             // 41: zitadel.auth.v1.ListMyAuthFactorsResponse
	(*AddMyAuthFactorU2FRequest)(nil),             // 42: zitadel.auth.v1.AddMyAuthFactorU2FRequest
	(*AddMyAuthFactorU2FResponse)(nil),            // 43: zitadel.auth.v1.AddMyAuthFactorU2FResponse
	(*AddMyAuthFactorOTPRequest)(nil),             // 44: zitadel.auth.v1.AddMyAuthFactorOTPRequest
	(*AddMyAuthFactorOTPResponse)(nil),            // 45: zitadel.auth.v1.AddMyAuthFactorOTPResponse
	(*VerifyMyAuthFactorOTPRequest)(nil),          // 46: zitadel.auth.v1.VerifyMyAuthFactorOTPRequest
	(*VerifyMyAuthFactorOTPResponse)(nil),         // 47: zitadel.auth.v1.VerifyMyAuthFactorOTPResponse
	(*VerifyMyAuthFactorU2FRequest)(nil),          // 48: zitadel.auth.v1.VerifyMyAuthFactorU2FRequest
	(*VerifyMyAuthFactorU2FResponse)(nil),         // 49: zitadel.auth.v1.VerifyMyAuthFactorU2FResponse
	(*RemoveMyAuthFactorOTPRequest)(nil),          // 50: zitadel.auth.v1.RemoveMyAuthFactorOTPRequest
	(*RemoveMyAuthFactorOTPResponse)(nil),         // 51: zitadel.auth.v1.RemoveMyAuthFactorOTPResponse
	(*RemoveMyAuthFactorU2FRequest)(nil),          // 52: zitadel.auth.v1.RemoveMyAuthFactorU2FRequest
	(*RemoveMyAuthFactorU2FResponse)(nil),         // 53: zitadel.auth.v1.RemoveMyAuthFactorU2FResponse
	(*ListMyPasswordlessRequest)(nil),             // 54: zitadel.auth.v1.ListMyPasswordlessRequest
	(*ListMyPasswordlessResponse)(nil),            // 55: zitadel.auth.v1.ListMyPasswordlessResponse
	(*AddMyPasswordlessRequest)(nil),              // 56: zitadel.auth.v1.AddMyPasswordlessRequest
	(*AddMyPasswordlessResponse)(nil),             // 57: zitadel.auth.v1.AddMyPasswordlessResponse
	(*VerifyMyPasswordlessRequest)(nil),           // 58: zitadel.auth.v1.VerifyMyPasswordlessRequest
	(*VerifyMyPasswordlessResponse)(nil),          // 59: zitadel.auth.v1.VerifyMyPasswordlessResponse
	(*RemoveMyPasswordlessRequest)(nil),           // 60: zitadel.auth.v1.RemoveMyPasswordlessRequest
	(*RemoveMyPasswordlessResponse)(nil),          // 61: zitadel.auth.v1.RemoveMyPasswordlessResponse
	(*ListMyUserGrantsRequest)(nil),               // 62: zitadel.auth.v1.ListMyUserGrantsRequest
	(*ListMyUserGrantsResponse)(nil),              // 63: zitadel.auth.v1.ListMyUserGrantsResponse
	(*UserGrant)(nil),                             // 64: zitadel.auth.v1.UserGrant
	(*ListMyProjectOrgsRequest)(nil),              // 65: zitadel.auth.v1.ListMyProjectOrgsRequest
	(*ListMyProjectOrgsResponse)(nil),             // 66: zitadel.auth.v1.ListMyProjectOrgsResponse
	(*ListMyZitadelFeaturesRequest)(nil),          // 67: zitadel.auth.v1.ListMyZitadelFeaturesRequest
	(*ListMyZitadelFeaturesResponse)(nil),         // 68: zitadel.auth.v1.ListMyZitadelFeaturesResponse
	(*ListMyZitadelPermissionsRequest)(nil),       // 69: zitadel.auth.v1.ListMyZitadelPermissionsRequest
	(*ListMyZitadelPermissionsResponse)(nil),      // 70: zitadel.auth.v1.ListMyZitadelPermissionsResponse
	(*ListMyProjectPermissionsRequest)(nil),       // 71: zitadel.auth.v1.ListMyProjectPermissionsRequest
	(*ListMyProjectPermissionsResponse)(nil),      // 72: zitadel.auth.v1.ListMyProjectPermissionsResponse
	(*user.User)(nil),                             // 73: zitadel.user.v1.User
	(*timestamp.Timestamp)(nil),                   // 74: google.protobuf.Timestamp
	(*change.ChangeQuery)(nil),                    // 75: zitadel.change.v1.ChangeQuery
	(*object.ListDetails)(nil),                    // 76: zitadel.v1.ListDetails
	(*change.Change)(nil),                         // 77: zitadel.change.v1.Change
	(*user.Session)(nil),                          // 78: zitadel.user.v1.Session
	(*object.ObjectDetails)(nil),                  // 79: zitadel.v1.ObjectDetails
	(*policy.PasswordComplexityPolicy)(nil),       // 80: zitadel.policy.v1.PasswordComplexityPolicy
	(*user.Profile)(nil),                          // 81: zitadel.user.v1.Profile
	(user.Gender)(0),                              // 82: zitadel.user.v1.Gender
	(*user.Email)(nil),                            // 83: zitadel.user.v1.Email
	(*user.Phone)(nil),                            // 84: zitadel.user.v1.Phone
	(*object.ListQuery)(nil),                      // 85: zitadel.v1.ListQuery
	(*idp.IDPUserLink)(nil),                       // 86: zitadel.idp.v1.IDPUserLink
	(*user.AuthFactor)(nil),                       // 87: zitadel.user.v1.AuthFactor
	(*user.WebAuthNKey)(nil),                      // 88: zitadel.user.v1.WebAuthNKey
	(*user.WebAuthNVerification)(nil),             // 89: zitadel.user.v1.WebAuthNVerification
	(*user.WebAuthNToken)(nil),                    // 90: zitadel.user.v1.WebAuthNToken
	(*org.OrgQuery)(nil),                          // 91: zitadel.org.v1.OrgQuery
	(*org.Org)(nil),                               // 92: zitadel.org.v1.Org
}
var file_zitadel_auth_proto_depIdxs = []int32{
	73, // 0: zitadel.auth.v1.GetMyUserResponse.user:type_name -> zitadel.user.v1.User
	74, // 1: zitadel.auth.v1.GetMyUserResponse.last_login:type_name -> google.protobuf.Timestamp
	75, // 2: zitadel.auth.v1.ListMyUserChangesRequest.query:type_name -> zitadel.change.v1.ChangeQuery
	76, // 3: zitadel.auth.v1.ListMyUserChangesResponse.details:type_name -> zitadel.v1.ListDetails
	77, // 4: zitadel.auth.v1.ListMyUserChangesResponse.result:type_name -> zitadel.change.v1.Change
	78, // 5: zitadel.auth.v1.ListMyUserSessionsResponse.result:type_name -> zitadel.user.v1.Session
	79, // 6: zitadel.auth.v1.UpdateMyUserNameResponse.details:type_name -> zitadel.v1.ObjectDetails
	80, // 7: zitadel.auth.v1.GetMyPasswordComplexityPolicyResponse.policy:type_name -> zitadel.policy.v1.PasswordComplexityPolicy
	79, // 8: zitadel.auth.v1.UpdateMyPasswordResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 9: zitadel.auth.v1.GetMyProfileResponse.details:type_name -> zitadel.v1.ObjectDetails
	81, // 10: zitadel.auth.v1.GetMyProfileResponse.profile:type_name -> zitadel.user.v1.Profile
	82, // 11: zitadel.auth.v1.UpdateMyProfileRequest.gender:type_name -> zitadel.user.v1.Gender
	79, // 12: zitadel.auth.v1.UpdateMyProfileResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 13: zitadel.auth.v1.GetMyEmailResponse.details:type_name -> zitadel.v1.ObjectDetails
	83, // 14: zitadel.auth.v1.GetMyEmailResponse.email:type_name -> zitadel.user.v1.Email
	79, // 15: zitadel.auth.v1.SetMyEmailResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 16: zitadel.auth.v1.VerifyMyEmailResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 17: zitadel.auth.v1.ResendMyEmailVerificationResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 18: zitadel.auth.v1.GetMyPhoneResponse.details:type_name -> zitadel.v1.ObjectDetails
	84, // 19: zitadel.auth.v1.GetMyPhoneResponse.phone:type_name -> zitadel.user.v1.Phone
	79, // 20: zitadel.auth.v1.SetMyPhoneResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 21: zitadel.auth.v1.VerifyMyPhoneResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 22: zitadel.auth.v1.ResendMyPhoneVerificationResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 23: zitadel.auth.v1.RemoveMyPhoneResponse.details:type_name -> zitadel.v1.ObjectDetails
	85, // 24: zitadel.auth.v1.ListMyLinkedIDPsRequest.query:type_name -> zitadel.v1.ListQuery
	76, // 25: zitadel.auth.v1.ListMyLinkedIDPsResponse.details:type_name -> zitadel.v1.ListDetails
	86, // 26: zitadel.auth.v1.ListMyLinkedIDPsResponse.result:type_name -> zitadel.idp.v1.IDPUserLink
	79, // 27: zitadel.auth.v1.RemoveMyLinkedIDPResponse.details:type_name -> zitadel.v1.ObjectDetails
	87, // 28: zitadel.auth.v1.ListMyAuthFactorsResponse.result:type_name -> zitadel.user.v1.AuthFactor
	88, // 29: zitadel.auth.v1.AddMyAuthFactorU2FResponse.key:type_name -> zitadel.user.v1.WebAuthNKey
	79, // 30: zitadel.auth.v1.AddMyAuthFactorU2FResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 31: zitadel.auth.v1.AddMyAuthFactorOTPResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 32: zitadel.auth.v1.VerifyMyAuthFactorOTPResponse.details:type_name -> zitadel.v1.ObjectDetails
	89, // 33: zitadel.auth.v1.VerifyMyAuthFactorU2FRequest.verification:type_name -> zitadel.user.v1.WebAuthNVerification
	79, // 34: zitadel.auth.v1.VerifyMyAuthFactorU2FResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 35: zitadel.auth.v1.RemoveMyAuthFactorOTPResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 36: zitadel.auth.v1.RemoveMyAuthFactorU2FResponse.details:type_name -> zitadel.v1.ObjectDetails
	90, // 37: zitadel.auth.v1.ListMyPasswordlessResponse.result:type_name -> zitadel.user.v1.WebAuthNToken
	88, // 38: zitadel.auth.v1.AddMyPasswordlessResponse.key:type_name -> zitadel.user.v1.WebAuthNKey
	79, // 39: zitadel.auth.v1.AddMyPasswordlessResponse.details:type_name -> zitadel.v1.ObjectDetails
	89, // 40: zitadel.auth.v1.VerifyMyPasswordlessRequest.verification:type_name -> zitadel.user.v1.WebAuthNVerification
	79, // 41: zitadel.auth.v1.VerifyMyPasswordlessResponse.details:type_name -> zitadel.v1.ObjectDetails
	79, // 42: zitadel.auth.v1.RemoveMyPasswordlessResponse.details:type_name -> zitadel.v1.ObjectDetails
	85, // 43: zitadel.auth.v1.ListMyUserGrantsRequest.query:type_name -> zitadel.v1.ListQuery
	76, // 44: zitadel.auth.v1.ListMyUserGrantsResponse.details:type_name -> zitadel.v1.ListDetails
	64, // 45: zitadel.auth.v1.ListMyUserGrantsResponse.result:type_name -> zitadel.auth.v1.UserGrant
	85, // 46: zitadel.auth.v1.ListMyProjectOrgsRequest.query:type_name -> zitadel.v1.ListQuery
	91, // 47: zitadel.auth.v1.ListMyProjectOrgsRequest.queries:type_name -> zitadel.org.v1.OrgQuery
	76, // 48: zitadel.auth.v1.ListMyProjectOrgsResponse.details:type_name -> zitadel.v1.ListDetails
	92, // 49: zitadel.auth.v1.ListMyProjectOrgsResponse.result:type_name -> zitadel.org.v1.Org
	0,  // 50: zitadel.auth.v1.AuthService.Healthz:input_type -> zitadel.auth.v1.HealthzRequest
	2,  // 51: zitadel.auth.v1.AuthService.GetMyUser:input_type -> zitadel.auth.v1.GetMyUserRequest
	4,  // 52: zitadel.auth.v1.AuthService.ListMyUserChanges:input_type -> zitadel.auth.v1.ListMyUserChangesRequest
	6,  // 53: zitadel.auth.v1.AuthService.ListMyUserSessions:input_type -> zitadel.auth.v1.ListMyUserSessionsRequest
	8,  // 54: zitadel.auth.v1.AuthService.UpdateMyUserName:input_type -> zitadel.auth.v1.UpdateMyUserNameRequest
	10, // 55: zitadel.auth.v1.AuthService.GetMyPasswordComplexityPolicy:input_type -> zitadel.auth.v1.GetMyPasswordComplexityPolicyRequest
	12, // 56: zitadel.auth.v1.AuthService.UpdateMyPassword:input_type -> zitadel.auth.v1.UpdateMyPasswordRequest
	14, // 57: zitadel.auth.v1.AuthService.GetMyProfile:input_type -> zitadel.auth.v1.GetMyProfileRequest
	16, // 58: zitadel.auth.v1.AuthService.UpdateMyProfile:input_type -> zitadel.auth.v1.UpdateMyProfileRequest
	18, // 59: zitadel.auth.v1.AuthService.GetMyEmail:input_type -> zitadel.auth.v1.GetMyEmailRequest
	20, // 60: zitadel.auth.v1.AuthService.SetMyEmail:input_type -> zitadel.auth.v1.SetMyEmailRequest
	22, // 61: zitadel.auth.v1.AuthService.VerifyMyEmail:input_type -> zitadel.auth.v1.VerifyMyEmailRequest
	24, // 62: zitadel.auth.v1.AuthService.ResendMyEmailVerification:input_type -> zitadel.auth.v1.ResendMyEmailVerificationRequest
	26, // 63: zitadel.auth.v1.AuthService.GetMyPhone:input_type -> zitadel.auth.v1.GetMyPhoneRequest
	28, // 64: zitadel.auth.v1.AuthService.SetMyPhone:input_type -> zitadel.auth.v1.SetMyPhoneRequest
	30, // 65: zitadel.auth.v1.AuthService.VerifyMyPhone:input_type -> zitadel.auth.v1.VerifyMyPhoneRequest
	32, // 66: zitadel.auth.v1.AuthService.ResendMyPhoneVerification:input_type -> zitadel.auth.v1.ResendMyPhoneVerificationRequest
	34, // 67: zitadel.auth.v1.AuthService.RemoveMyPhone:input_type -> zitadel.auth.v1.RemoveMyPhoneRequest
	36, // 68: zitadel.auth.v1.AuthService.ListMyLinkedIDPs:input_type -> zitadel.auth.v1.ListMyLinkedIDPsRequest
	38, // 69: zitadel.auth.v1.AuthService.RemoveMyLinkedIDP:input_type -> zitadel.auth.v1.RemoveMyLinkedIDPRequest
	40, // 70: zitadel.auth.v1.AuthService.ListMyAuthFactors:input_type -> zitadel.auth.v1.ListMyAuthFactorsRequest
	44, // 71: zitadel.auth.v1.AuthService.AddMyAuthFactorOTP:input_type -> zitadel.auth.v1.AddMyAuthFactorOTPRequest
	46, // 72: zitadel.auth.v1.AuthService.VerifyMyAuthFactorOTP:input_type -> zitadel.auth.v1.VerifyMyAuthFactorOTPRequest
	50, // 73: zitadel.auth.v1.AuthService.RemoveMyAuthFactorOTP:input_type -> zitadel.auth.v1.RemoveMyAuthFactorOTPRequest
	42, // 74: zitadel.auth.v1.AuthService.AddMyAuthFactorU2F:input_type -> zitadel.auth.v1.AddMyAuthFactorU2FRequest
	48, // 75: zitadel.auth.v1.AuthService.VerifyMyAuthFactorU2F:input_type -> zitadel.auth.v1.VerifyMyAuthFactorU2FRequest
	52, // 76: zitadel.auth.v1.AuthService.RemoveMyAuthFactorU2F:input_type -> zitadel.auth.v1.RemoveMyAuthFactorU2FRequest
	54, // 77: zitadel.auth.v1.AuthService.ListMyPasswordless:input_type -> zitadel.auth.v1.ListMyPasswordlessRequest
	56, // 78: zitadel.auth.v1.AuthService.AddMyPasswordless:input_type -> zitadel.auth.v1.AddMyPasswordlessRequest
	58, // 79: zitadel.auth.v1.AuthService.VerifyMyPasswordless:input_type -> zitadel.auth.v1.VerifyMyPasswordlessRequest
	60, // 80: zitadel.auth.v1.AuthService.RemoveMyPasswordless:input_type -> zitadel.auth.v1.RemoveMyPasswordlessRequest
	62, // 81: zitadel.auth.v1.AuthService.ListMyUserGrants:input_type -> zitadel.auth.v1.ListMyUserGrantsRequest
	65, // 82: zitadel.auth.v1.AuthService.ListMyProjectOrgs:input_type -> zitadel.auth.v1.ListMyProjectOrgsRequest
	67, // 83: zitadel.auth.v1.AuthService.ListMyZitadelFeatures:input_type -> zitadel.auth.v1.ListMyZitadelFeaturesRequest
	69, // 84: zitadel.auth.v1.AuthService.ListMyZitadelPermissions:input_type -> zitadel.auth.v1.ListMyZitadelPermissionsRequest
	71, // 85: zitadel.auth.v1.AuthService.ListMyProjectPermissions:input_type -> zitadel.auth.v1.ListMyProjectPermissionsRequest
	1,  // 86: zitadel.auth.v1.AuthService.Healthz:output_type -> zitadel.auth.v1.HealthzResponse
	3,  // 87: zitadel.auth.v1.AuthService.GetMyUser:output_type -> zitadel.auth.v1.GetMyUserResponse
	5,  // 88: zitadel.auth.v1.AuthService.ListMyUserChanges:output_type -> zitadel.auth.v1.ListMyUserChangesResponse
	7,  // 89: zitadel.auth.v1.AuthService.ListMyUserSessions:output_type -> zitadel.auth.v1.ListMyUserSessionsResponse
	9,  // 90: zitadel.auth.v1.AuthService.UpdateMyUserName:output_type -> zitadel.auth.v1.UpdateMyUserNameResponse
	11, // 91: zitadel.auth.v1.AuthService.GetMyPasswordComplexityPolicy:output_type -> zitadel.auth.v1.GetMyPasswordComplexityPolicyResponse
	13, // 92: zitadel.auth.v1.AuthService.UpdateMyPassword:output_type -> zitadel.auth.v1.UpdateMyPasswordResponse
	15, // 93: zitadel.auth.v1.AuthService.GetMyProfile:output_type -> zitadel.auth.v1.GetMyProfileResponse
	17, // 94: zitadel.auth.v1.AuthService.UpdateMyProfile:output_type -> zitadel.auth.v1.UpdateMyProfileResponse
	19, // 95: zitadel.auth.v1.AuthService.GetMyEmail:output_type -> zitadel.auth.v1.GetMyEmailResponse
	21, // 96: zitadel.auth.v1.AuthService.SetMyEmail:output_type -> zitadel.auth.v1.SetMyEmailResponse
	23, // 97: zitadel.auth.v1.AuthService.VerifyMyEmail:output_type -> zitadel.auth.v1.VerifyMyEmailResponse
	25, // 98: zitadel.auth.v1.AuthService.ResendMyEmailVerification:output_type -> zitadel.auth.v1.ResendMyEmailVerificationResponse
	27, // 99: zitadel.auth.v1.AuthService.GetMyPhone:output_type -> zitadel.auth.v1.GetMyPhoneResponse
	29, // 100: zitadel.auth.v1.AuthService.SetMyPhone:output_type -> zitadel.auth.v1.SetMyPhoneResponse
	31, // 101: zitadel.auth.v1.AuthService.VerifyMyPhone:output_type -> zitadel.auth.v1.VerifyMyPhoneResponse
	33, // 102: zitadel.auth.v1.AuthService.ResendMyPhoneVerification:output_type -> zitadel.auth.v1.ResendMyPhoneVerificationResponse
	35, // 103: zitadel.auth.v1.AuthService.RemoveMyPhone:output_type -> zitadel.auth.v1.RemoveMyPhoneResponse
	37, // 104: zitadel.auth.v1.AuthService.ListMyLinkedIDPs:output_type -> zitadel.auth.v1.ListMyLinkedIDPsResponse
	39, // 105: zitadel.auth.v1.AuthService.RemoveMyLinkedIDP:output_type -> zitadel.auth.v1.RemoveMyLinkedIDPResponse
	41, // 106: zitadel.auth.v1.AuthService.ListMyAuthFactors:output_type -> zitadel.auth.v1.ListMyAuthFactorsResponse
	45, // 107: zitadel.auth.v1.AuthService.AddMyAuthFactorOTP:output_type -> zitadel.auth.v1.AddMyAuthFactorOTPResponse
	47, // 108: zitadel.auth.v1.AuthService.VerifyMyAuthFactorOTP:output_type -> zitadel.auth.v1.VerifyMyAuthFactorOTPResponse
	51, // 109: zitadel.auth.v1.AuthService.RemoveMyAuthFactorOTP:output_type -> zitadel.auth.v1.RemoveMyAuthFactorOTPResponse
	43, // 110: zitadel.auth.v1.AuthService.AddMyAuthFactorU2F:output_type -> zitadel.auth.v1.AddMyAuthFactorU2FResponse
	49, // 111: zitadel.auth.v1.AuthService.VerifyMyAuthFactorU2F:output_type -> zitadel.auth.v1.VerifyMyAuthFactorU2FResponse
	53, // 112: zitadel.auth.v1.AuthService.RemoveMyAuthFactorU2F:output_type -> zitadel.auth.v1.RemoveMyAuthFactorU2FResponse
	55, // 113: zitadel.auth.v1.AuthService.ListMyPasswordless:output_type -> zitadel.auth.v1.ListMyPasswordlessResponse
	57, // 114: zitadel.auth.v1.AuthService.AddMyPasswordless:output_type -> zitadel.auth.v1.AddMyPasswordlessResponse
	59, // 115: zitadel.auth.v1.AuthService.VerifyMyPasswordless:output_type -> zitadel.auth.v1.VerifyMyPasswordlessResponse
	61, // 116: zitadel.auth.v1.AuthService.RemoveMyPasswordless:output_type -> zitadel.auth.v1.RemoveMyPasswordlessResponse
	63, // 117: zitadel.auth.v1.AuthService.ListMyUserGrants:output_type -> zitadel.auth.v1.ListMyUserGrantsResponse
	66, // 118: zitadel.auth.v1.AuthService.ListMyProjectOrgs:output_type -> zitadel.auth.v1.ListMyProjectOrgsResponse
	68, // 119: zitadel.auth.v1.AuthService.ListMyZitadelFeatures:output_type -> zitadel.auth.v1.ListMyZitadelFeaturesResponse
	70, // 120: zitadel.auth.v1.AuthService.ListMyZitadelPermissions:output_type -> zitadel.auth.v1.ListMyZitadelPermissionsResponse
	72, // 121: zitadel.auth.v1.AuthService.ListMyProjectPermissions:output_type -> zitadel.auth.v1.ListMyProjectPermissionsResponse
	86, // [86:122] is the sub-list for method output_type
	50, // [50:86] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_zitadel_auth_proto_init() }
func file_zitadel_auth_proto_init() {
	if File_zitadel_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zitadel_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthzRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyUserChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyUserChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyUserSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyUserSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMyUserNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMyUserNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyPasswordComplexityPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyPasswordComplexityPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMyPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMyPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMyProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMyProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMyEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMyEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMyEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMyEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendMyEmailVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendMyEmailVerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMyPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMyPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMyPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMyPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendMyPhoneVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendMyPhoneVerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMyPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMyPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyLinkedIDPsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyLinkedIDPsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMyLinkedIDPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMyLinkedIDPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyAuthFactorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyAuthFactorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyAuthFactorU2FRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyAuthFactorU2FResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyAuthFactorOTPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyAuthFactorOTPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMyAuthFactorOTPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMyAuthFactorOTPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMyAuthFactorU2FRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMyAuthFactorU2FResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMyAuthFactorOTPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMyAuthFactorOTPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMyAuthFactorU2FRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMyAuthFactorU2FResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyPasswordlessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyPasswordlessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyPasswordlessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyPasswordlessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMyPasswordlessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMyPasswordlessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMyPasswordlessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMyPasswordlessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyUserGrantsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyUserGrantsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyProjectOrgsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyProjectOrgsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyZitadelFeaturesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyZitadelFeaturesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyZitadelPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyZitadelPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyProjectPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_auth_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyProjectPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   73,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zitadel_auth_proto_goTypes,
		DependencyIndexes: file_zitadel_auth_proto_depIdxs,
		MessageInfos:      file_zitadel_auth_proto_msgTypes,
	}.Build()
	File_zitadel_auth_proto = out.File
	file_zitadel_auth_proto_rawDesc = nil
	file_zitadel_auth_proto_goTypes = nil
	file_zitadel_auth_proto_depIdxs = nil
}
