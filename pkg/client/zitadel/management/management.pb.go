// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: zitadel/management.proto

package management

import (
	action "github.com/caos/zitadel-go/pkg/client/zitadel/action"
	app "github.com/caos/zitadel-go/pkg/client/zitadel/app"
	authn "github.com/caos/zitadel-go/pkg/client/zitadel/authn"
	_ "github.com/caos/zitadel-go/pkg/client/zitadel/authoption"
	change "github.com/caos/zitadel-go/pkg/client/zitadel/change"
	features "github.com/caos/zitadel-go/pkg/client/zitadel/features"
	idp "github.com/caos/zitadel-go/pkg/client/zitadel/idp"
	member "github.com/caos/zitadel-go/pkg/client/zitadel/member"
	message "github.com/caos/zitadel-go/pkg/client/zitadel/message"
	metadata "github.com/caos/zitadel-go/pkg/client/zitadel/metadata"
	object "github.com/caos/zitadel-go/pkg/client/zitadel/object"
	org "github.com/caos/zitadel-go/pkg/client/zitadel/org"
	policy "github.com/caos/zitadel-go/pkg/client/zitadel/policy"
	project "github.com/caos/zitadel-go/pkg/client/zitadel/project"
	text "github.com/caos/zitadel-go/pkg/client/zitadel/text"
	user "github.com/caos/zitadel-go/pkg/client/zitadel/user"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendHumanResetPasswordNotificationRequest_Type int32

const (
	SendHumanResetPasswordNotificationRequest_TYPE_EMAIL SendHumanResetPasswordNotificationRequest_Type = 0
	SendHumanResetPasswordNotificationRequest_TYPE_SMS   SendHumanResetPasswordNotificationRequest_Type = 1
)

// Enum value maps for SendHumanResetPasswordNotificationRequest_Type.
var (
	SendHumanResetPasswordNotificationRequest_Type_name = map[int32]string{
		0: "TYPE_EMAIL",
		1: "TYPE_SMS",
	}
	SendHumanResetPasswordNotificationRequest_Type_value = map[string]int32{
		"TYPE_EMAIL": 0,
		"TYPE_SMS":   1,
	}
)

func (x SendHumanResetPasswordNotificationRequest_Type) Enum() *SendHumanResetPasswordNotificationRequest_Type {
	p := new(SendHumanResetPasswordNotificationRequest_Type)
	*p = x
	return p
}

func (x SendHumanResetPasswordNotificationRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendHumanResetPasswordNotificationRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_management_proto_enumTypes[0].Descriptor()
}

func (SendHumanResetPasswordNotificationRequest_Type) Type() protoreflect.EnumType {
	return &file_zitadel_management_proto_enumTypes[0]
}

func (x SendHumanResetPasswordNotificationRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendHumanResetPasswordNotificationRequest_Type.Descriptor instead.
func (SendHumanResetPasswordNotificationRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{74, 0}
}

//This is an empty request
type HealthzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthzRequest) Reset() {
	*x = HealthzRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzRequest) ProtoMessage() {}

func (x *HealthzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzRequest.ProtoReflect.Descriptor instead.
func (*HealthzRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{0}
}

//This is an empty response
type HealthzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthzResponse) Reset() {
	*x = HealthzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzResponse) ProtoMessage() {}

func (x *HealthzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzResponse.ProtoReflect.Descriptor instead.
func (*HealthzResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{1}
}

//This is an empty request
type GetOIDCInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOIDCInformationRequest) Reset() {
	*x = GetOIDCInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOIDCInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOIDCInformationRequest) ProtoMessage() {}

func (x *GetOIDCInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOIDCInformationRequest.ProtoReflect.Descriptor instead.
func (*GetOIDCInformationRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{2}
}

type GetOIDCInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issuer            string `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	DiscoveryEndpoint string `protobuf:"bytes,2,opt,name=discovery_endpoint,json=discoveryEndpoint,proto3" json:"discovery_endpoint,omitempty"`
}

func (x *GetOIDCInformationResponse) Reset() {
	*x = GetOIDCInformationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOIDCInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOIDCInformationResponse) ProtoMessage() {}

func (x *GetOIDCInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOIDCInformationResponse.ProtoReflect.Descriptor instead.
func (*GetOIDCInformationResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{3}
}

func (x *GetOIDCInformationResponse) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *GetOIDCInformationResponse) GetDiscoveryEndpoint() string {
	if x != nil {
		return x.DiscoveryEndpoint
	}
	return ""
}

//This is an empty request
type GetIAMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetIAMRequest) Reset() {
	*x = GetIAMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIAMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIAMRequest) ProtoMessage() {}

func (x *GetIAMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIAMRequest.ProtoReflect.Descriptor instead.
func (*GetIAMRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{4}
}

type GetIAMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalOrgId  string `protobuf:"bytes,1,opt,name=global_org_id,json=globalOrgId,proto3" json:"global_org_id,omitempty"`
	IamProjectId string `protobuf:"bytes,2,opt,name=iam_project_id,json=iamProjectId,proto3" json:"iam_project_id,omitempty"`
}

func (x *GetIAMResponse) Reset() {
	*x = GetIAMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIAMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIAMResponse) ProtoMessage() {}

func (x *GetIAMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIAMResponse.ProtoReflect.Descriptor instead.
func (*GetIAMResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{5}
}

func (x *GetIAMResponse) GetGlobalOrgId() string {
	if x != nil {
		return x.GlobalOrgId
	}
	return ""
}

func (x *GetIAMResponse) GetIamProjectId() string {
	if x != nil {
		return x.IamProjectId
	}
	return ""
}

//This is an empty request
type GetSupportedLanguagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSupportedLanguagesRequest) Reset() {
	*x = GetSupportedLanguagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSupportedLanguagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedLanguagesRequest) ProtoMessage() {}

func (x *GetSupportedLanguagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedLanguagesRequest.ProtoReflect.Descriptor instead.
func (*GetSupportedLanguagesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{6}
}

type GetSupportedLanguagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Languages []string `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *GetSupportedLanguagesResponse) Reset() {
	*x = GetSupportedLanguagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSupportedLanguagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedLanguagesResponse) ProtoMessage() {}

func (x *GetSupportedLanguagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedLanguagesResponse.ProtoReflect.Descriptor instead.
func (*GetSupportedLanguagesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{7}
}

func (x *GetSupportedLanguagesResponse) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

type GetUserByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserByIDRequest) Reset() {
	*x = GetUserByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByIDRequest) ProtoMessage() {}

func (x *GetUserByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByIDRequest.ProtoReflect.Descriptor instead.
func (*GetUserByIDRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUserByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *user.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserByIDResponse) Reset() {
	*x = GetUserByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByIDResponse) ProtoMessage() {}

func (x *GetUserByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByIDResponse.ProtoReflect.Descriptor instead.
func (*GetUserByIDResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserByIDResponse) GetUser() *user.User {
	if x != nil {
		return x.User
	}
	return nil
}

type GetUserByLoginNameGlobalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginName string `protobuf:"bytes,1,opt,name=login_name,json=loginName,proto3" json:"login_name,omitempty"`
}

func (x *GetUserByLoginNameGlobalRequest) Reset() {
	*x = GetUserByLoginNameGlobalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByLoginNameGlobalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByLoginNameGlobalRequest) ProtoMessage() {}

func (x *GetUserByLoginNameGlobalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByLoginNameGlobalRequest.ProtoReflect.Descriptor instead.
func (*GetUserByLoginNameGlobalRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserByLoginNameGlobalRequest) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

type GetUserByLoginNameGlobalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *user.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserByLoginNameGlobalResponse) Reset() {
	*x = GetUserByLoginNameGlobalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByLoginNameGlobalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByLoginNameGlobalResponse) ProtoMessage() {}

func (x *GetUserByLoginNameGlobalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByLoginNameGlobalResponse.ProtoReflect.Descriptor instead.
func (*GetUserByLoginNameGlobalResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserByLoginNameGlobalResponse) GetUser() *user.User {
	if x != nil {
		return x.User
	}
	return nil
}

type ListUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// the field the result is sorted
	SortingColumn user.UserFieldName `protobuf:"varint,2,opt,name=sorting_column,json=sortingColumn,proto3,enum=zitadel.user.v1.UserFieldName" json:"sorting_column,omitempty"`
	//criterias the client is looking for
	Queries []*user.SearchQuery `protobuf:"bytes,3,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{12}
}

func (x *ListUsersRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListUsersRequest) GetSortingColumn() user.UserFieldName {
	if x != nil {
		return x.SortingColumn
	}
	return user.UserFieldName(0)
}

func (x *ListUsersRequest) GetQueries() []*user.SearchQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details       *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	SortingColumn user.UserFieldName  `protobuf:"varint,2,opt,name=sorting_column,json=sortingColumn,proto3,enum=zitadel.user.v1.UserFieldName" json:"sorting_column,omitempty"`
	Result        []*user.User        `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{13}
}

func (x *ListUsersResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListUsersResponse) GetSortingColumn() user.UserFieldName {
	if x != nil {
		return x.SortingColumn
	}
	return user.UserFieldName(0)
}

func (x *ListUsersResponse) GetResult() []*user.User {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListUserChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query  *change.ChangeQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	UserId string              `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ListUserChangesRequest) Reset() {
	*x = ListUserChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserChangesRequest) ProtoMessage() {}

func (x *ListUserChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserChangesRequest.ProtoReflect.Descriptor instead.
func (*ListUserChangesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{14}
}

func (x *ListUserChangesRequest) GetQuery() *change.ChangeQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListUserChangesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListUserChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary infos)
	Result []*change.Change `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListUserChangesResponse) Reset() {
	*x = ListUserChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserChangesResponse) ProtoMessage() {}

func (x *ListUserChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserChangesResponse.ProtoReflect.Descriptor instead.
func (*ListUserChangesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{15}
}

func (x *ListUserChangesResponse) GetResult() []*change.Change {
	if x != nil {
		return x.Result
	}
	return nil
}

type IsUserUniqueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *IsUserUniqueRequest) Reset() {
	*x = IsUserUniqueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserUniqueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserUniqueRequest) ProtoMessage() {}

func (x *IsUserUniqueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserUniqueRequest.ProtoReflect.Descriptor instead.
func (*IsUserUniqueRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{16}
}

func (x *IsUserUniqueRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *IsUserUniqueRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type IsUserUniqueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUnique bool `protobuf:"varint,1,opt,name=is_unique,json=isUnique,proto3" json:"is_unique,omitempty"`
}

func (x *IsUserUniqueResponse) Reset() {
	*x = IsUserUniqueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserUniqueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserUniqueResponse) ProtoMessage() {}

func (x *IsUserUniqueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserUniqueResponse.ProtoReflect.Descriptor instead.
func (*IsUserUniqueResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{17}
}

func (x *IsUserUniqueResponse) GetIsUnique() bool {
	if x != nil {
		return x.IsUnique
	}
	return false
}

type AddHumanUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName        string                       `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Profile         *AddHumanUserRequest_Profile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	Email           *AddHumanUserRequest_Email   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone           *AddHumanUserRequest_Phone   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	InitialPassword string                       `protobuf:"bytes,5,opt,name=initial_password,json=initialPassword,proto3" json:"initial_password,omitempty"`
}

func (x *AddHumanUserRequest) Reset() {
	*x = AddHumanUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHumanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHumanUserRequest) ProtoMessage() {}

func (x *AddHumanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHumanUserRequest.ProtoReflect.Descriptor instead.
func (*AddHumanUserRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{18}
}

func (x *AddHumanUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddHumanUserRequest) GetProfile() *AddHumanUserRequest_Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *AddHumanUserRequest) GetEmail() *AddHumanUserRequest_Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *AddHumanUserRequest) GetPhone() *AddHumanUserRequest_Phone {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *AddHumanUserRequest) GetInitialPassword() string {
	if x != nil {
		return x.InitialPassword
	}
	return ""
}

type AddHumanUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string                `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Details *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddHumanUserResponse) Reset() {
	*x = AddHumanUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHumanUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHumanUserResponse) ProtoMessage() {}

func (x *AddHumanUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHumanUserResponse.ProtoReflect.Descriptor instead.
func (*AddHumanUserResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{19}
}

func (x *AddHumanUserResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddHumanUserResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ImportHumanUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName                        string                          `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Profile                         *ImportHumanUserRequest_Profile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	Email                           *ImportHumanUserRequest_Email   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone                           *ImportHumanUserRequest_Phone   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Password                        string                          `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	PasswordChangeRequired          bool                            `protobuf:"varint,6,opt,name=password_change_required,json=passwordChangeRequired,proto3" json:"password_change_required,omitempty"`
	RequestPasswordlessRegistration bool                            `protobuf:"varint,7,opt,name=request_passwordless_registration,json=requestPasswordlessRegistration,proto3" json:"request_passwordless_registration,omitempty"`
}

func (x *ImportHumanUserRequest) Reset() {
	*x = ImportHumanUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportHumanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportHumanUserRequest) ProtoMessage() {}

func (x *ImportHumanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportHumanUserRequest.ProtoReflect.Descriptor instead.
func (*ImportHumanUserRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{20}
}

func (x *ImportHumanUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ImportHumanUserRequest) GetProfile() *ImportHumanUserRequest_Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *ImportHumanUserRequest) GetEmail() *ImportHumanUserRequest_Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *ImportHumanUserRequest) GetPhone() *ImportHumanUserRequest_Phone {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *ImportHumanUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ImportHumanUserRequest) GetPasswordChangeRequired() bool {
	if x != nil {
		return x.PasswordChangeRequired
	}
	return false
}

func (x *ImportHumanUserRequest) GetRequestPasswordlessRegistration() bool {
	if x != nil {
		return x.RequestPasswordlessRegistration
	}
	return false
}

type ImportHumanUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                   string                                            `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Details                  *object.ObjectDetails                             `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	PasswordlessRegistration *ImportHumanUserResponse_PasswordlessRegistration `protobuf:"bytes,3,opt,name=passwordless_registration,json=passwordlessRegistration,proto3" json:"passwordless_registration,omitempty"`
}

func (x *ImportHumanUserResponse) Reset() {
	*x = ImportHumanUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportHumanUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportHumanUserResponse) ProtoMessage() {}

func (x *ImportHumanUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportHumanUserResponse.ProtoReflect.Descriptor instead.
func (*ImportHumanUserResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{21}
}

func (x *ImportHumanUserResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ImportHumanUserResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ImportHumanUserResponse) GetPasswordlessRegistration() *ImportHumanUserResponse_PasswordlessRegistration {
	if x != nil {
		return x.PasswordlessRegistration
	}
	return nil
}

type AddMachineUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName    string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AddMachineUserRequest) Reset() {
	*x = AddMachineUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMachineUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMachineUserRequest) ProtoMessage() {}

func (x *AddMachineUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMachineUserRequest.ProtoReflect.Descriptor instead.
func (*AddMachineUserRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{22}
}

func (x *AddMachineUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddMachineUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddMachineUserRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddMachineUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string                `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Details *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddMachineUserResponse) Reset() {
	*x = AddMachineUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMachineUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMachineUserResponse) ProtoMessage() {}

func (x *AddMachineUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMachineUserResponse.ProtoReflect.Descriptor instead.
func (*AddMachineUserResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{23}
}

func (x *AddMachineUserResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddMachineUserResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type DeactivateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeactivateUserRequest) Reset() {
	*x = DeactivateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateUserRequest) ProtoMessage() {}

func (x *DeactivateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateUserRequest.ProtoReflect.Descriptor instead.
func (*DeactivateUserRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{24}
}

func (x *DeactivateUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeactivateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DeactivateUserResponse) Reset() {
	*x = DeactivateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateUserResponse) ProtoMessage() {}

func (x *DeactivateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateUserResponse.ProtoReflect.Descriptor instead.
func (*DeactivateUserResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{25}
}

func (x *DeactivateUserResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ReactivateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReactivateUserRequest) Reset() {
	*x = ReactivateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateUserRequest) ProtoMessage() {}

func (x *ReactivateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateUserRequest.ProtoReflect.Descriptor instead.
func (*ReactivateUserRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{26}
}

func (x *ReactivateUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReactivateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ReactivateUserResponse) Reset() {
	*x = ReactivateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateUserResponse) ProtoMessage() {}

func (x *ReactivateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateUserResponse.ProtoReflect.Descriptor instead.
func (*ReactivateUserResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{27}
}

func (x *ReactivateUserResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type LockUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LockUserRequest) Reset() {
	*x = LockUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockUserRequest) ProtoMessage() {}

func (x *LockUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockUserRequest.ProtoReflect.Descriptor instead.
func (*LockUserRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{28}
}

func (x *LockUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LockUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *LockUserResponse) Reset() {
	*x = LockUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockUserResponse) ProtoMessage() {}

func (x *LockUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockUserResponse.ProtoReflect.Descriptor instead.
func (*LockUserResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{29}
}

func (x *LockUserResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UnlockUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnlockUserRequest) Reset() {
	*x = UnlockUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockUserRequest) ProtoMessage() {}

func (x *UnlockUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockUserRequest.ProtoReflect.Descriptor instead.
func (*UnlockUserRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{30}
}

func (x *UnlockUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnlockUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UnlockUserResponse) Reset() {
	*x = UnlockUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockUserResponse) ProtoMessage() {}

func (x *UnlockUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockUserResponse.ProtoReflect.Descriptor instead.
func (*UnlockUserResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{31}
}

func (x *UnlockUserResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveUserRequest) Reset() {
	*x = RemoveUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserRequest) ProtoMessage() {}

func (x *RemoveUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{32}
}

func (x *RemoveUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveUserResponse) Reset() {
	*x = RemoveUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserResponse) ProtoMessage() {}

func (x *RemoveUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserResponse.ProtoReflect.Descriptor instead.
func (*RemoveUserResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{33}
}

func (x *RemoveUserResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateUserNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *UpdateUserNameRequest) Reset() {
	*x = UpdateUserNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserNameRequest) ProtoMessage() {}

func (x *UpdateUserNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserNameRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateUserNameRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserNameRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type UpdateUserNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateUserNameResponse) Reset() {
	*x = UpdateUserNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserNameResponse) ProtoMessage() {}

func (x *UpdateUserNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserNameResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserNameResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateUserNameResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListUserMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Query   *object.ListQuery         `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Queries []*metadata.MetadataQuery `protobuf:"bytes,3,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListUserMetadataRequest) Reset() {
	*x = ListUserMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserMetadataRequest) ProtoMessage() {}

func (x *ListUserMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserMetadataRequest.ProtoReflect.Descriptor instead.
func (*ListUserMetadataRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{36}
}

func (x *ListUserMetadataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListUserMetadataRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListUserMetadataRequest) GetQueries() []*metadata.MetadataQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListUserMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails  `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*metadata.Metadata `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListUserMetadataResponse) Reset() {
	*x = ListUserMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserMetadataResponse) ProtoMessage() {}

func (x *ListUserMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserMetadataResponse.ProtoReflect.Descriptor instead.
func (*ListUserMetadataResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{37}
}

func (x *ListUserMetadataResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListUserMetadataResponse) GetResult() []*metadata.Metadata {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetUserMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetUserMetadataRequest) Reset() {
	*x = GetUserMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMetadataRequest) ProtoMessage() {}

func (x *GetUserMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetUserMetadataRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{38}
}

func (x *GetUserMetadataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetUserMetadataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetUserMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *metadata.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GetUserMetadataResponse) Reset() {
	*x = GetUserMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMetadataResponse) ProtoMessage() {}

func (x *GetUserMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetUserMetadataResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{39}
}

func (x *GetUserMetadataResponse) GetMetadata() *metadata.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type SetUserMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetUserMetadataRequest) Reset() {
	*x = SetUserMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserMetadataRequest) ProtoMessage() {}

func (x *SetUserMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserMetadataRequest.ProtoReflect.Descriptor instead.
func (*SetUserMetadataRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{40}
}

func (x *SetUserMetadataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetUserMetadataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetUserMetadataRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SetUserMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Details *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetUserMetadataResponse) Reset() {
	*x = SetUserMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserMetadataResponse) ProtoMessage() {}

func (x *SetUserMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserMetadataResponse.ProtoReflect.Descriptor instead.
func (*SetUserMetadataResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{41}
}

func (x *SetUserMetadataResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetUserMetadataResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type BulkSetUserMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata []*BulkSetUserMetadataRequest_Metadata `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *BulkSetUserMetadataRequest) Reset() {
	*x = BulkSetUserMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkSetUserMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkSetUserMetadataRequest) ProtoMessage() {}

func (x *BulkSetUserMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkSetUserMetadataRequest.ProtoReflect.Descriptor instead.
func (*BulkSetUserMetadataRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{42}
}

func (x *BulkSetUserMetadataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BulkSetUserMetadataRequest) GetMetadata() []*BulkSetUserMetadataRequest_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type BulkSetUserMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *BulkSetUserMetadataResponse) Reset() {
	*x = BulkSetUserMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkSetUserMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkSetUserMetadataResponse) ProtoMessage() {}

func (x *BulkSetUserMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkSetUserMetadataResponse.ProtoReflect.Descriptor instead.
func (*BulkSetUserMetadataResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{43}
}

func (x *BulkSetUserMetadataResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveUserMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *RemoveUserMetadataRequest) Reset() {
	*x = RemoveUserMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserMetadataRequest) ProtoMessage() {}

func (x *RemoveUserMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserMetadataRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserMetadataRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{44}
}

func (x *RemoveUserMetadataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoveUserMetadataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type RemoveUserMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveUserMetadataResponse) Reset() {
	*x = RemoveUserMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserMetadataResponse) ProtoMessage() {}

func (x *RemoveUserMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserMetadataResponse.ProtoReflect.Descriptor instead.
func (*RemoveUserMetadataResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{45}
}

func (x *RemoveUserMetadataResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type BulkRemoveUserMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Keys []string `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *BulkRemoveUserMetadataRequest) Reset() {
	*x = BulkRemoveUserMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkRemoveUserMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRemoveUserMetadataRequest) ProtoMessage() {}

func (x *BulkRemoveUserMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRemoveUserMetadataRequest.ProtoReflect.Descriptor instead.
func (*BulkRemoveUserMetadataRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{46}
}

func (x *BulkRemoveUserMetadataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BulkRemoveUserMetadataRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type BulkRemoveUserMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *BulkRemoveUserMetadataResponse) Reset() {
	*x = BulkRemoveUserMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkRemoveUserMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRemoveUserMetadataResponse) ProtoMessage() {}

func (x *BulkRemoveUserMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRemoveUserMetadataResponse.ProtoReflect.Descriptor instead.
func (*BulkRemoveUserMetadataResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{47}
}

func (x *BulkRemoveUserMetadataResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetHumanProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetHumanProfileRequest) Reset() {
	*x = GetHumanProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHumanProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHumanProfileRequest) ProtoMessage() {}

func (x *GetHumanProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHumanProfileRequest.ProtoReflect.Descriptor instead.
func (*GetHumanProfileRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{48}
}

func (x *GetHumanProfileRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetHumanProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Profile *user.Profile         `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetHumanProfileResponse) Reset() {
	*x = GetHumanProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHumanProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHumanProfileResponse) ProtoMessage() {}

func (x *GetHumanProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHumanProfileResponse.ProtoReflect.Descriptor instead.
func (*GetHumanProfileResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{49}
}

func (x *GetHumanProfileResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *GetHumanProfileResponse) GetProfile() *user.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type UpdateHumanProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string      `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FirstName         string      `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName          string      `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	NickName          string      `protobuf:"bytes,4,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	DisplayName       string      `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	PreferredLanguage string      `protobuf:"bytes,6,opt,name=preferred_language,json=preferredLanguage,proto3" json:"preferred_language,omitempty"`
	Gender            user.Gender `protobuf:"varint,7,opt,name=gender,proto3,enum=zitadel.user.v1.Gender" json:"gender,omitempty"`
}

func (x *UpdateHumanProfileRequest) Reset() {
	*x = UpdateHumanProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHumanProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHumanProfileRequest) ProtoMessage() {}

func (x *UpdateHumanProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHumanProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateHumanProfileRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateHumanProfileRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateHumanProfileRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdateHumanProfileRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UpdateHumanProfileRequest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UpdateHumanProfileRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UpdateHumanProfileRequest) GetPreferredLanguage() string {
	if x != nil {
		return x.PreferredLanguage
	}
	return ""
}

func (x *UpdateHumanProfileRequest) GetGender() user.Gender {
	if x != nil {
		return x.Gender
	}
	return user.Gender(0)
}

type UpdateHumanProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateHumanProfileResponse) Reset() {
	*x = UpdateHumanProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHumanProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHumanProfileResponse) ProtoMessage() {}

func (x *UpdateHumanProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHumanProfileResponse.ProtoReflect.Descriptor instead.
func (*UpdateHumanProfileResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateHumanProfileResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetHumanEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetHumanEmailRequest) Reset() {
	*x = GetHumanEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHumanEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHumanEmailRequest) ProtoMessage() {}

func (x *GetHumanEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHumanEmailRequest.ProtoReflect.Descriptor instead.
func (*GetHumanEmailRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{52}
}

func (x *GetHumanEmailRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetHumanEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Email   *user.Email           `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GetHumanEmailResponse) Reset() {
	*x = GetHumanEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHumanEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHumanEmailResponse) ProtoMessage() {}

func (x *GetHumanEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHumanEmailResponse.ProtoReflect.Descriptor instead.
func (*GetHumanEmailResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{53}
}

func (x *GetHumanEmailResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *GetHumanEmailResponse) GetEmail() *user.Email {
	if x != nil {
		return x.Email
	}
	return nil
}

type UpdateHumanEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email           string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	IsEmailVerified bool   `protobuf:"varint,3,opt,name=is_email_verified,json=isEmailVerified,proto3" json:"is_email_verified,omitempty"`
}

func (x *UpdateHumanEmailRequest) Reset() {
	*x = UpdateHumanEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHumanEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHumanEmailRequest) ProtoMessage() {}

func (x *UpdateHumanEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHumanEmailRequest.ProtoReflect.Descriptor instead.
func (*UpdateHumanEmailRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateHumanEmailRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateHumanEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateHumanEmailRequest) GetIsEmailVerified() bool {
	if x != nil {
		return x.IsEmailVerified
	}
	return false
}

type UpdateHumanEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateHumanEmailResponse) Reset() {
	*x = UpdateHumanEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHumanEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHumanEmailResponse) ProtoMessage() {}

func (x *UpdateHumanEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHumanEmailResponse.ProtoReflect.Descriptor instead.
func (*UpdateHumanEmailResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{55}
}

func (x *UpdateHumanEmailResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResendHumanInitializationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email  string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ResendHumanInitializationRequest) Reset() {
	*x = ResendHumanInitializationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendHumanInitializationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendHumanInitializationRequest) ProtoMessage() {}

func (x *ResendHumanInitializationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendHumanInitializationRequest.ProtoReflect.Descriptor instead.
func (*ResendHumanInitializationRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{56}
}

func (x *ResendHumanInitializationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResendHumanInitializationRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ResendHumanInitializationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResendHumanInitializationResponse) Reset() {
	*x = ResendHumanInitializationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendHumanInitializationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendHumanInitializationResponse) ProtoMessage() {}

func (x *ResendHumanInitializationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendHumanInitializationResponse.ProtoReflect.Descriptor instead.
func (*ResendHumanInitializationResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{57}
}

func (x *ResendHumanInitializationResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResendHumanEmailVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ResendHumanEmailVerificationRequest) Reset() {
	*x = ResendHumanEmailVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendHumanEmailVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendHumanEmailVerificationRequest) ProtoMessage() {}

func (x *ResendHumanEmailVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendHumanEmailVerificationRequest.ProtoReflect.Descriptor instead.
func (*ResendHumanEmailVerificationRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{58}
}

func (x *ResendHumanEmailVerificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ResendHumanEmailVerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResendHumanEmailVerificationResponse) Reset() {
	*x = ResendHumanEmailVerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendHumanEmailVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendHumanEmailVerificationResponse) ProtoMessage() {}

func (x *ResendHumanEmailVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendHumanEmailVerificationResponse.ProtoReflect.Descriptor instead.
func (*ResendHumanEmailVerificationResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{59}
}

func (x *ResendHumanEmailVerificationResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetHumanPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetHumanPhoneRequest) Reset() {
	*x = GetHumanPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHumanPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHumanPhoneRequest) ProtoMessage() {}

func (x *GetHumanPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHumanPhoneRequest.ProtoReflect.Descriptor instead.
func (*GetHumanPhoneRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{60}
}

func (x *GetHumanPhoneRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetHumanPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Phone   *user.Phone           `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *GetHumanPhoneResponse) Reset() {
	*x = GetHumanPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHumanPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHumanPhoneResponse) ProtoMessage() {}

func (x *GetHumanPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHumanPhoneResponse.ProtoReflect.Descriptor instead.
func (*GetHumanPhoneResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{61}
}

func (x *GetHumanPhoneResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *GetHumanPhoneResponse) GetPhone() *user.Phone {
	if x != nil {
		return x.Phone
	}
	return nil
}

type UpdateHumanPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Phone           string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	IsPhoneVerified bool   `protobuf:"varint,3,opt,name=is_phone_verified,json=isPhoneVerified,proto3" json:"is_phone_verified,omitempty"`
}

func (x *UpdateHumanPhoneRequest) Reset() {
	*x = UpdateHumanPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHumanPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHumanPhoneRequest) ProtoMessage() {}

func (x *UpdateHumanPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHumanPhoneRequest.ProtoReflect.Descriptor instead.
func (*UpdateHumanPhoneRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{62}
}

func (x *UpdateHumanPhoneRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateHumanPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateHumanPhoneRequest) GetIsPhoneVerified() bool {
	if x != nil {
		return x.IsPhoneVerified
	}
	return false
}

type UpdateHumanPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateHumanPhoneResponse) Reset() {
	*x = UpdateHumanPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHumanPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHumanPhoneResponse) ProtoMessage() {}

func (x *UpdateHumanPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHumanPhoneResponse.ProtoReflect.Descriptor instead.
func (*UpdateHumanPhoneResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateHumanPhoneResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveHumanPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveHumanPhoneRequest) Reset() {
	*x = RemoveHumanPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanPhoneRequest) ProtoMessage() {}

func (x *RemoveHumanPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanPhoneRequest.ProtoReflect.Descriptor instead.
func (*RemoveHumanPhoneRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{64}
}

func (x *RemoveHumanPhoneRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveHumanPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveHumanPhoneResponse) Reset() {
	*x = RemoveHumanPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanPhoneResponse) ProtoMessage() {}

func (x *RemoveHumanPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanPhoneResponse.ProtoReflect.Descriptor instead.
func (*RemoveHumanPhoneResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{65}
}

func (x *RemoveHumanPhoneResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResendHumanPhoneVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ResendHumanPhoneVerificationRequest) Reset() {
	*x = ResendHumanPhoneVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendHumanPhoneVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendHumanPhoneVerificationRequest) ProtoMessage() {}

func (x *ResendHumanPhoneVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendHumanPhoneVerificationRequest.ProtoReflect.Descriptor instead.
func (*ResendHumanPhoneVerificationRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{66}
}

func (x *ResendHumanPhoneVerificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ResendHumanPhoneVerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResendHumanPhoneVerificationResponse) Reset() {
	*x = ResendHumanPhoneVerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendHumanPhoneVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendHumanPhoneVerificationResponse) ProtoMessage() {}

func (x *ResendHumanPhoneVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendHumanPhoneVerificationResponse.ProtoReflect.Descriptor instead.
func (*ResendHumanPhoneVerificationResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{67}
}

func (x *ResendHumanPhoneVerificationResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveHumanAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveHumanAvatarRequest) Reset() {
	*x = RemoveHumanAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanAvatarRequest) ProtoMessage() {}

func (x *RemoveHumanAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanAvatarRequest.ProtoReflect.Descriptor instead.
func (*RemoveHumanAvatarRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{68}
}

func (x *RemoveHumanAvatarRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveHumanAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveHumanAvatarResponse) Reset() {
	*x = RemoveHumanAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanAvatarResponse) ProtoMessage() {}

func (x *RemoveHumanAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanAvatarResponse.ProtoReflect.Descriptor instead.
func (*RemoveHumanAvatarResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{69}
}

func (x *RemoveHumanAvatarResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type SetHumanInitialPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SetHumanInitialPasswordRequest) Reset() {
	*x = SetHumanInitialPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHumanInitialPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHumanInitialPasswordRequest) ProtoMessage() {}

func (x *SetHumanInitialPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHumanInitialPasswordRequest.ProtoReflect.Descriptor instead.
func (*SetHumanInitialPasswordRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{70}
}

func (x *SetHumanInitialPasswordRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetHumanInitialPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SetHumanInitialPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetHumanInitialPasswordResponse) Reset() {
	*x = SetHumanInitialPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHumanInitialPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHumanInitialPasswordResponse) ProtoMessage() {}

func (x *SetHumanInitialPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHumanInitialPasswordResponse.ProtoReflect.Descriptor instead.
func (*SetHumanInitialPasswordResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{71}
}

func (x *SetHumanInitialPasswordResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type SetHumanPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Password         string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	NoChangeRequired bool   `protobuf:"varint,3,opt,name=no_change_required,json=noChangeRequired,proto3" json:"no_change_required,omitempty"`
}

func (x *SetHumanPasswordRequest) Reset() {
	*x = SetHumanPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHumanPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHumanPasswordRequest) ProtoMessage() {}

func (x *SetHumanPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHumanPasswordRequest.ProtoReflect.Descriptor instead.
func (*SetHumanPasswordRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{72}
}

func (x *SetHumanPasswordRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetHumanPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SetHumanPasswordRequest) GetNoChangeRequired() bool {
	if x != nil {
		return x.NoChangeRequired
	}
	return false
}

type SetHumanPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetHumanPasswordResponse) Reset() {
	*x = SetHumanPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHumanPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHumanPasswordResponse) ProtoMessage() {}

func (x *SetHumanPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHumanPasswordResponse.ProtoReflect.Descriptor instead.
func (*SetHumanPasswordResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{73}
}

func (x *SetHumanPasswordResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type SendHumanResetPasswordNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string                                         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type   SendHumanResetPasswordNotificationRequest_Type `protobuf:"varint,2,opt,name=type,proto3,enum=zitadel.management.v1.SendHumanResetPasswordNotificationRequest_Type" json:"type,omitempty"`
}

func (x *SendHumanResetPasswordNotificationRequest) Reset() {
	*x = SendHumanResetPasswordNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendHumanResetPasswordNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendHumanResetPasswordNotificationRequest) ProtoMessage() {}

func (x *SendHumanResetPasswordNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendHumanResetPasswordNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendHumanResetPasswordNotificationRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{74}
}

func (x *SendHumanResetPasswordNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendHumanResetPasswordNotificationRequest) GetType() SendHumanResetPasswordNotificationRequest_Type {
	if x != nil {
		return x.Type
	}
	return SendHumanResetPasswordNotificationRequest_TYPE_EMAIL
}

type SendHumanResetPasswordNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SendHumanResetPasswordNotificationResponse) Reset() {
	*x = SendHumanResetPasswordNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendHumanResetPasswordNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendHumanResetPasswordNotificationResponse) ProtoMessage() {}

func (x *SendHumanResetPasswordNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendHumanResetPasswordNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendHumanResetPasswordNotificationResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{75}
}

func (x *SendHumanResetPasswordNotificationResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListHumanAuthFactorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ListHumanAuthFactorsRequest) Reset() {
	*x = ListHumanAuthFactorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHumanAuthFactorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHumanAuthFactorsRequest) ProtoMessage() {}

func (x *ListHumanAuthFactorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHumanAuthFactorsRequest.ProtoReflect.Descriptor instead.
func (*ListHumanAuthFactorsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{76}
}

func (x *ListHumanAuthFactorsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListHumanAuthFactorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*user.AuthFactor `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListHumanAuthFactorsResponse) Reset() {
	*x = ListHumanAuthFactorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHumanAuthFactorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHumanAuthFactorsResponse) ProtoMessage() {}

func (x *ListHumanAuthFactorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHumanAuthFactorsResponse.ProtoReflect.Descriptor instead.
func (*ListHumanAuthFactorsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{77}
}

func (x *ListHumanAuthFactorsResponse) GetResult() []*user.AuthFactor {
	if x != nil {
		return x.Result
	}
	return nil
}

type RemoveHumanAuthFactorOTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveHumanAuthFactorOTPRequest) Reset() {
	*x = RemoveHumanAuthFactorOTPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanAuthFactorOTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanAuthFactorOTPRequest) ProtoMessage() {}

func (x *RemoveHumanAuthFactorOTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanAuthFactorOTPRequest.ProtoReflect.Descriptor instead.
func (*RemoveHumanAuthFactorOTPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{78}
}

func (x *RemoveHumanAuthFactorOTPRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveHumanAuthFactorOTPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveHumanAuthFactorOTPResponse) Reset() {
	*x = RemoveHumanAuthFactorOTPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanAuthFactorOTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanAuthFactorOTPResponse) ProtoMessage() {}

func (x *RemoveHumanAuthFactorOTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanAuthFactorOTPResponse.ProtoReflect.Descriptor instead.
func (*RemoveHumanAuthFactorOTPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{79}
}

func (x *RemoveHumanAuthFactorOTPResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveHumanAuthFactorU2FRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TokenId string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *RemoveHumanAuthFactorU2FRequest) Reset() {
	*x = RemoveHumanAuthFactorU2FRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanAuthFactorU2FRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanAuthFactorU2FRequest) ProtoMessage() {}

func (x *RemoveHumanAuthFactorU2FRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanAuthFactorU2FRequest.ProtoReflect.Descriptor instead.
func (*RemoveHumanAuthFactorU2FRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{80}
}

func (x *RemoveHumanAuthFactorU2FRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveHumanAuthFactorU2FRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type RemoveHumanAuthFactorU2FResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveHumanAuthFactorU2FResponse) Reset() {
	*x = RemoveHumanAuthFactorU2FResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanAuthFactorU2FResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanAuthFactorU2FResponse) ProtoMessage() {}

func (x *RemoveHumanAuthFactorU2FResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanAuthFactorU2FResponse.ProtoReflect.Descriptor instead.
func (*RemoveHumanAuthFactorU2FResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{81}
}

func (x *RemoveHumanAuthFactorU2FResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListHumanPasswordlessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ListHumanPasswordlessRequest) Reset() {
	*x = ListHumanPasswordlessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHumanPasswordlessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHumanPasswordlessRequest) ProtoMessage() {}

func (x *ListHumanPasswordlessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHumanPasswordlessRequest.ProtoReflect.Descriptor instead.
func (*ListHumanPasswordlessRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{82}
}

func (x *ListHumanPasswordlessRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListHumanPasswordlessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*user.WebAuthNToken `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListHumanPasswordlessResponse) Reset() {
	*x = ListHumanPasswordlessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHumanPasswordlessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHumanPasswordlessResponse) ProtoMessage() {}

func (x *ListHumanPasswordlessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHumanPasswordlessResponse.ProtoReflect.Descriptor instead.
func (*ListHumanPasswordlessResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{83}
}

func (x *ListHumanPasswordlessResponse) GetResult() []*user.WebAuthNToken {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddPasswordlessRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddPasswordlessRegistrationRequest) Reset() {
	*x = AddPasswordlessRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPasswordlessRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPasswordlessRegistrationRequest) ProtoMessage() {}

func (x *AddPasswordlessRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPasswordlessRegistrationRequest.ProtoReflect.Descriptor instead.
func (*AddPasswordlessRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{84}
}

func (x *AddPasswordlessRegistrationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddPasswordlessRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details    *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Link       string                `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	Expiration *durationpb.Duration  `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *AddPasswordlessRegistrationResponse) Reset() {
	*x = AddPasswordlessRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPasswordlessRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPasswordlessRegistrationResponse) ProtoMessage() {}

func (x *AddPasswordlessRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPasswordlessRegistrationResponse.ProtoReflect.Descriptor instead.
func (*AddPasswordlessRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{85}
}

func (x *AddPasswordlessRegistrationResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AddPasswordlessRegistrationResponse) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *AddPasswordlessRegistrationResponse) GetExpiration() *durationpb.Duration {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type SendPasswordlessRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SendPasswordlessRegistrationRequest) Reset() {
	*x = SendPasswordlessRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPasswordlessRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPasswordlessRegistrationRequest) ProtoMessage() {}

func (x *SendPasswordlessRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPasswordlessRegistrationRequest.ProtoReflect.Descriptor instead.
func (*SendPasswordlessRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{86}
}

func (x *SendPasswordlessRegistrationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SendPasswordlessRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SendPasswordlessRegistrationResponse) Reset() {
	*x = SendPasswordlessRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPasswordlessRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPasswordlessRegistrationResponse) ProtoMessage() {}

func (x *SendPasswordlessRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPasswordlessRegistrationResponse.ProtoReflect.Descriptor instead.
func (*SendPasswordlessRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{87}
}

func (x *SendPasswordlessRegistrationResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveHumanPasswordlessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TokenId string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *RemoveHumanPasswordlessRequest) Reset() {
	*x = RemoveHumanPasswordlessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanPasswordlessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanPasswordlessRequest) ProtoMessage() {}

func (x *RemoveHumanPasswordlessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanPasswordlessRequest.ProtoReflect.Descriptor instead.
func (*RemoveHumanPasswordlessRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{88}
}

func (x *RemoveHumanPasswordlessRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveHumanPasswordlessRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type RemoveHumanPasswordlessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveHumanPasswordlessResponse) Reset() {
	*x = RemoveHumanPasswordlessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanPasswordlessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanPasswordlessResponse) ProtoMessage() {}

func (x *RemoveHumanPasswordlessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanPasswordlessResponse.ProtoReflect.Descriptor instead.
func (*RemoveHumanPasswordlessResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{89}
}

func (x *RemoveHumanPasswordlessResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateMachineRequest) Reset() {
	*x = UpdateMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMachineRequest) ProtoMessage() {}

func (x *UpdateMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMachineRequest.ProtoReflect.Descriptor instead.
func (*UpdateMachineRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{90}
}

func (x *UpdateMachineRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateMachineRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMachineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateMachineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateMachineResponse) Reset() {
	*x = UpdateMachineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMachineResponse) ProtoMessage() {}

func (x *UpdateMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMachineResponse.ProtoReflect.Descriptor instead.
func (*UpdateMachineResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{91}
}

func (x *UpdateMachineResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetMachineKeyByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KeyId  string `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *GetMachineKeyByIDsRequest) Reset() {
	*x = GetMachineKeyByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachineKeyByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineKeyByIDsRequest) ProtoMessage() {}

func (x *GetMachineKeyByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineKeyByIDsRequest.ProtoReflect.Descriptor instead.
func (*GetMachineKeyByIDsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{92}
}

func (x *GetMachineKeyByIDsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetMachineKeyByIDsRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type GetMachineKeyByIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *authn.Key `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetMachineKeyByIDsResponse) Reset() {
	*x = GetMachineKeyByIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachineKeyByIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineKeyByIDsResponse) ProtoMessage() {}

func (x *GetMachineKeyByIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineKeyByIDsResponse.ProtoReflect.Descriptor instead.
func (*GetMachineKeyByIDsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{93}
}

func (x *GetMachineKeyByIDsResponse) GetKey() *authn.Key {
	if x != nil {
		return x.Key
	}
	return nil
}

type ListMachineKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListMachineKeysRequest) Reset() {
	*x = ListMachineKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachineKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachineKeysRequest) ProtoMessage() {}

func (x *ListMachineKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachineKeysRequest.ProtoReflect.Descriptor instead.
func (*ListMachineKeysRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{94}
}

func (x *ListMachineKeysRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListMachineKeysRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type ListMachineKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*authn.Key        `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListMachineKeysResponse) Reset() {
	*x = ListMachineKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachineKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachineKeysResponse) ProtoMessage() {}

func (x *ListMachineKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachineKeysResponse.ProtoReflect.Descriptor instead.
func (*ListMachineKeysResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{95}
}

func (x *ListMachineKeysResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListMachineKeysResponse) GetResult() []*authn.Key {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddMachineKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type           authn.KeyType          `protobuf:"varint,2,opt,name=type,proto3,enum=zitadel.authn.v1.KeyType" json:"type,omitempty"`
	ExpirationDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
}

func (x *AddMachineKeyRequest) Reset() {
	*x = AddMachineKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMachineKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMachineKeyRequest) ProtoMessage() {}

func (x *AddMachineKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMachineKeyRequest.ProtoReflect.Descriptor instead.
func (*AddMachineKeyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{96}
}

func (x *AddMachineKeyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddMachineKeyRequest) GetType() authn.KeyType {
	if x != nil {
		return x.Type
	}
	return authn.KeyType(0)
}

func (x *AddMachineKeyRequest) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

type AddMachineKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId      string                `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	KeyDetails []byte                `protobuf:"bytes,2,opt,name=key_details,json=keyDetails,proto3" json:"key_details,omitempty"`
	Details    *object.ObjectDetails `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddMachineKeyResponse) Reset() {
	*x = AddMachineKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMachineKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMachineKeyResponse) ProtoMessage() {}

func (x *AddMachineKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMachineKeyResponse.ProtoReflect.Descriptor instead.
func (*AddMachineKeyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{97}
}

func (x *AddMachineKeyResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *AddMachineKeyResponse) GetKeyDetails() []byte {
	if x != nil {
		return x.KeyDetails
	}
	return nil
}

func (x *AddMachineKeyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveMachineKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KeyId  string `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *RemoveMachineKeyRequest) Reset() {
	*x = RemoveMachineKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMachineKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMachineKeyRequest) ProtoMessage() {}

func (x *RemoveMachineKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMachineKeyRequest.ProtoReflect.Descriptor instead.
func (*RemoveMachineKeyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{98}
}

func (x *RemoveMachineKeyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveMachineKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type RemoveMachineKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveMachineKeyResponse) Reset() {
	*x = RemoveMachineKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMachineKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMachineKeyResponse) ProtoMessage() {}

func (x *RemoveMachineKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMachineKeyResponse.ProtoReflect.Descriptor instead.
func (*RemoveMachineKeyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{99}
}

func (x *RemoveMachineKeyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListHumanLinkedIDPsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListHumanLinkedIDPsRequest) Reset() {
	*x = ListHumanLinkedIDPsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHumanLinkedIDPsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHumanLinkedIDPsRequest) ProtoMessage() {}

func (x *ListHumanLinkedIDPsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHumanLinkedIDPsRequest.ProtoReflect.Descriptor instead.
func (*ListHumanLinkedIDPsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{100}
}

func (x *ListHumanLinkedIDPsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListHumanLinkedIDPsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type ListHumanLinkedIDPsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*idp.IDPUserLink  `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListHumanLinkedIDPsResponse) Reset() {
	*x = ListHumanLinkedIDPsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHumanLinkedIDPsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHumanLinkedIDPsResponse) ProtoMessage() {}

func (x *ListHumanLinkedIDPsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHumanLinkedIDPsResponse.ProtoReflect.Descriptor instead.
func (*ListHumanLinkedIDPsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{101}
}

func (x *ListHumanLinkedIDPsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListHumanLinkedIDPsResponse) GetResult() []*idp.IDPUserLink {
	if x != nil {
		return x.Result
	}
	return nil
}

type RemoveHumanLinkedIDPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IdpId        string `protobuf:"bytes,2,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
	LinkedUserId string `protobuf:"bytes,3,opt,name=linked_user_id,json=linkedUserId,proto3" json:"linked_user_id,omitempty"`
}

func (x *RemoveHumanLinkedIDPRequest) Reset() {
	*x = RemoveHumanLinkedIDPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanLinkedIDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanLinkedIDPRequest) ProtoMessage() {}

func (x *RemoveHumanLinkedIDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanLinkedIDPRequest.ProtoReflect.Descriptor instead.
func (*RemoveHumanLinkedIDPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{102}
}

func (x *RemoveHumanLinkedIDPRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveHumanLinkedIDPRequest) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

func (x *RemoveHumanLinkedIDPRequest) GetLinkedUserId() string {
	if x != nil {
		return x.LinkedUserId
	}
	return ""
}

type RemoveHumanLinkedIDPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveHumanLinkedIDPResponse) Reset() {
	*x = RemoveHumanLinkedIDPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveHumanLinkedIDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHumanLinkedIDPResponse) ProtoMessage() {}

func (x *RemoveHumanLinkedIDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHumanLinkedIDPResponse.ProtoReflect.Descriptor instead.
func (*RemoveHumanLinkedIDPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{103}
}

func (x *RemoveHumanLinkedIDPResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListUserMembershipsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//the field the result is sorted
	Query *object.ListQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*user.MembershipQuery `protobuf:"bytes,3,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListUserMembershipsRequest) Reset() {
	*x = ListUserMembershipsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserMembershipsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserMembershipsRequest) ProtoMessage() {}

func (x *ListUserMembershipsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserMembershipsRequest.ProtoReflect.Descriptor instead.
func (*ListUserMembershipsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{104}
}

func (x *ListUserMembershipsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListUserMembershipsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListUserMembershipsRequest) GetQueries() []*user.MembershipQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListUserMembershipsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*user.Membership  `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListUserMembershipsResponse) Reset() {
	*x = ListUserMembershipsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserMembershipsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserMembershipsResponse) ProtoMessage() {}

func (x *ListUserMembershipsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserMembershipsResponse.ProtoReflect.Descriptor instead.
func (*ListUserMembershipsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{105}
}

func (x *ListUserMembershipsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListUserMembershipsResponse) GetResult() []*user.Membership {
	if x != nil {
		return x.Result
	}
	return nil
}

//This is an empty request
type GetMyOrgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMyOrgRequest) Reset() {
	*x = GetMyOrgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyOrgRequest) ProtoMessage() {}

func (x *GetMyOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyOrgRequest.ProtoReflect.Descriptor instead.
func (*GetMyOrgRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{106}
}

type GetMyOrgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org *org.Org `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *GetMyOrgResponse) Reset() {
	*x = GetMyOrgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyOrgResponse) ProtoMessage() {}

func (x *GetMyOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyOrgResponse.ProtoReflect.Descriptor instead.
func (*GetMyOrgResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{107}
}

func (x *GetMyOrgResponse) GetOrg() *org.Org {
	if x != nil {
		return x.Org
	}
	return nil
}

type GetOrgByDomainGlobalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *GetOrgByDomainGlobalRequest) Reset() {
	*x = GetOrgByDomainGlobalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgByDomainGlobalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgByDomainGlobalRequest) ProtoMessage() {}

func (x *GetOrgByDomainGlobalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgByDomainGlobalRequest.ProtoReflect.Descriptor instead.
func (*GetOrgByDomainGlobalRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{108}
}

func (x *GetOrgByDomainGlobalRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type ListOrgChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *change.ChangeQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListOrgChangesRequest) Reset() {
	*x = ListOrgChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgChangesRequest) ProtoMessage() {}

func (x *ListOrgChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgChangesRequest.ProtoReflect.Descriptor instead.
func (*ListOrgChangesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{109}
}

func (x *ListOrgChangesRequest) GetQuery() *change.ChangeQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type ListOrgChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary infos)
	Result []*change.Change `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListOrgChangesResponse) Reset() {
	*x = ListOrgChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgChangesResponse) ProtoMessage() {}

func (x *ListOrgChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgChangesResponse.ProtoReflect.Descriptor instead.
func (*ListOrgChangesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{110}
}

func (x *ListOrgChangesResponse) GetResult() []*change.Change {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetOrgByDomainGlobalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org *org.Org `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *GetOrgByDomainGlobalResponse) Reset() {
	*x = GetOrgByDomainGlobalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgByDomainGlobalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgByDomainGlobalResponse) ProtoMessage() {}

func (x *GetOrgByDomainGlobalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgByDomainGlobalResponse.ProtoReflect.Descriptor instead.
func (*GetOrgByDomainGlobalResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{111}
}

func (x *GetOrgByDomainGlobalResponse) GetOrg() *org.Org {
	if x != nil {
		return x.Org
	}
	return nil
}

type AddOrgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AddOrgRequest) Reset() {
	*x = AddOrgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgRequest) ProtoMessage() {}

func (x *AddOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgRequest.ProtoReflect.Descriptor instead.
func (*AddOrgRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{112}
}

func (x *AddOrgRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddOrgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Details *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddOrgResponse) Reset() {
	*x = AddOrgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgResponse) ProtoMessage() {}

func (x *AddOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgResponse.ProtoReflect.Descriptor instead.
func (*AddOrgResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{113}
}

func (x *AddOrgResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddOrgResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateOrgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateOrgRequest) Reset() {
	*x = UpdateOrgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgRequest) ProtoMessage() {}

func (x *UpdateOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrgRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{114}
}

func (x *UpdateOrgRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateOrgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateOrgResponse) Reset() {
	*x = UpdateOrgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgResponse) ProtoMessage() {}

func (x *UpdateOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrgResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{115}
}

func (x *UpdateOrgResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type DeactivateOrgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeactivateOrgRequest) Reset() {
	*x = DeactivateOrgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateOrgRequest) ProtoMessage() {}

func (x *DeactivateOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateOrgRequest.ProtoReflect.Descriptor instead.
func (*DeactivateOrgRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{116}
}

type DeactivateOrgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DeactivateOrgResponse) Reset() {
	*x = DeactivateOrgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateOrgResponse) ProtoMessage() {}

func (x *DeactivateOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateOrgResponse.ProtoReflect.Descriptor instead.
func (*DeactivateOrgResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{117}
}

func (x *DeactivateOrgResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type ReactivateOrgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReactivateOrgRequest) Reset() {
	*x = ReactivateOrgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateOrgRequest) ProtoMessage() {}

func (x *ReactivateOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateOrgRequest.ProtoReflect.Descriptor instead.
func (*ReactivateOrgRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{118}
}

type ReactivateOrgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ReactivateOrgResponse) Reset() {
	*x = ReactivateOrgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateOrgResponse) ProtoMessage() {}

func (x *ReactivateOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateOrgResponse.ProtoReflect.Descriptor instead.
func (*ReactivateOrgResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{119}
}

func (x *ReactivateOrgResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListOrgDomainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*org.DomainSearchQuery `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListOrgDomainsRequest) Reset() {
	*x = ListOrgDomainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgDomainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgDomainsRequest) ProtoMessage() {}

func (x *ListOrgDomainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgDomainsRequest.ProtoReflect.Descriptor instead.
func (*ListOrgDomainsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{120}
}

func (x *ListOrgDomainsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListOrgDomainsRequest) GetQueries() []*org.DomainSearchQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListOrgDomainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*org.Domain       `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListOrgDomainsResponse) Reset() {
	*x = ListOrgDomainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgDomainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgDomainsResponse) ProtoMessage() {}

func (x *ListOrgDomainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgDomainsResponse.ProtoReflect.Descriptor instead.
func (*ListOrgDomainsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{121}
}

func (x *ListOrgDomainsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListOrgDomainsResponse) GetResult() []*org.Domain {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddOrgDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *AddOrgDomainRequest) Reset() {
	*x = AddOrgDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrgDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgDomainRequest) ProtoMessage() {}

func (x *AddOrgDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgDomainRequest.ProtoReflect.Descriptor instead.
func (*AddOrgDomainRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{122}
}

func (x *AddOrgDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type AddOrgDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddOrgDomainResponse) Reset() {
	*x = AddOrgDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrgDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgDomainResponse) ProtoMessage() {}

func (x *AddOrgDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgDomainResponse.ProtoReflect.Descriptor instead.
func (*AddOrgDomainResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{123}
}

func (x *AddOrgDomainResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveOrgDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *RemoveOrgDomainRequest) Reset() {
	*x = RemoveOrgDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrgDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrgDomainRequest) ProtoMessage() {}

func (x *RemoveOrgDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrgDomainRequest.ProtoReflect.Descriptor instead.
func (*RemoveOrgDomainRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{124}
}

func (x *RemoveOrgDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type RemoveOrgDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveOrgDomainResponse) Reset() {
	*x = RemoveOrgDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrgDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrgDomainResponse) ProtoMessage() {}

func (x *RemoveOrgDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrgDomainResponse.ProtoReflect.Descriptor instead.
func (*RemoveOrgDomainResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{125}
}

func (x *RemoveOrgDomainResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GenerateOrgDomainValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string                   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Type   org.DomainValidationType `protobuf:"varint,2,opt,name=type,proto3,enum=zitadel.org.v1.DomainValidationType" json:"type,omitempty"`
}

func (x *GenerateOrgDomainValidationRequest) Reset() {
	*x = GenerateOrgDomainValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateOrgDomainValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateOrgDomainValidationRequest) ProtoMessage() {}

func (x *GenerateOrgDomainValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateOrgDomainValidationRequest.ProtoReflect.Descriptor instead.
func (*GenerateOrgDomainValidationRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{126}
}

func (x *GenerateOrgDomainValidationRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GenerateOrgDomainValidationRequest) GetType() org.DomainValidationType {
	if x != nil {
		return x.Type
	}
	return org.DomainValidationType(0)
}

type GenerateOrgDomainValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GenerateOrgDomainValidationResponse) Reset() {
	*x = GenerateOrgDomainValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateOrgDomainValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateOrgDomainValidationResponse) ProtoMessage() {}

func (x *GenerateOrgDomainValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateOrgDomainValidationResponse.ProtoReflect.Descriptor instead.
func (*GenerateOrgDomainValidationResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{127}
}

func (x *GenerateOrgDomainValidationResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GenerateOrgDomainValidationResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ValidateOrgDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *ValidateOrgDomainRequest) Reset() {
	*x = ValidateOrgDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateOrgDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateOrgDomainRequest) ProtoMessage() {}

func (x *ValidateOrgDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateOrgDomainRequest.ProtoReflect.Descriptor instead.
func (*ValidateOrgDomainRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{128}
}

func (x *ValidateOrgDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type ValidateOrgDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ValidateOrgDomainResponse) Reset() {
	*x = ValidateOrgDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateOrgDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateOrgDomainResponse) ProtoMessage() {}

func (x *ValidateOrgDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateOrgDomainResponse.ProtoReflect.Descriptor instead.
func (*ValidateOrgDomainResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{129}
}

func (x *ValidateOrgDomainResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type SetPrimaryOrgDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *SetPrimaryOrgDomainRequest) Reset() {
	*x = SetPrimaryOrgDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPrimaryOrgDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPrimaryOrgDomainRequest) ProtoMessage() {}

func (x *SetPrimaryOrgDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPrimaryOrgDomainRequest.ProtoReflect.Descriptor instead.
func (*SetPrimaryOrgDomainRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{130}
}

func (x *SetPrimaryOrgDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type SetPrimaryOrgDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetPrimaryOrgDomainResponse) Reset() {
	*x = SetPrimaryOrgDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPrimaryOrgDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPrimaryOrgDomainResponse) ProtoMessage() {}

func (x *SetPrimaryOrgDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPrimaryOrgDomainResponse.ProtoReflect.Descriptor instead.
func (*SetPrimaryOrgDomainResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{131}
}

func (x *SetPrimaryOrgDomainResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type ListOrgMemberRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListOrgMemberRolesRequest) Reset() {
	*x = ListOrgMemberRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgMemberRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgMemberRolesRequest) ProtoMessage() {}

func (x *ListOrgMemberRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgMemberRolesRequest.ProtoReflect.Descriptor instead.
func (*ListOrgMemberRolesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{132}
}

type ListOrgMemberRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []string `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListOrgMemberRolesResponse) Reset() {
	*x = ListOrgMemberRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgMemberRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgMemberRolesResponse) ProtoMessage() {}

func (x *ListOrgMemberRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgMemberRolesResponse.ProtoReflect.Descriptor instead.
func (*ListOrgMemberRolesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{133}
}

func (x *ListOrgMemberRolesResponse) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListOrgMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*member.SearchQuery `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListOrgMembersRequest) Reset() {
	*x = ListOrgMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgMembersRequest) ProtoMessage() {}

func (x *ListOrgMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgMembersRequest.ProtoReflect.Descriptor instead.
func (*ListOrgMembersRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{134}
}

func (x *ListOrgMembersRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListOrgMembersRequest) GetQueries() []*member.SearchQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListOrgMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	//criterias the client is looking for
	Result []*member.Member `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListOrgMembersResponse) Reset() {
	*x = ListOrgMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgMembersResponse) ProtoMessage() {}

func (x *ListOrgMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgMembersResponse.ProtoReflect.Descriptor instead.
func (*ListOrgMembersResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{135}
}

func (x *ListOrgMembersResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListOrgMembersResponse) GetResult() []*member.Member {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddOrgMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles  []string `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *AddOrgMemberRequest) Reset() {
	*x = AddOrgMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrgMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgMemberRequest) ProtoMessage() {}

func (x *AddOrgMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgMemberRequest.ProtoReflect.Descriptor instead.
func (*AddOrgMemberRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{136}
}

func (x *AddOrgMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddOrgMemberRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type AddOrgMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddOrgMemberResponse) Reset() {
	*x = AddOrgMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrgMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgMemberResponse) ProtoMessage() {}

func (x *AddOrgMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgMemberResponse.ProtoReflect.Descriptor instead.
func (*AddOrgMemberResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{137}
}

func (x *AddOrgMemberResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateOrgMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles  []string `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *UpdateOrgMemberRequest) Reset() {
	*x = UpdateOrgMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgMemberRequest) ProtoMessage() {}

func (x *UpdateOrgMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgMemberRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrgMemberRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{138}
}

func (x *UpdateOrgMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateOrgMemberRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UpdateOrgMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateOrgMemberResponse) Reset() {
	*x = UpdateOrgMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgMemberResponse) ProtoMessage() {}

func (x *UpdateOrgMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgMemberResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrgMemberResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{139}
}

func (x *UpdateOrgMemberResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveOrgMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveOrgMemberRequest) Reset() {
	*x = RemoveOrgMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrgMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrgMemberRequest) ProtoMessage() {}

func (x *RemoveOrgMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrgMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveOrgMemberRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{140}
}

func (x *RemoveOrgMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveOrgMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveOrgMemberResponse) Reset() {
	*x = RemoveOrgMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrgMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrgMemberResponse) ProtoMessage() {}

func (x *RemoveOrgMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrgMemberResponse.ProtoReflect.Descriptor instead.
func (*RemoveOrgMemberResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{141}
}

func (x *RemoveOrgMemberResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetProjectByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProjectByIDRequest) Reset() {
	*x = GetProjectByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByIDRequest) ProtoMessage() {}

func (x *GetProjectByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByIDRequest.ProtoReflect.Descriptor instead.
func (*GetProjectByIDRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{142}
}

func (x *GetProjectByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProjectByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *project.Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *GetProjectByIDResponse) Reset() {
	*x = GetProjectByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByIDResponse) ProtoMessage() {}

func (x *GetProjectByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByIDResponse.ProtoReflect.Descriptor instead.
func (*GetProjectByIDResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{143}
}

func (x *GetProjectByIDResponse) GetProject() *project.Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GetGrantedProjectByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantId   string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
}

func (x *GetGrantedProjectByIDRequest) Reset() {
	*x = GetGrantedProjectByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGrantedProjectByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGrantedProjectByIDRequest) ProtoMessage() {}

func (x *GetGrantedProjectByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGrantedProjectByIDRequest.ProtoReflect.Descriptor instead.
func (*GetGrantedProjectByIDRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{144}
}

func (x *GetGrantedProjectByIDRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetGrantedProjectByIDRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

type GetGrantedProjectByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrantedProject *project.GrantedProject `protobuf:"bytes,1,opt,name=granted_project,json=grantedProject,proto3" json:"granted_project,omitempty"`
}

func (x *GetGrantedProjectByIDResponse) Reset() {
	*x = GetGrantedProjectByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGrantedProjectByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGrantedProjectByIDResponse) ProtoMessage() {}

func (x *GetGrantedProjectByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGrantedProjectByIDResponse.ProtoReflect.Descriptor instead.
func (*GetGrantedProjectByIDResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{145}
}

func (x *GetGrantedProjectByIDResponse) GetGrantedProject() *project.GrantedProject {
	if x != nil {
		return x.GrantedProject
	}
	return nil
}

type ListProjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*project.ProjectQuery `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListProjectsRequest) Reset() {
	*x = ListProjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsRequest) ProtoMessage() {}

func (x *ListProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{146}
}

func (x *ListProjectsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListProjectsRequest) GetQueries() []*project.ProjectQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListProjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*project.Project  `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListProjectsResponse) Reset() {
	*x = ListProjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsResponse) ProtoMessage() {}

func (x *ListProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{147}
}

func (x *ListProjectsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListProjectsResponse) GetResult() []*project.Project {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListGrantedProjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*project.ProjectQuery `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListGrantedProjectsRequest) Reset() {
	*x = ListGrantedProjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGrantedProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGrantedProjectsRequest) ProtoMessage() {}

func (x *ListGrantedProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGrantedProjectsRequest.ProtoReflect.Descriptor instead.
func (*ListGrantedProjectsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{148}
}

func (x *ListGrantedProjectsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListGrantedProjectsRequest) GetQueries() []*project.ProjectQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListGrantedProjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails       `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*project.GrantedProject `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListGrantedProjectsResponse) Reset() {
	*x = ListGrantedProjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGrantedProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGrantedProjectsResponse) ProtoMessage() {}

func (x *ListGrantedProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGrantedProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListGrantedProjectsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{149}
}

func (x *ListGrantedProjectsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListGrantedProjectsResponse) GetResult() []*project.GrantedProject {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListProjectChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query     *change.ChangeQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	ProjectId string              `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListProjectChangesRequest) Reset() {
	*x = ListProjectChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectChangesRequest) ProtoMessage() {}

func (x *ListProjectChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectChangesRequest.ProtoReflect.Descriptor instead.
func (*ListProjectChangesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{150}
}

func (x *ListProjectChangesRequest) GetQuery() *change.ChangeQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListProjectChangesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListProjectChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary infos)
	Result []*change.Change `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListProjectChangesResponse) Reset() {
	*x = ListProjectChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectChangesResponse) ProtoMessage() {}

func (x *ListProjectChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectChangesResponse.ProtoReflect.Descriptor instead.
func (*ListProjectChangesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{151}
}

func (x *ListProjectChangesResponse) GetResult() []*change.Change {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProjectRoleAssertion   bool                           `protobuf:"varint,2,opt,name=project_role_assertion,json=projectRoleAssertion,proto3" json:"project_role_assertion,omitempty"`
	ProjectRoleCheck       bool                           `protobuf:"varint,3,opt,name=project_role_check,json=projectRoleCheck,proto3" json:"project_role_check,omitempty"`
	HasProjectCheck        bool                           `protobuf:"varint,4,opt,name=has_project_check,json=hasProjectCheck,proto3" json:"has_project_check,omitempty"`
	PrivateLabelingSetting project.PrivateLabelingSetting `protobuf:"varint,5,opt,name=private_labeling_setting,json=privateLabelingSetting,proto3,enum=zitadel.project.v1.PrivateLabelingSetting" json:"private_labeling_setting,omitempty"`
}

func (x *AddProjectRequest) Reset() {
	*x = AddProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectRequest) ProtoMessage() {}

func (x *AddProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectRequest.ProtoReflect.Descriptor instead.
func (*AddProjectRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{152}
}

func (x *AddProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddProjectRequest) GetProjectRoleAssertion() bool {
	if x != nil {
		return x.ProjectRoleAssertion
	}
	return false
}

func (x *AddProjectRequest) GetProjectRoleCheck() bool {
	if x != nil {
		return x.ProjectRoleCheck
	}
	return false
}

func (x *AddProjectRequest) GetHasProjectCheck() bool {
	if x != nil {
		return x.HasProjectCheck
	}
	return false
}

func (x *AddProjectRequest) GetPrivateLabelingSetting() project.PrivateLabelingSetting {
	if x != nil {
		return x.PrivateLabelingSetting
	}
	return project.PrivateLabelingSetting(0)
}

type AddProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Details *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddProjectResponse) Reset() {
	*x = AddProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectResponse) ProtoMessage() {}

func (x *AddProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectResponse.ProtoReflect.Descriptor instead.
func (*AddProjectResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{153}
}

func (x *AddProjectResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddProjectResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                   string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProjectRoleAssertion   bool                           `protobuf:"varint,3,opt,name=project_role_assertion,json=projectRoleAssertion,proto3" json:"project_role_assertion,omitempty"`
	ProjectRoleCheck       bool                           `protobuf:"varint,4,opt,name=project_role_check,json=projectRoleCheck,proto3" json:"project_role_check,omitempty"`
	HasProjectCheck        bool                           `protobuf:"varint,5,opt,name=has_project_check,json=hasProjectCheck,proto3" json:"has_project_check,omitempty"`
	PrivateLabelingSetting project.PrivateLabelingSetting `protobuf:"varint,6,opt,name=private_labeling_setting,json=privateLabelingSetting,proto3,enum=zitadel.project.v1.PrivateLabelingSetting" json:"private_labeling_setting,omitempty"`
}

func (x *UpdateProjectRequest) Reset() {
	*x = UpdateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRequest) ProtoMessage() {}

func (x *UpdateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{154}
}

func (x *UpdateProjectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateProjectRequest) GetProjectRoleAssertion() bool {
	if x != nil {
		return x.ProjectRoleAssertion
	}
	return false
}

func (x *UpdateProjectRequest) GetProjectRoleCheck() bool {
	if x != nil {
		return x.ProjectRoleCheck
	}
	return false
}

func (x *UpdateProjectRequest) GetHasProjectCheck() bool {
	if x != nil {
		return x.HasProjectCheck
	}
	return false
}

func (x *UpdateProjectRequest) GetPrivateLabelingSetting() project.PrivateLabelingSetting {
	if x != nil {
		return x.PrivateLabelingSetting
	}
	return project.PrivateLabelingSetting(0)
}

type UpdateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateProjectResponse) Reset() {
	*x = UpdateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectResponse) ProtoMessage() {}

func (x *UpdateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{155}
}

func (x *UpdateProjectResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type DeactivateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeactivateProjectRequest) Reset() {
	*x = DeactivateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateProjectRequest) ProtoMessage() {}

func (x *DeactivateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateProjectRequest.ProtoReflect.Descriptor instead.
func (*DeactivateProjectRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{156}
}

func (x *DeactivateProjectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeactivateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DeactivateProjectResponse) Reset() {
	*x = DeactivateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateProjectResponse) ProtoMessage() {}

func (x *DeactivateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateProjectResponse.ProtoReflect.Descriptor instead.
func (*DeactivateProjectResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{157}
}

func (x *DeactivateProjectResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ReactivateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReactivateProjectRequest) Reset() {
	*x = ReactivateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateProjectRequest) ProtoMessage() {}

func (x *ReactivateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateProjectRequest.ProtoReflect.Descriptor instead.
func (*ReactivateProjectRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{158}
}

func (x *ReactivateProjectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReactivateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ReactivateProjectResponse) Reset() {
	*x = ReactivateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateProjectResponse) ProtoMessage() {}

func (x *ReactivateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateProjectResponse.ProtoReflect.Descriptor instead.
func (*ReactivateProjectResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{159}
}

func (x *ReactivateProjectResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveProjectRequest) Reset() {
	*x = RemoveProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProjectRequest) ProtoMessage() {}

func (x *RemoveProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProjectRequest.ProtoReflect.Descriptor instead.
func (*RemoveProjectRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{160}
}

func (x *RemoveProjectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveProjectResponse) Reset() {
	*x = RemoveProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProjectResponse) ProtoMessage() {}

func (x *RemoveProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProjectResponse.ProtoReflect.Descriptor instead.
func (*RemoveProjectResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{161}
}

func (x *RemoveProjectResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type ListProjectMemberRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProjectMemberRolesRequest) Reset() {
	*x = ListProjectMemberRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectMemberRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectMemberRolesRequest) ProtoMessage() {}

func (x *ListProjectMemberRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectMemberRolesRequest.ProtoReflect.Descriptor instead.
func (*ListProjectMemberRolesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{162}
}

type ListProjectMemberRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []string            `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListProjectMemberRolesResponse) Reset() {
	*x = ListProjectMemberRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectMemberRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectMemberRolesResponse) ProtoMessage() {}

func (x *ListProjectMemberRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectMemberRolesResponse.ProtoReflect.Descriptor instead.
func (*ListProjectMemberRolesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{163}
}

func (x *ListProjectMemberRolesResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListProjectMemberRolesResponse) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddProjectRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RoleKey     string `protobuf:"bytes,2,opt,name=role_key,json=roleKey,proto3" json:"role_key,omitempty"`
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Group       string `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *AddProjectRoleRequest) Reset() {
	*x = AddProjectRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectRoleRequest) ProtoMessage() {}

func (x *AddProjectRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectRoleRequest.ProtoReflect.Descriptor instead.
func (*AddProjectRoleRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{164}
}

func (x *AddProjectRoleRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddProjectRoleRequest) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *AddProjectRoleRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *AddProjectRoleRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type AddProjectRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddProjectRoleResponse) Reset() {
	*x = AddProjectRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectRoleResponse) ProtoMessage() {}

func (x *AddProjectRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectRoleResponse.ProtoReflect.Descriptor instead.
func (*AddProjectRoleResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{165}
}

func (x *AddProjectRoleResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type BulkAddProjectRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string                             `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Roles     []*BulkAddProjectRolesRequest_Role `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *BulkAddProjectRolesRequest) Reset() {
	*x = BulkAddProjectRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAddProjectRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAddProjectRolesRequest) ProtoMessage() {}

func (x *BulkAddProjectRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAddProjectRolesRequest.ProtoReflect.Descriptor instead.
func (*BulkAddProjectRolesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{166}
}

func (x *BulkAddProjectRolesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *BulkAddProjectRolesRequest) GetRoles() []*BulkAddProjectRolesRequest_Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type BulkAddProjectRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *BulkAddProjectRolesResponse) Reset() {
	*x = BulkAddProjectRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAddProjectRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAddProjectRolesResponse) ProtoMessage() {}

func (x *BulkAddProjectRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAddProjectRolesResponse.ProtoReflect.Descriptor instead.
func (*BulkAddProjectRolesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{167}
}

func (x *BulkAddProjectRolesResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateProjectRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RoleKey     string `protobuf:"bytes,2,opt,name=role_key,json=roleKey,proto3" json:"role_key,omitempty"`
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Group       string `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *UpdateProjectRoleRequest) Reset() {
	*x = UpdateProjectRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRoleRequest) ProtoMessage() {}

func (x *UpdateProjectRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRoleRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{168}
}

func (x *UpdateProjectRoleRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateProjectRoleRequest) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *UpdateProjectRoleRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UpdateProjectRoleRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type UpdateProjectRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateProjectRoleResponse) Reset() {
	*x = UpdateProjectRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRoleResponse) ProtoMessage() {}

func (x *UpdateProjectRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectRoleResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{169}
}

func (x *UpdateProjectRoleResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveProjectRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RoleKey   string `protobuf:"bytes,2,opt,name=role_key,json=roleKey,proto3" json:"role_key,omitempty"`
}

func (x *RemoveProjectRoleRequest) Reset() {
	*x = RemoveProjectRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProjectRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProjectRoleRequest) ProtoMessage() {}

func (x *RemoveProjectRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProjectRoleRequest.ProtoReflect.Descriptor instead.
func (*RemoveProjectRoleRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{170}
}

func (x *RemoveProjectRoleRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RemoveProjectRoleRequest) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

type RemoveProjectRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveProjectRoleResponse) Reset() {
	*x = RemoveProjectRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProjectRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProjectRoleResponse) ProtoMessage() {}

func (x *RemoveProjectRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProjectRoleResponse.ProtoReflect.Descriptor instead.
func (*RemoveProjectRoleResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{171}
}

func (x *RemoveProjectRoleResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListProjectRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*project.RoleQuery `protobuf:"bytes,3,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListProjectRolesRequest) Reset() {
	*x = ListProjectRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectRolesRequest) ProtoMessage() {}

func (x *ListProjectRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectRolesRequest.ProtoReflect.Descriptor instead.
func (*ListProjectRolesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{172}
}

func (x *ListProjectRolesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListProjectRolesRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListProjectRolesRequest) GetQueries() []*project.RoleQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListProjectRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*project.Role     `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListProjectRolesResponse) Reset() {
	*x = ListProjectRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectRolesResponse) ProtoMessage() {}

func (x *ListProjectRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectRolesResponse.ProtoReflect.Descriptor instead.
func (*ListProjectRolesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{173}
}

func (x *ListProjectRolesResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListProjectRolesResponse) GetResult() []*project.Role {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListGrantedProjectRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantId   string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*project.RoleQuery `protobuf:"bytes,4,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListGrantedProjectRolesRequest) Reset() {
	*x = ListGrantedProjectRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGrantedProjectRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGrantedProjectRolesRequest) ProtoMessage() {}

func (x *ListGrantedProjectRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGrantedProjectRolesRequest.ProtoReflect.Descriptor instead.
func (*ListGrantedProjectRolesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{174}
}

func (x *ListGrantedProjectRolesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListGrantedProjectRolesRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

func (x *ListGrantedProjectRolesRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListGrantedProjectRolesRequest) GetQueries() []*project.RoleQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListGrantedProjectRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*project.Role     `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListGrantedProjectRolesResponse) Reset() {
	*x = ListGrantedProjectRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGrantedProjectRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGrantedProjectRolesResponse) ProtoMessage() {}

func (x *ListGrantedProjectRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGrantedProjectRolesResponse.ProtoReflect.Descriptor instead.
func (*ListGrantedProjectRolesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{175}
}

func (x *ListGrantedProjectRolesResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListGrantedProjectRolesResponse) GetResult() []*project.Role {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListProjectMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*member.SearchQuery `protobuf:"bytes,3,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListProjectMembersRequest) Reset() {
	*x = ListProjectMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectMembersRequest) ProtoMessage() {}

func (x *ListProjectMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectMembersRequest.ProtoReflect.Descriptor instead.
func (*ListProjectMembersRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{176}
}

func (x *ListProjectMembersRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListProjectMembersRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListProjectMembersRequest) GetQueries() []*member.SearchQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListProjectMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*member.Member    `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListProjectMembersResponse) Reset() {
	*x = ListProjectMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectMembersResponse) ProtoMessage() {}

func (x *ListProjectMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectMembersResponse.ProtoReflect.Descriptor instead.
func (*ListProjectMembersResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{177}
}

func (x *ListProjectMembersResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListProjectMembersResponse) GetResult() []*member.Member {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddProjectMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	UserId    string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles     []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *AddProjectMemberRequest) Reset() {
	*x = AddProjectMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectMemberRequest) ProtoMessage() {}

func (x *AddProjectMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectMemberRequest.ProtoReflect.Descriptor instead.
func (*AddProjectMemberRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{178}
}

func (x *AddProjectMemberRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddProjectMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddProjectMemberRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type AddProjectMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddProjectMemberResponse) Reset() {
	*x = AddProjectMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectMemberResponse) ProtoMessage() {}

func (x *AddProjectMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectMemberResponse.ProtoReflect.Descriptor instead.
func (*AddProjectMemberResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{179}
}

func (x *AddProjectMemberResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateProjectMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	UserId    string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles     []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *UpdateProjectMemberRequest) Reset() {
	*x = UpdateProjectMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectMemberRequest) ProtoMessage() {}

func (x *UpdateProjectMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectMemberRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectMemberRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{180}
}

func (x *UpdateProjectMemberRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateProjectMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateProjectMemberRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UpdateProjectMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateProjectMemberResponse) Reset() {
	*x = UpdateProjectMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectMemberResponse) ProtoMessage() {}

func (x *UpdateProjectMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectMemberResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectMemberResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{181}
}

func (x *UpdateProjectMemberResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveProjectMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveProjectMemberRequest) Reset() {
	*x = RemoveProjectMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProjectMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProjectMemberRequest) ProtoMessage() {}

func (x *RemoveProjectMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProjectMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveProjectMemberRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{182}
}

func (x *RemoveProjectMemberRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RemoveProjectMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveProjectMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveProjectMemberResponse) Reset() {
	*x = RemoveProjectMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProjectMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProjectMemberResponse) ProtoMessage() {}

func (x *RemoveProjectMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProjectMemberResponse.ProtoReflect.Descriptor instead.
func (*RemoveProjectMemberResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{183}
}

func (x *RemoveProjectMemberResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetAppByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId     string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetAppByIDRequest) Reset() {
	*x = GetAppByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppByIDRequest) ProtoMessage() {}

func (x *GetAppByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppByIDRequest.ProtoReflect.Descriptor instead.
func (*GetAppByIDRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{184}
}

func (x *GetAppByIDRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetAppByIDRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type GetAppByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App *app.App `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *GetAppByIDResponse) Reset() {
	*x = GetAppByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppByIDResponse) ProtoMessage() {}

func (x *GetAppByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppByIDResponse.ProtoReflect.Descriptor instead.
func (*GetAppByIDResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{185}
}

func (x *GetAppByIDResponse) GetApp() *app.App {
	if x != nil {
		return x.App
	}
	return nil
}

type ListAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*app.AppQuery `protobuf:"bytes,3,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListAppsRequest) Reset() {
	*x = ListAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsRequest) ProtoMessage() {}

func (x *ListAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsRequest.ProtoReflect.Descriptor instead.
func (*ListAppsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{186}
}

func (x *ListAppsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListAppsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListAppsRequest) GetQueries() []*app.AppQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListAppsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*app.App          `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListAppsResponse) Reset() {
	*x = ListAppsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsResponse) ProtoMessage() {}

func (x *ListAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsResponse.ProtoReflect.Descriptor instead.
func (*ListAppsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{187}
}

func (x *ListAppsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListAppsResponse) GetResult() []*app.App {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListAppChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query     *change.ChangeQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	ProjectId string              `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId     string              `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *ListAppChangesRequest) Reset() {
	*x = ListAppChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppChangesRequest) ProtoMessage() {}

func (x *ListAppChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppChangesRequest.ProtoReflect.Descriptor instead.
func (*ListAppChangesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{188}
}

func (x *ListAppChangesRequest) GetQuery() *change.ChangeQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListAppChangesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListAppChangesRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type ListAppChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary infos)
	Result []*change.Change `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListAppChangesResponse) Reset() {
	*x = ListAppChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppChangesResponse) ProtoMessage() {}

func (x *ListAppChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppChangesResponse.ProtoReflect.Descriptor instead.
func (*ListAppChangesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{189}
}

func (x *ListAppChangesResponse) GetResult() []*change.Change {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddOIDCAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId                string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name                     string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RedirectUris             []string               `protobuf:"bytes,3,rep,name=redirect_uris,json=redirectUris,proto3" json:"redirect_uris,omitempty"`
	ResponseTypes            []app.OIDCResponseType `protobuf:"varint,4,rep,packed,name=response_types,json=responseTypes,proto3,enum=zitadel.app.v1.OIDCResponseType" json:"response_types,omitempty"`
	GrantTypes               []app.OIDCGrantType    `protobuf:"varint,5,rep,packed,name=grant_types,json=grantTypes,proto3,enum=zitadel.app.v1.OIDCGrantType" json:"grant_types,omitempty"`
	AppType                  app.OIDCAppType        `protobuf:"varint,6,opt,name=app_type,json=appType,proto3,enum=zitadel.app.v1.OIDCAppType" json:"app_type,omitempty"`
	AuthMethodType           app.OIDCAuthMethodType `protobuf:"varint,7,opt,name=auth_method_type,json=authMethodType,proto3,enum=zitadel.app.v1.OIDCAuthMethodType" json:"auth_method_type,omitempty"`
	PostLogoutRedirectUris   []string               `protobuf:"bytes,8,rep,name=post_logout_redirect_uris,json=postLogoutRedirectUris,proto3" json:"post_logout_redirect_uris,omitempty"`
	Version                  app.OIDCVersion        `protobuf:"varint,9,opt,name=version,proto3,enum=zitadel.app.v1.OIDCVersion" json:"version,omitempty"`
	DevMode                  bool                   `protobuf:"varint,10,opt,name=dev_mode,json=devMode,proto3" json:"dev_mode,omitempty"`
	AccessTokenType          app.OIDCTokenType      `protobuf:"varint,11,opt,name=access_token_type,json=accessTokenType,proto3,enum=zitadel.app.v1.OIDCTokenType" json:"access_token_type,omitempty"`
	AccessTokenRoleAssertion bool                   `protobuf:"varint,12,opt,name=access_token_role_assertion,json=accessTokenRoleAssertion,proto3" json:"access_token_role_assertion,omitempty"`
	IdTokenRoleAssertion     bool                   `protobuf:"varint,13,opt,name=id_token_role_assertion,json=idTokenRoleAssertion,proto3" json:"id_token_role_assertion,omitempty"`
	IdTokenUserinfoAssertion bool                   `protobuf:"varint,14,opt,name=id_token_userinfo_assertion,json=idTokenUserinfoAssertion,proto3" json:"id_token_userinfo_assertion,omitempty"`
	ClockSkew                *durationpb.Duration   `protobuf:"bytes,15,opt,name=clock_skew,json=clockSkew,proto3" json:"clock_skew,omitempty"`
	AdditionalOrigins        []string               `protobuf:"bytes,16,rep,name=additional_origins,json=additionalOrigins,proto3" json:"additional_origins,omitempty"`
}

func (x *AddOIDCAppRequest) Reset() {
	*x = AddOIDCAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOIDCAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOIDCAppRequest) ProtoMessage() {}

func (x *AddOIDCAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOIDCAppRequest.ProtoReflect.Descriptor instead.
func (*AddOIDCAppRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{190}
}

func (x *AddOIDCAppRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddOIDCAppRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddOIDCAppRequest) GetRedirectUris() []string {
	if x != nil {
		return x.RedirectUris
	}
	return nil
}

func (x *AddOIDCAppRequest) GetResponseTypes() []app.OIDCResponseType {
	if x != nil {
		return x.ResponseTypes
	}
	return nil
}

func (x *AddOIDCAppRequest) GetGrantTypes() []app.OIDCGrantType {
	if x != nil {
		return x.GrantTypes
	}
	return nil
}

func (x *AddOIDCAppRequest) GetAppType() app.OIDCAppType {
	if x != nil {
		return x.AppType
	}
	return app.OIDCAppType(0)
}

func (x *AddOIDCAppRequest) GetAuthMethodType() app.OIDCAuthMethodType {
	if x != nil {
		return x.AuthMethodType
	}
	return app.OIDCAuthMethodType(0)
}

func (x *AddOIDCAppRequest) GetPostLogoutRedirectUris() []string {
	if x != nil {
		return x.PostLogoutRedirectUris
	}
	return nil
}

func (x *AddOIDCAppRequest) GetVersion() app.OIDCVersion {
	if x != nil {
		return x.Version
	}
	return app.OIDCVersion(0)
}

func (x *AddOIDCAppRequest) GetDevMode() bool {
	if x != nil {
		return x.DevMode
	}
	return false
}

func (x *AddOIDCAppRequest) GetAccessTokenType() app.OIDCTokenType {
	if x != nil {
		return x.AccessTokenType
	}
	return app.OIDCTokenType(0)
}

func (x *AddOIDCAppRequest) GetAccessTokenRoleAssertion() bool {
	if x != nil {
		return x.AccessTokenRoleAssertion
	}
	return false
}

func (x *AddOIDCAppRequest) GetIdTokenRoleAssertion() bool {
	if x != nil {
		return x.IdTokenRoleAssertion
	}
	return false
}

func (x *AddOIDCAppRequest) GetIdTokenUserinfoAssertion() bool {
	if x != nil {
		return x.IdTokenUserinfoAssertion
	}
	return false
}

func (x *AddOIDCAppRequest) GetClockSkew() *durationpb.Duration {
	if x != nil {
		return x.ClockSkew
	}
	return nil
}

func (x *AddOIDCAppRequest) GetAdditionalOrigins() []string {
	if x != nil {
		return x.AdditionalOrigins
	}
	return nil
}

type AddOIDCAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId              string                      `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Details            *object.ObjectDetails       `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	ClientId           string                      `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret       string                      `protobuf:"bytes,4,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	NoneCompliant      bool                        `protobuf:"varint,5,opt,name=none_compliant,json=noneCompliant,proto3" json:"none_compliant,omitempty"`
	ComplianceProblems []*message.LocalizedMessage `protobuf:"bytes,6,rep,name=compliance_problems,json=complianceProblems,proto3" json:"compliance_problems,omitempty"`
}

func (x *AddOIDCAppResponse) Reset() {
	*x = AddOIDCAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOIDCAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOIDCAppResponse) ProtoMessage() {}

func (x *AddOIDCAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOIDCAppResponse.ProtoReflect.Descriptor instead.
func (*AddOIDCAppResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{191}
}

func (x *AddOIDCAppResponse) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AddOIDCAppResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AddOIDCAppResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AddOIDCAppResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *AddOIDCAppResponse) GetNoneCompliant() bool {
	if x != nil {
		return x.NoneCompliant
	}
	return false
}

func (x *AddOIDCAppResponse) GetComplianceProblems() []*message.LocalizedMessage {
	if x != nil {
		return x.ComplianceProblems
	}
	return nil
}

type AddAPIAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      string                `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name           string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AuthMethodType app.APIAuthMethodType `protobuf:"varint,3,opt,name=auth_method_type,json=authMethodType,proto3,enum=zitadel.app.v1.APIAuthMethodType" json:"auth_method_type,omitempty"`
}

func (x *AddAPIAppRequest) Reset() {
	*x = AddAPIAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAPIAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAPIAppRequest) ProtoMessage() {}

func (x *AddAPIAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAPIAppRequest.ProtoReflect.Descriptor instead.
func (*AddAPIAppRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{192}
}

func (x *AddAPIAppRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddAPIAppRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddAPIAppRequest) GetAuthMethodType() app.APIAuthMethodType {
	if x != nil {
		return x.AuthMethodType
	}
	return app.APIAuthMethodType(0)
}

type AddAPIAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId        string                `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Details      *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	ClientId     string                `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string                `protobuf:"bytes,4,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *AddAPIAppResponse) Reset() {
	*x = AddAPIAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAPIAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAPIAppResponse) ProtoMessage() {}

func (x *AddAPIAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAPIAppResponse.ProtoReflect.Descriptor instead.
func (*AddAPIAppResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{193}
}

func (x *AddAPIAppResponse) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AddAPIAppResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AddAPIAppResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AddAPIAppResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type UpdateAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId     string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Name      string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateAppRequest) Reset() {
	*x = UpdateAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppRequest) ProtoMessage() {}

func (x *UpdateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{194}
}

func (x *UpdateAppRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateAppRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UpdateAppRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateAppResponse) Reset() {
	*x = UpdateAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppResponse) ProtoMessage() {}

func (x *UpdateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{195}
}

func (x *UpdateAppResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateOIDCAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId                string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId                    string                 `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	RedirectUris             []string               `protobuf:"bytes,3,rep,name=redirect_uris,json=redirectUris,proto3" json:"redirect_uris,omitempty"`
	ResponseTypes            []app.OIDCResponseType `protobuf:"varint,4,rep,packed,name=response_types,json=responseTypes,proto3,enum=zitadel.app.v1.OIDCResponseType" json:"response_types,omitempty"`
	GrantTypes               []app.OIDCGrantType    `protobuf:"varint,5,rep,packed,name=grant_types,json=grantTypes,proto3,enum=zitadel.app.v1.OIDCGrantType" json:"grant_types,omitempty"`
	AppType                  app.OIDCAppType        `protobuf:"varint,6,opt,name=app_type,json=appType,proto3,enum=zitadel.app.v1.OIDCAppType" json:"app_type,omitempty"`
	AuthMethodType           app.OIDCAuthMethodType `protobuf:"varint,7,opt,name=auth_method_type,json=authMethodType,proto3,enum=zitadel.app.v1.OIDCAuthMethodType" json:"auth_method_type,omitempty"`
	PostLogoutRedirectUris   []string               `protobuf:"bytes,8,rep,name=post_logout_redirect_uris,json=postLogoutRedirectUris,proto3" json:"post_logout_redirect_uris,omitempty"`
	DevMode                  bool                   `protobuf:"varint,9,opt,name=dev_mode,json=devMode,proto3" json:"dev_mode,omitempty"`
	AccessTokenType          app.OIDCTokenType      `protobuf:"varint,10,opt,name=access_token_type,json=accessTokenType,proto3,enum=zitadel.app.v1.OIDCTokenType" json:"access_token_type,omitempty"`
	AccessTokenRoleAssertion bool                   `protobuf:"varint,11,opt,name=access_token_role_assertion,json=accessTokenRoleAssertion,proto3" json:"access_token_role_assertion,omitempty"`
	IdTokenRoleAssertion     bool                   `protobuf:"varint,12,opt,name=id_token_role_assertion,json=idTokenRoleAssertion,proto3" json:"id_token_role_assertion,omitempty"`
	IdTokenUserinfoAssertion bool                   `protobuf:"varint,13,opt,name=id_token_userinfo_assertion,json=idTokenUserinfoAssertion,proto3" json:"id_token_userinfo_assertion,omitempty"`
	ClockSkew                *durationpb.Duration   `protobuf:"bytes,14,opt,name=clock_skew,json=clockSkew,proto3" json:"clock_skew,omitempty"`
	AdditionalOrigins        []string               `protobuf:"bytes,15,rep,name=additional_origins,json=additionalOrigins,proto3" json:"additional_origins,omitempty"`
}

func (x *UpdateOIDCAppConfigRequest) Reset() {
	*x = UpdateOIDCAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOIDCAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOIDCAppConfigRequest) ProtoMessage() {}

func (x *UpdateOIDCAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOIDCAppConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateOIDCAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{196}
}

func (x *UpdateOIDCAppConfigRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateOIDCAppConfigRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UpdateOIDCAppConfigRequest) GetRedirectUris() []string {
	if x != nil {
		return x.RedirectUris
	}
	return nil
}

func (x *UpdateOIDCAppConfigRequest) GetResponseTypes() []app.OIDCResponseType {
	if x != nil {
		return x.ResponseTypes
	}
	return nil
}

func (x *UpdateOIDCAppConfigRequest) GetGrantTypes() []app.OIDCGrantType {
	if x != nil {
		return x.GrantTypes
	}
	return nil
}

func (x *UpdateOIDCAppConfigRequest) GetAppType() app.OIDCAppType {
	if x != nil {
		return x.AppType
	}
	return app.OIDCAppType(0)
}

func (x *UpdateOIDCAppConfigRequest) GetAuthMethodType() app.OIDCAuthMethodType {
	if x != nil {
		return x.AuthMethodType
	}
	return app.OIDCAuthMethodType(0)
}

func (x *UpdateOIDCAppConfigRequest) GetPostLogoutRedirectUris() []string {
	if x != nil {
		return x.PostLogoutRedirectUris
	}
	return nil
}

func (x *UpdateOIDCAppConfigRequest) GetDevMode() bool {
	if x != nil {
		return x.DevMode
	}
	return false
}

func (x *UpdateOIDCAppConfigRequest) GetAccessTokenType() app.OIDCTokenType {
	if x != nil {
		return x.AccessTokenType
	}
	return app.OIDCTokenType(0)
}

func (x *UpdateOIDCAppConfigRequest) GetAccessTokenRoleAssertion() bool {
	if x != nil {
		return x.AccessTokenRoleAssertion
	}
	return false
}

func (x *UpdateOIDCAppConfigRequest) GetIdTokenRoleAssertion() bool {
	if x != nil {
		return x.IdTokenRoleAssertion
	}
	return false
}

func (x *UpdateOIDCAppConfigRequest) GetIdTokenUserinfoAssertion() bool {
	if x != nil {
		return x.IdTokenUserinfoAssertion
	}
	return false
}

func (x *UpdateOIDCAppConfigRequest) GetClockSkew() *durationpb.Duration {
	if x != nil {
		return x.ClockSkew
	}
	return nil
}

func (x *UpdateOIDCAppConfigRequest) GetAdditionalOrigins() []string {
	if x != nil {
		return x.AdditionalOrigins
	}
	return nil
}

type UpdateOIDCAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateOIDCAppConfigResponse) Reset() {
	*x = UpdateOIDCAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOIDCAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOIDCAppConfigResponse) ProtoMessage() {}

func (x *UpdateOIDCAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOIDCAppConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateOIDCAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{197}
}

func (x *UpdateOIDCAppConfigResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateAPIAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      string                `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId          string                `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AuthMethodType app.APIAuthMethodType `protobuf:"varint,7,opt,name=auth_method_type,json=authMethodType,proto3,enum=zitadel.app.v1.APIAuthMethodType" json:"auth_method_type,omitempty"`
}

func (x *UpdateAPIAppConfigRequest) Reset() {
	*x = UpdateAPIAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAPIAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPIAppConfigRequest) ProtoMessage() {}

func (x *UpdateAPIAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPIAppConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateAPIAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{198}
}

func (x *UpdateAPIAppConfigRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateAPIAppConfigRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UpdateAPIAppConfigRequest) GetAuthMethodType() app.APIAuthMethodType {
	if x != nil {
		return x.AuthMethodType
	}
	return app.APIAuthMethodType(0)
}

type UpdateAPIAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateAPIAppConfigResponse) Reset() {
	*x = UpdateAPIAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAPIAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPIAppConfigResponse) ProtoMessage() {}

func (x *UpdateAPIAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPIAppConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateAPIAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{199}
}

func (x *UpdateAPIAppConfigResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type DeactivateAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId     string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *DeactivateAppRequest) Reset() {
	*x = DeactivateAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateAppRequest) ProtoMessage() {}

func (x *DeactivateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateAppRequest.ProtoReflect.Descriptor instead.
func (*DeactivateAppRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{200}
}

func (x *DeactivateAppRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeactivateAppRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type DeactivateAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DeactivateAppResponse) Reset() {
	*x = DeactivateAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateAppResponse) ProtoMessage() {}

func (x *DeactivateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateAppResponse.ProtoReflect.Descriptor instead.
func (*DeactivateAppResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{201}
}

func (x *DeactivateAppResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ReactivateAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId     string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *ReactivateAppRequest) Reset() {
	*x = ReactivateAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateAppRequest) ProtoMessage() {}

func (x *ReactivateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateAppRequest.ProtoReflect.Descriptor instead.
func (*ReactivateAppRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{202}
}

func (x *ReactivateAppRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ReactivateAppRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type ReactivateAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ReactivateAppResponse) Reset() {
	*x = ReactivateAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateAppResponse) ProtoMessage() {}

func (x *ReactivateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateAppResponse.ProtoReflect.Descriptor instead.
func (*ReactivateAppResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{203}
}

func (x *ReactivateAppResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId     string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *RemoveAppRequest) Reset() {
	*x = RemoveAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppRequest) ProtoMessage() {}

func (x *RemoveAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppRequest.ProtoReflect.Descriptor instead.
func (*RemoveAppRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{204}
}

func (x *RemoveAppRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RemoveAppRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type RemoveAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveAppResponse) Reset() {
	*x = RemoveAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppResponse) ProtoMessage() {}

func (x *RemoveAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppResponse.ProtoReflect.Descriptor instead.
func (*RemoveAppResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{205}
}

func (x *RemoveAppResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RegenerateOIDCClientSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId     string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *RegenerateOIDCClientSecretRequest) Reset() {
	*x = RegenerateOIDCClientSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateOIDCClientSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateOIDCClientSecretRequest) ProtoMessage() {}

func (x *RegenerateOIDCClientSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateOIDCClientSecretRequest.ProtoReflect.Descriptor instead.
func (*RegenerateOIDCClientSecretRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{206}
}

func (x *RegenerateOIDCClientSecretRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RegenerateOIDCClientSecretRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type RegenerateOIDCClientSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientSecret string                `protobuf:"bytes,1,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	Details      *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RegenerateOIDCClientSecretResponse) Reset() {
	*x = RegenerateOIDCClientSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateOIDCClientSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateOIDCClientSecretResponse) ProtoMessage() {}

func (x *RegenerateOIDCClientSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateOIDCClientSecretResponse.ProtoReflect.Descriptor instead.
func (*RegenerateOIDCClientSecretResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{207}
}

func (x *RegenerateOIDCClientSecretResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *RegenerateOIDCClientSecretResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RegenerateAPIClientSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId     string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *RegenerateAPIClientSecretRequest) Reset() {
	*x = RegenerateAPIClientSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateAPIClientSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateAPIClientSecretRequest) ProtoMessage() {}

func (x *RegenerateAPIClientSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateAPIClientSecretRequest.ProtoReflect.Descriptor instead.
func (*RegenerateAPIClientSecretRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{208}
}

func (x *RegenerateAPIClientSecretRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RegenerateAPIClientSecretRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type RegenerateAPIClientSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientSecret string                `protobuf:"bytes,1,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	Details      *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RegenerateAPIClientSecretResponse) Reset() {
	*x = RegenerateAPIClientSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateAPIClientSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateAPIClientSecretResponse) ProtoMessage() {}

func (x *RegenerateAPIClientSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateAPIClientSecretResponse.ProtoReflect.Descriptor instead.
func (*RegenerateAPIClientSecretResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{209}
}

func (x *RegenerateAPIClientSecretResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *RegenerateAPIClientSecretResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetAppKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId     string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	KeyId     string `protobuf:"bytes,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *GetAppKeyRequest) Reset() {
	*x = GetAppKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppKeyRequest) ProtoMessage() {}

func (x *GetAppKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppKeyRequest.ProtoReflect.Descriptor instead.
func (*GetAppKeyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{210}
}

func (x *GetAppKeyRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetAppKeyRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetAppKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type GetAppKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *authn.Key `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetAppKeyResponse) Reset() {
	*x = GetAppKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppKeyResponse) ProtoMessage() {}

func (x *GetAppKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppKeyResponse.ProtoReflect.Descriptor instead.
func (*GetAppKeyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{211}
}

func (x *GetAppKeyResponse) GetKey() *authn.Key {
	if x != nil {
		return x.Key
	}
	return nil
}

type ListAppKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query     *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	AppId     string            `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ProjectId string            `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListAppKeysRequest) Reset() {
	*x = ListAppKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppKeysRequest) ProtoMessage() {}

func (x *ListAppKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppKeysRequest.ProtoReflect.Descriptor instead.
func (*ListAppKeysRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{212}
}

func (x *ListAppKeysRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListAppKeysRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ListAppKeysRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListAppKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*authn.Key        `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListAppKeysResponse) Reset() {
	*x = ListAppKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppKeysResponse) ProtoMessage() {}

func (x *ListAppKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppKeysResponse.ProtoReflect.Descriptor instead.
func (*ListAppKeysResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{213}
}

func (x *ListAppKeysResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListAppKeysResponse) GetResult() []*authn.Key {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddAppKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId          string                 `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Type           authn.KeyType          `protobuf:"varint,3,opt,name=type,proto3,enum=zitadel.authn.v1.KeyType" json:"type,omitempty"`
	ExpirationDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
}

func (x *AddAppKeyRequest) Reset() {
	*x = AddAppKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAppKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppKeyRequest) ProtoMessage() {}

func (x *AddAppKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppKeyRequest.ProtoReflect.Descriptor instead.
func (*AddAppKeyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{214}
}

func (x *AddAppKeyRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddAppKeyRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AddAppKeyRequest) GetType() authn.KeyType {
	if x != nil {
		return x.Type
	}
	return authn.KeyType(0)
}

func (x *AddAppKeyRequest) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

type AddAppKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Details    *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	KeyDetails []byte                `protobuf:"bytes,3,opt,name=key_details,json=keyDetails,proto3" json:"key_details,omitempty"`
}

func (x *AddAppKeyResponse) Reset() {
	*x = AddAppKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAppKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppKeyResponse) ProtoMessage() {}

func (x *AddAppKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppKeyResponse.ProtoReflect.Descriptor instead.
func (*AddAppKeyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{215}
}

func (x *AddAppKeyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddAppKeyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AddAppKeyResponse) GetKeyDetails() []byte {
	if x != nil {
		return x.KeyDetails
	}
	return nil
}

type RemoveAppKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AppId     string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	KeyId     string `protobuf:"bytes,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *RemoveAppKeyRequest) Reset() {
	*x = RemoveAppKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAppKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppKeyRequest) ProtoMessage() {}

func (x *RemoveAppKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppKeyRequest.ProtoReflect.Descriptor instead.
func (*RemoveAppKeyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{216}
}

func (x *RemoveAppKeyRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RemoveAppKeyRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RemoveAppKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type RemoveAppKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveAppKeyResponse) Reset() {
	*x = RemoveAppKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAppKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppKeyResponse) ProtoMessage() {}

func (x *RemoveAppKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppKeyResponse.ProtoReflect.Descriptor instead.
func (*RemoveAppKeyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{217}
}

func (x *RemoveAppKeyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetProjectGrantByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantId   string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
}

func (x *GetProjectGrantByIDRequest) Reset() {
	*x = GetProjectGrantByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectGrantByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectGrantByIDRequest) ProtoMessage() {}

func (x *GetProjectGrantByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectGrantByIDRequest.ProtoReflect.Descriptor instead.
func (*GetProjectGrantByIDRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{218}
}

func (x *GetProjectGrantByIDRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetProjectGrantByIDRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

type GetProjectGrantByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectGrant *project.GrantedProject `protobuf:"bytes,1,opt,name=project_grant,json=projectGrant,proto3" json:"project_grant,omitempty"`
}

func (x *GetProjectGrantByIDResponse) Reset() {
	*x = GetProjectGrantByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectGrantByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectGrantByIDResponse) ProtoMessage() {}

func (x *GetProjectGrantByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectGrantByIDResponse.ProtoReflect.Descriptor instead.
func (*GetProjectGrantByIDResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{219}
}

func (x *GetProjectGrantByIDResponse) GetProjectGrant() *project.GrantedProject {
	if x != nil {
		return x.ProjectGrant
	}
	return nil
}

type ListProjectGrantsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*project.ProjectGrantQuery `protobuf:"bytes,3,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListProjectGrantsRequest) Reset() {
	*x = ListProjectGrantsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectGrantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectGrantsRequest) ProtoMessage() {}

func (x *ListProjectGrantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectGrantsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectGrantsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{220}
}

func (x *ListProjectGrantsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListProjectGrantsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListProjectGrantsRequest) GetQueries() []*project.ProjectGrantQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListProjectGrantsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails       `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*project.GrantedProject `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListProjectGrantsResponse) Reset() {
	*x = ListProjectGrantsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectGrantsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectGrantsResponse) ProtoMessage() {}

func (x *ListProjectGrantsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectGrantsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectGrantsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{221}
}

func (x *ListProjectGrantsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListProjectGrantsResponse) GetResult() []*project.GrantedProject {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListAllProjectGrantsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*project.AllProjectGrantQuery `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListAllProjectGrantsRequest) Reset() {
	*x = ListAllProjectGrantsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllProjectGrantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllProjectGrantsRequest) ProtoMessage() {}

func (x *ListAllProjectGrantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllProjectGrantsRequest.ProtoReflect.Descriptor instead.
func (*ListAllProjectGrantsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{222}
}

func (x *ListAllProjectGrantsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListAllProjectGrantsRequest) GetQueries() []*project.AllProjectGrantQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListAllProjectGrantsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails       `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*project.GrantedProject `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListAllProjectGrantsResponse) Reset() {
	*x = ListAllProjectGrantsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllProjectGrantsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllProjectGrantsResponse) ProtoMessage() {}

func (x *ListAllProjectGrantsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllProjectGrantsResponse.ProtoReflect.Descriptor instead.
func (*ListAllProjectGrantsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{223}
}

func (x *ListAllProjectGrantsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListAllProjectGrantsResponse) GetResult() []*project.GrantedProject {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddProjectGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId    string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantedOrgId string   `protobuf:"bytes,2,opt,name=granted_org_id,json=grantedOrgId,proto3" json:"granted_org_id,omitempty"`
	RoleKeys     []string `protobuf:"bytes,3,rep,name=role_keys,json=roleKeys,proto3" json:"role_keys,omitempty"`
}

func (x *AddProjectGrantRequest) Reset() {
	*x = AddProjectGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectGrantRequest) ProtoMessage() {}

func (x *AddProjectGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectGrantRequest.ProtoReflect.Descriptor instead.
func (*AddProjectGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{224}
}

func (x *AddProjectGrantRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddProjectGrantRequest) GetGrantedOrgId() string {
	if x != nil {
		return x.GrantedOrgId
	}
	return ""
}

func (x *AddProjectGrantRequest) GetRoleKeys() []string {
	if x != nil {
		return x.RoleKeys
	}
	return nil
}

type AddProjectGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrantId string                `protobuf:"bytes,1,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
	Details *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddProjectGrantResponse) Reset() {
	*x = AddProjectGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectGrantResponse) ProtoMessage() {}

func (x *AddProjectGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectGrantResponse.ProtoReflect.Descriptor instead.
func (*AddProjectGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{225}
}

func (x *AddProjectGrantResponse) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

func (x *AddProjectGrantResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateProjectGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantId   string   `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
	RoleKeys  []string `protobuf:"bytes,3,rep,name=role_keys,json=roleKeys,proto3" json:"role_keys,omitempty"`
}

func (x *UpdateProjectGrantRequest) Reset() {
	*x = UpdateProjectGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectGrantRequest) ProtoMessage() {}

func (x *UpdateProjectGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectGrantRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{226}
}

func (x *UpdateProjectGrantRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateProjectGrantRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

func (x *UpdateProjectGrantRequest) GetRoleKeys() []string {
	if x != nil {
		return x.RoleKeys
	}
	return nil
}

type UpdateProjectGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateProjectGrantResponse) Reset() {
	*x = UpdateProjectGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectGrantResponse) ProtoMessage() {}

func (x *UpdateProjectGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectGrantResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{227}
}

func (x *UpdateProjectGrantResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type DeactivateProjectGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantId   string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
}

func (x *DeactivateProjectGrantRequest) Reset() {
	*x = DeactivateProjectGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateProjectGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateProjectGrantRequest) ProtoMessage() {}

func (x *DeactivateProjectGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateProjectGrantRequest.ProtoReflect.Descriptor instead.
func (*DeactivateProjectGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{228}
}

func (x *DeactivateProjectGrantRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeactivateProjectGrantRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

type DeactivateProjectGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DeactivateProjectGrantResponse) Reset() {
	*x = DeactivateProjectGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateProjectGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateProjectGrantResponse) ProtoMessage() {}

func (x *DeactivateProjectGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateProjectGrantResponse.ProtoReflect.Descriptor instead.
func (*DeactivateProjectGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{229}
}

func (x *DeactivateProjectGrantResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ReactivateProjectGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantId   string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
}

func (x *ReactivateProjectGrantRequest) Reset() {
	*x = ReactivateProjectGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateProjectGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateProjectGrantRequest) ProtoMessage() {}

func (x *ReactivateProjectGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateProjectGrantRequest.ProtoReflect.Descriptor instead.
func (*ReactivateProjectGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{230}
}

func (x *ReactivateProjectGrantRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ReactivateProjectGrantRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

type ReactivateProjectGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ReactivateProjectGrantResponse) Reset() {
	*x = ReactivateProjectGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateProjectGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateProjectGrantResponse) ProtoMessage() {}

func (x *ReactivateProjectGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateProjectGrantResponse.ProtoReflect.Descriptor instead.
func (*ReactivateProjectGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{231}
}

func (x *ReactivateProjectGrantResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveProjectGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantId   string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
}

func (x *RemoveProjectGrantRequest) Reset() {
	*x = RemoveProjectGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProjectGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProjectGrantRequest) ProtoMessage() {}

func (x *RemoveProjectGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProjectGrantRequest.ProtoReflect.Descriptor instead.
func (*RemoveProjectGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{232}
}

func (x *RemoveProjectGrantRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RemoveProjectGrantRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

type RemoveProjectGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveProjectGrantResponse) Reset() {
	*x = RemoveProjectGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProjectGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProjectGrantResponse) ProtoMessage() {}

func (x *RemoveProjectGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProjectGrantResponse.ProtoReflect.Descriptor instead.
func (*RemoveProjectGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{233}
}

func (x *RemoveProjectGrantResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListProjectGrantMemberRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query  *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Result []string          `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListProjectGrantMemberRolesRequest) Reset() {
	*x = ListProjectGrantMemberRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectGrantMemberRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectGrantMemberRolesRequest) ProtoMessage() {}

func (x *ListProjectGrantMemberRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectGrantMemberRolesRequest.ProtoReflect.Descriptor instead.
func (*ListProjectGrantMemberRolesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{234}
}

func (x *ListProjectGrantMemberRolesRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListProjectGrantMemberRolesRequest) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListProjectGrantMemberRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []string            `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListProjectGrantMemberRolesResponse) Reset() {
	*x = ListProjectGrantMemberRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectGrantMemberRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectGrantMemberRolesResponse) ProtoMessage() {}

func (x *ListProjectGrantMemberRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectGrantMemberRolesResponse.ProtoReflect.Descriptor instead.
func (*ListProjectGrantMemberRolesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{235}
}

func (x *ListProjectGrantMemberRolesResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListProjectGrantMemberRolesResponse) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListProjectGrantMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantId   string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*member.SearchQuery `protobuf:"bytes,4,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListProjectGrantMembersRequest) Reset() {
	*x = ListProjectGrantMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectGrantMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectGrantMembersRequest) ProtoMessage() {}

func (x *ListProjectGrantMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectGrantMembersRequest.ProtoReflect.Descriptor instead.
func (*ListProjectGrantMembersRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{236}
}

func (x *ListProjectGrantMembersRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListProjectGrantMembersRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

func (x *ListProjectGrantMembersRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListProjectGrantMembersRequest) GetQueries() []*member.SearchQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListProjectGrantMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*member.Member    `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListProjectGrantMembersResponse) Reset() {
	*x = ListProjectGrantMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectGrantMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectGrantMembersResponse) ProtoMessage() {}

func (x *ListProjectGrantMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectGrantMembersResponse.ProtoReflect.Descriptor instead.
func (*ListProjectGrantMembersResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{237}
}

func (x *ListProjectGrantMembersResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListProjectGrantMembersResponse) GetResult() []*member.Member {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddProjectGrantMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantId   string   `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
	UserId    string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles     []string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *AddProjectGrantMemberRequest) Reset() {
	*x = AddProjectGrantMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectGrantMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectGrantMemberRequest) ProtoMessage() {}

func (x *AddProjectGrantMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectGrantMemberRequest.ProtoReflect.Descriptor instead.
func (*AddProjectGrantMemberRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{238}
}

func (x *AddProjectGrantMemberRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddProjectGrantMemberRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

func (x *AddProjectGrantMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddProjectGrantMemberRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type AddProjectGrantMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddProjectGrantMemberResponse) Reset() {
	*x = AddProjectGrantMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectGrantMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectGrantMemberResponse) ProtoMessage() {}

func (x *AddProjectGrantMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectGrantMemberResponse.ProtoReflect.Descriptor instead.
func (*AddProjectGrantMemberResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{239}
}

func (x *AddProjectGrantMemberResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateProjectGrantMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantId   string   `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
	UserId    string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles     []string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *UpdateProjectGrantMemberRequest) Reset() {
	*x = UpdateProjectGrantMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectGrantMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectGrantMemberRequest) ProtoMessage() {}

func (x *UpdateProjectGrantMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectGrantMemberRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectGrantMemberRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{240}
}

func (x *UpdateProjectGrantMemberRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateProjectGrantMemberRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

func (x *UpdateProjectGrantMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateProjectGrantMemberRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UpdateProjectGrantMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateProjectGrantMemberResponse) Reset() {
	*x = UpdateProjectGrantMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectGrantMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectGrantMemberResponse) ProtoMessage() {}

func (x *UpdateProjectGrantMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectGrantMemberResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectGrantMemberResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{241}
}

func (x *UpdateProjectGrantMemberResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveProjectGrantMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GrantId   string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
	UserId    string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveProjectGrantMemberRequest) Reset() {
	*x = RemoveProjectGrantMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProjectGrantMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProjectGrantMemberRequest) ProtoMessage() {}

func (x *RemoveProjectGrantMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProjectGrantMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveProjectGrantMemberRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{242}
}

func (x *RemoveProjectGrantMemberRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RemoveProjectGrantMemberRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

func (x *RemoveProjectGrantMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveProjectGrantMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveProjectGrantMemberResponse) Reset() {
	*x = RemoveProjectGrantMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProjectGrantMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProjectGrantMemberResponse) ProtoMessage() {}

func (x *RemoveProjectGrantMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProjectGrantMemberResponse.ProtoReflect.Descriptor instead.
func (*RemoveProjectGrantMemberResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{243}
}

func (x *RemoveProjectGrantMemberResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetUserGrantByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GrantId string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
}

func (x *GetUserGrantByIDRequest) Reset() {
	*x = GetUserGrantByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGrantByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGrantByIDRequest) ProtoMessage() {}

func (x *GetUserGrantByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGrantByIDRequest.ProtoReflect.Descriptor instead.
func (*GetUserGrantByIDRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{244}
}

func (x *GetUserGrantByIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserGrantByIDRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

type GetUserGrantByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGrant *user.UserGrant `protobuf:"bytes,1,opt,name=user_grant,json=userGrant,proto3" json:"user_grant,omitempty"`
}

func (x *GetUserGrantByIDResponse) Reset() {
	*x = GetUserGrantByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGrantByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGrantByIDResponse) ProtoMessage() {}

func (x *GetUserGrantByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGrantByIDResponse.ProtoReflect.Descriptor instead.
func (*GetUserGrantByIDResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{245}
}

func (x *GetUserGrantByIDResponse) GetUserGrant() *user.UserGrant {
	if x != nil {
		return x.UserGrant
	}
	return nil
}

type ListUserGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	//criterias the client is looking for
	Queries []*user.UserGrantQuery `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListUserGrantRequest) Reset() {
	*x = ListUserGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGrantRequest) ProtoMessage() {}

func (x *ListUserGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGrantRequest.ProtoReflect.Descriptor instead.
func (*ListUserGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{246}
}

func (x *ListUserGrantRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListUserGrantRequest) GetQueries() []*user.UserGrantQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ListUserGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*user.UserGrant   `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListUserGrantResponse) Reset() {
	*x = ListUserGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGrantResponse) ProtoMessage() {}

func (x *ListUserGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGrantResponse.ProtoReflect.Descriptor instead.
func (*ListUserGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{247}
}

func (x *ListUserGrantResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListUserGrantResponse) GetResult() []*user.UserGrant {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddUserGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId      string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectGrantId string   `protobuf:"bytes,3,opt,name=project_grant_id,json=projectGrantId,proto3" json:"project_grant_id,omitempty"`
	RoleKeys       []string `protobuf:"bytes,4,rep,name=role_keys,json=roleKeys,proto3" json:"role_keys,omitempty"`
}

func (x *AddUserGrantRequest) Reset() {
	*x = AddUserGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserGrantRequest) ProtoMessage() {}

func (x *AddUserGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserGrantRequest.ProtoReflect.Descriptor instead.
func (*AddUserGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{248}
}

func (x *AddUserGrantRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddUserGrantRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddUserGrantRequest) GetProjectGrantId() string {
	if x != nil {
		return x.ProjectGrantId
	}
	return ""
}

func (x *AddUserGrantRequest) GetRoleKeys() []string {
	if x != nil {
		return x.RoleKeys
	}
	return nil
}

type AddUserGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGrantId string                `protobuf:"bytes,1,opt,name=user_grant_id,json=userGrantId,proto3" json:"user_grant_id,omitempty"`
	Details     *object.ObjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddUserGrantResponse) Reset() {
	*x = AddUserGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserGrantResponse) ProtoMessage() {}

func (x *AddUserGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserGrantResponse.ProtoReflect.Descriptor instead.
func (*AddUserGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{249}
}

func (x *AddUserGrantResponse) GetUserGrantId() string {
	if x != nil {
		return x.UserGrantId
	}
	return ""
}

func (x *AddUserGrantResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateUserGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GrantId  string   `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
	RoleKeys []string `protobuf:"bytes,3,rep,name=role_keys,json=roleKeys,proto3" json:"role_keys,omitempty"`
}

func (x *UpdateUserGrantRequest) Reset() {
	*x = UpdateUserGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserGrantRequest) ProtoMessage() {}

func (x *UpdateUserGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserGrantRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{250}
}

func (x *UpdateUserGrantRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserGrantRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

func (x *UpdateUserGrantRequest) GetRoleKeys() []string {
	if x != nil {
		return x.RoleKeys
	}
	return nil
}

type UpdateUserGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateUserGrantResponse) Reset() {
	*x = UpdateUserGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserGrantResponse) ProtoMessage() {}

func (x *UpdateUserGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserGrantResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{251}
}

func (x *UpdateUserGrantResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type DeactivateUserGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GrantId string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
}

func (x *DeactivateUserGrantRequest) Reset() {
	*x = DeactivateUserGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateUserGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateUserGrantRequest) ProtoMessage() {}

func (x *DeactivateUserGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateUserGrantRequest.ProtoReflect.Descriptor instead.
func (*DeactivateUserGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{252}
}

func (x *DeactivateUserGrantRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeactivateUserGrantRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

type DeactivateUserGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DeactivateUserGrantResponse) Reset() {
	*x = DeactivateUserGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateUserGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateUserGrantResponse) ProtoMessage() {}

func (x *DeactivateUserGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateUserGrantResponse.ProtoReflect.Descriptor instead.
func (*DeactivateUserGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{253}
}

func (x *DeactivateUserGrantResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ReactivateUserGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GrantId string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
}

func (x *ReactivateUserGrantRequest) Reset() {
	*x = ReactivateUserGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateUserGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateUserGrantRequest) ProtoMessage() {}

func (x *ReactivateUserGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateUserGrantRequest.ProtoReflect.Descriptor instead.
func (*ReactivateUserGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{254}
}

func (x *ReactivateUserGrantRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReactivateUserGrantRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

type ReactivateUserGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ReactivateUserGrantResponse) Reset() {
	*x = ReactivateUserGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateUserGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateUserGrantResponse) ProtoMessage() {}

func (x *ReactivateUserGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateUserGrantResponse.ProtoReflect.Descriptor instead.
func (*ReactivateUserGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{255}
}

func (x *ReactivateUserGrantResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveUserGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GrantId string `protobuf:"bytes,2,opt,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
}

func (x *RemoveUserGrantRequest) Reset() {
	*x = RemoveUserGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserGrantRequest) ProtoMessage() {}

func (x *RemoveUserGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserGrantRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{256}
}

func (x *RemoveUserGrantRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveUserGrantRequest) GetGrantId() string {
	if x != nil {
		return x.GrantId
	}
	return ""
}

type RemoveUserGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveUserGrantResponse) Reset() {
	*x = RemoveUserGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserGrantResponse) ProtoMessage() {}

func (x *RemoveUserGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserGrantResponse.ProtoReflect.Descriptor instead.
func (*RemoveUserGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{257}
}

func (x *RemoveUserGrantResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type BulkRemoveUserGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrantId []string `protobuf:"bytes,1,rep,name=grant_id,json=grantId,proto3" json:"grant_id,omitempty"`
}

func (x *BulkRemoveUserGrantRequest) Reset() {
	*x = BulkRemoveUserGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkRemoveUserGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRemoveUserGrantRequest) ProtoMessage() {}

func (x *BulkRemoveUserGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRemoveUserGrantRequest.ProtoReflect.Descriptor instead.
func (*BulkRemoveUserGrantRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{258}
}

func (x *BulkRemoveUserGrantRequest) GetGrantId() []string {
	if x != nil {
		return x.GrantId
	}
	return nil
}

type BulkRemoveUserGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BulkRemoveUserGrantResponse) Reset() {
	*x = BulkRemoveUserGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkRemoveUserGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRemoveUserGrantResponse) ProtoMessage() {}

func (x *BulkRemoveUserGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRemoveUserGrantResponse.ProtoReflect.Descriptor instead.
func (*BulkRemoveUserGrantResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{259}
}

type GetFeaturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFeaturesRequest) Reset() {
	*x = GetFeaturesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeaturesRequest) ProtoMessage() {}

func (x *GetFeaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeaturesRequest.ProtoReflect.Descriptor instead.
func (*GetFeaturesRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{260}
}

type GetFeaturesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Features *features.Features `protobuf:"bytes,1,opt,name=features,proto3" json:"features,omitempty"`
}

func (x *GetFeaturesResponse) Reset() {
	*x = GetFeaturesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeaturesResponse) ProtoMessage() {}

func (x *GetFeaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeaturesResponse.ProtoReflect.Descriptor instead.
func (*GetFeaturesResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{261}
}

func (x *GetFeaturesResponse) GetFeatures() *features.Features {
	if x != nil {
		return x.Features
	}
	return nil
}

type GetOrgIAMPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOrgIAMPolicyRequest) Reset() {
	*x = GetOrgIAMPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgIAMPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgIAMPolicyRequest) ProtoMessage() {}

func (x *GetOrgIAMPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgIAMPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetOrgIAMPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{262}
}

type GetOrgIAMPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.OrgIAMPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetOrgIAMPolicyResponse) Reset() {
	*x = GetOrgIAMPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgIAMPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgIAMPolicyResponse) ProtoMessage() {}

func (x *GetOrgIAMPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgIAMPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetOrgIAMPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{263}
}

func (x *GetOrgIAMPolicyResponse) GetPolicy() *policy.OrgIAMPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type GetLoginPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLoginPolicyRequest) Reset() {
	*x = GetLoginPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginPolicyRequest) ProtoMessage() {}

func (x *GetLoginPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetLoginPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{264}
}

type GetLoginPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.LoginPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	//deprecated: is_default is also defined in zitadel.policy.v1.LoginPolicy
	IsDefault bool `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
}

func (x *GetLoginPolicyResponse) Reset() {
	*x = GetLoginPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginPolicyResponse) ProtoMessage() {}

func (x *GetLoginPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetLoginPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{265}
}

func (x *GetLoginPolicyResponse) GetPolicy() *policy.LoginPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *GetLoginPolicyResponse) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type GetDefaultLoginPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDefaultLoginPolicyRequest) Reset() {
	*x = GetDefaultLoginPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultLoginPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultLoginPolicyRequest) ProtoMessage() {}

func (x *GetDefaultLoginPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultLoginPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultLoginPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{266}
}

type GetDefaultLoginPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.LoginPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetDefaultLoginPolicyResponse) Reset() {
	*x = GetDefaultLoginPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultLoginPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultLoginPolicyResponse) ProtoMessage() {}

func (x *GetDefaultLoginPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultLoginPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultLoginPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{267}
}

func (x *GetDefaultLoginPolicyResponse) GetPolicy() *policy.LoginPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type AddCustomLoginPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowUsernamePassword bool                    `protobuf:"varint,1,opt,name=allow_username_password,json=allowUsernamePassword,proto3" json:"allow_username_password,omitempty"`
	AllowRegister         bool                    `protobuf:"varint,2,opt,name=allow_register,json=allowRegister,proto3" json:"allow_register,omitempty"`
	AllowExternalIdp      bool                    `protobuf:"varint,3,opt,name=allow_external_idp,json=allowExternalIdp,proto3" json:"allow_external_idp,omitempty"`
	ForceMfa              bool                    `protobuf:"varint,4,opt,name=force_mfa,json=forceMfa,proto3" json:"force_mfa,omitempty"`
	PasswordlessType      policy.PasswordlessType `protobuf:"varint,5,opt,name=passwordless_type,json=passwordlessType,proto3,enum=zitadel.policy.v1.PasswordlessType" json:"passwordless_type,omitempty"`
	HidePasswordReset     bool                    `protobuf:"varint,6,opt,name=hide_password_reset,json=hidePasswordReset,proto3" json:"hide_password_reset,omitempty"`
}

func (x *AddCustomLoginPolicyRequest) Reset() {
	*x = AddCustomLoginPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomLoginPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomLoginPolicyRequest) ProtoMessage() {}

func (x *AddCustomLoginPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomLoginPolicyRequest.ProtoReflect.Descriptor instead.
func (*AddCustomLoginPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{268}
}

func (x *AddCustomLoginPolicyRequest) GetAllowUsernamePassword() bool {
	if x != nil {
		return x.AllowUsernamePassword
	}
	return false
}

func (x *AddCustomLoginPolicyRequest) GetAllowRegister() bool {
	if x != nil {
		return x.AllowRegister
	}
	return false
}

func (x *AddCustomLoginPolicyRequest) GetAllowExternalIdp() bool {
	if x != nil {
		return x.AllowExternalIdp
	}
	return false
}

func (x *AddCustomLoginPolicyRequest) GetForceMfa() bool {
	if x != nil {
		return x.ForceMfa
	}
	return false
}

func (x *AddCustomLoginPolicyRequest) GetPasswordlessType() policy.PasswordlessType {
	if x != nil {
		return x.PasswordlessType
	}
	return policy.PasswordlessType(0)
}

func (x *AddCustomLoginPolicyRequest) GetHidePasswordReset() bool {
	if x != nil {
		return x.HidePasswordReset
	}
	return false
}

type AddCustomLoginPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddCustomLoginPolicyResponse) Reset() {
	*x = AddCustomLoginPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomLoginPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomLoginPolicyResponse) ProtoMessage() {}

func (x *AddCustomLoginPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomLoginPolicyResponse.ProtoReflect.Descriptor instead.
func (*AddCustomLoginPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{269}
}

func (x *AddCustomLoginPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateCustomLoginPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowUsernamePassword bool                    `protobuf:"varint,1,opt,name=allow_username_password,json=allowUsernamePassword,proto3" json:"allow_username_password,omitempty"`
	AllowRegister         bool                    `protobuf:"varint,2,opt,name=allow_register,json=allowRegister,proto3" json:"allow_register,omitempty"`
	AllowExternalIdp      bool                    `protobuf:"varint,3,opt,name=allow_external_idp,json=allowExternalIdp,proto3" json:"allow_external_idp,omitempty"`
	ForceMfa              bool                    `protobuf:"varint,4,opt,name=force_mfa,json=forceMfa,proto3" json:"force_mfa,omitempty"`
	PasswordlessType      policy.PasswordlessType `protobuf:"varint,5,opt,name=passwordless_type,json=passwordlessType,proto3,enum=zitadel.policy.v1.PasswordlessType" json:"passwordless_type,omitempty"`
	HidePasswordReset     bool                    `protobuf:"varint,6,opt,name=hide_password_reset,json=hidePasswordReset,proto3" json:"hide_password_reset,omitempty"`
}

func (x *UpdateCustomLoginPolicyRequest) Reset() {
	*x = UpdateCustomLoginPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomLoginPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomLoginPolicyRequest) ProtoMessage() {}

func (x *UpdateCustomLoginPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomLoginPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomLoginPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{270}
}

func (x *UpdateCustomLoginPolicyRequest) GetAllowUsernamePassword() bool {
	if x != nil {
		return x.AllowUsernamePassword
	}
	return false
}

func (x *UpdateCustomLoginPolicyRequest) GetAllowRegister() bool {
	if x != nil {
		return x.AllowRegister
	}
	return false
}

func (x *UpdateCustomLoginPolicyRequest) GetAllowExternalIdp() bool {
	if x != nil {
		return x.AllowExternalIdp
	}
	return false
}

func (x *UpdateCustomLoginPolicyRequest) GetForceMfa() bool {
	if x != nil {
		return x.ForceMfa
	}
	return false
}

func (x *UpdateCustomLoginPolicyRequest) GetPasswordlessType() policy.PasswordlessType {
	if x != nil {
		return x.PasswordlessType
	}
	return policy.PasswordlessType(0)
}

func (x *UpdateCustomLoginPolicyRequest) GetHidePasswordReset() bool {
	if x != nil {
		return x.HidePasswordReset
	}
	return false
}

type UpdateCustomLoginPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateCustomLoginPolicyResponse) Reset() {
	*x = UpdateCustomLoginPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomLoginPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomLoginPolicyResponse) ProtoMessage() {}

func (x *UpdateCustomLoginPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomLoginPolicyResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomLoginPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{271}
}

func (x *UpdateCustomLoginPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResetLoginPolicyToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetLoginPolicyToDefaultRequest) Reset() {
	*x = ResetLoginPolicyToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetLoginPolicyToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLoginPolicyToDefaultRequest) ProtoMessage() {}

func (x *ResetLoginPolicyToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLoginPolicyToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetLoginPolicyToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{272}
}

type ResetLoginPolicyToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetLoginPolicyToDefaultResponse) Reset() {
	*x = ResetLoginPolicyToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetLoginPolicyToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLoginPolicyToDefaultResponse) ProtoMessage() {}

func (x *ResetLoginPolicyToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLoginPolicyToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetLoginPolicyToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{273}
}

func (x *ResetLoginPolicyToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListLoginPolicyIDPsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListLoginPolicyIDPsRequest) Reset() {
	*x = ListLoginPolicyIDPsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoginPolicyIDPsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoginPolicyIDPsRequest) ProtoMessage() {}

func (x *ListLoginPolicyIDPsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoginPolicyIDPsRequest.ProtoReflect.Descriptor instead.
func (*ListLoginPolicyIDPsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{274}
}

func (x *ListLoginPolicyIDPsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type ListLoginPolicyIDPsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails       `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []*idp.IDPLoginPolicyLink `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListLoginPolicyIDPsResponse) Reset() {
	*x = ListLoginPolicyIDPsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoginPolicyIDPsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoginPolicyIDPsResponse) ProtoMessage() {}

func (x *ListLoginPolicyIDPsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoginPolicyIDPsResponse.ProtoReflect.Descriptor instead.
func (*ListLoginPolicyIDPsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{275}
}

func (x *ListLoginPolicyIDPsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListLoginPolicyIDPsResponse) GetResult() []*idp.IDPLoginPolicyLink {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddIDPToLoginPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdpId     string           `protobuf:"bytes,1,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
	OwnerType idp.IDPOwnerType `protobuf:"varint,2,opt,name=ownerType,proto3,enum=zitadel.idp.v1.IDPOwnerType" json:"ownerType,omitempty"`
}

func (x *AddIDPToLoginPolicyRequest) Reset() {
	*x = AddIDPToLoginPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIDPToLoginPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIDPToLoginPolicyRequest) ProtoMessage() {}

func (x *AddIDPToLoginPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIDPToLoginPolicyRequest.ProtoReflect.Descriptor instead.
func (*AddIDPToLoginPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{276}
}

func (x *AddIDPToLoginPolicyRequest) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

func (x *AddIDPToLoginPolicyRequest) GetOwnerType() idp.IDPOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return idp.IDPOwnerType(0)
}

type AddIDPToLoginPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddIDPToLoginPolicyResponse) Reset() {
	*x = AddIDPToLoginPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIDPToLoginPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIDPToLoginPolicyResponse) ProtoMessage() {}

func (x *AddIDPToLoginPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIDPToLoginPolicyResponse.ProtoReflect.Descriptor instead.
func (*AddIDPToLoginPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{277}
}

func (x *AddIDPToLoginPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveIDPFromLoginPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdpId string `protobuf:"bytes,1,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
}

func (x *RemoveIDPFromLoginPolicyRequest) Reset() {
	*x = RemoveIDPFromLoginPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveIDPFromLoginPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveIDPFromLoginPolicyRequest) ProtoMessage() {}

func (x *RemoveIDPFromLoginPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveIDPFromLoginPolicyRequest.ProtoReflect.Descriptor instead.
func (*RemoveIDPFromLoginPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{278}
}

func (x *RemoveIDPFromLoginPolicyRequest) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

type RemoveIDPFromLoginPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveIDPFromLoginPolicyResponse) Reset() {
	*x = RemoveIDPFromLoginPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveIDPFromLoginPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveIDPFromLoginPolicyResponse) ProtoMessage() {}

func (x *RemoveIDPFromLoginPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveIDPFromLoginPolicyResponse.ProtoReflect.Descriptor instead.
func (*RemoveIDPFromLoginPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{279}
}

func (x *RemoveIDPFromLoginPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListLoginPolicySecondFactorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListLoginPolicySecondFactorsRequest) Reset() {
	*x = ListLoginPolicySecondFactorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoginPolicySecondFactorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoginPolicySecondFactorsRequest) ProtoMessage() {}

func (x *ListLoginPolicySecondFactorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoginPolicySecondFactorsRequest.ProtoReflect.Descriptor instead.
func (*ListLoginPolicySecondFactorsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{280}
}

type ListLoginPolicySecondFactorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails       `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []policy.SecondFactorType `protobuf:"varint,2,rep,packed,name=result,proto3,enum=zitadel.policy.v1.SecondFactorType" json:"result,omitempty"`
}

func (x *ListLoginPolicySecondFactorsResponse) Reset() {
	*x = ListLoginPolicySecondFactorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoginPolicySecondFactorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoginPolicySecondFactorsResponse) ProtoMessage() {}

func (x *ListLoginPolicySecondFactorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoginPolicySecondFactorsResponse.ProtoReflect.Descriptor instead.
func (*ListLoginPolicySecondFactorsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{281}
}

func (x *ListLoginPolicySecondFactorsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListLoginPolicySecondFactorsResponse) GetResult() []policy.SecondFactorType {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddSecondFactorToLoginPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type policy.SecondFactorType `protobuf:"varint,1,opt,name=type,proto3,enum=zitadel.policy.v1.SecondFactorType" json:"type,omitempty"`
}

func (x *AddSecondFactorToLoginPolicyRequest) Reset() {
	*x = AddSecondFactorToLoginPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSecondFactorToLoginPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSecondFactorToLoginPolicyRequest) ProtoMessage() {}

func (x *AddSecondFactorToLoginPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSecondFactorToLoginPolicyRequest.ProtoReflect.Descriptor instead.
func (*AddSecondFactorToLoginPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{282}
}

func (x *AddSecondFactorToLoginPolicyRequest) GetType() policy.SecondFactorType {
	if x != nil {
		return x.Type
	}
	return policy.SecondFactorType(0)
}

type AddSecondFactorToLoginPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddSecondFactorToLoginPolicyResponse) Reset() {
	*x = AddSecondFactorToLoginPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSecondFactorToLoginPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSecondFactorToLoginPolicyResponse) ProtoMessage() {}

func (x *AddSecondFactorToLoginPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSecondFactorToLoginPolicyResponse.ProtoReflect.Descriptor instead.
func (*AddSecondFactorToLoginPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{283}
}

func (x *AddSecondFactorToLoginPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveSecondFactorFromLoginPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type policy.SecondFactorType `protobuf:"varint,1,opt,name=type,proto3,enum=zitadel.policy.v1.SecondFactorType" json:"type,omitempty"`
}

func (x *RemoveSecondFactorFromLoginPolicyRequest) Reset() {
	*x = RemoveSecondFactorFromLoginPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSecondFactorFromLoginPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSecondFactorFromLoginPolicyRequest) ProtoMessage() {}

func (x *RemoveSecondFactorFromLoginPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSecondFactorFromLoginPolicyRequest.ProtoReflect.Descriptor instead.
func (*RemoveSecondFactorFromLoginPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{284}
}

func (x *RemoveSecondFactorFromLoginPolicyRequest) GetType() policy.SecondFactorType {
	if x != nil {
		return x.Type
	}
	return policy.SecondFactorType(0)
}

type RemoveSecondFactorFromLoginPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveSecondFactorFromLoginPolicyResponse) Reset() {
	*x = RemoveSecondFactorFromLoginPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSecondFactorFromLoginPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSecondFactorFromLoginPolicyResponse) ProtoMessage() {}

func (x *RemoveSecondFactorFromLoginPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSecondFactorFromLoginPolicyResponse.ProtoReflect.Descriptor instead.
func (*RemoveSecondFactorFromLoginPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{285}
}

func (x *RemoveSecondFactorFromLoginPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListLoginPolicyMultiFactorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListLoginPolicyMultiFactorsRequest) Reset() {
	*x = ListLoginPolicyMultiFactorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoginPolicyMultiFactorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoginPolicyMultiFactorsRequest) ProtoMessage() {}

func (x *ListLoginPolicyMultiFactorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoginPolicyMultiFactorsRequest.ProtoReflect.Descriptor instead.
func (*ListLoginPolicyMultiFactorsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{286}
}

type ListLoginPolicyMultiFactorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ListDetails      `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Result  []policy.MultiFactorType `protobuf:"varint,2,rep,packed,name=result,proto3,enum=zitadel.policy.v1.MultiFactorType" json:"result,omitempty"`
}

func (x *ListLoginPolicyMultiFactorsResponse) Reset() {
	*x = ListLoginPolicyMultiFactorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoginPolicyMultiFactorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoginPolicyMultiFactorsResponse) ProtoMessage() {}

func (x *ListLoginPolicyMultiFactorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoginPolicyMultiFactorsResponse.ProtoReflect.Descriptor instead.
func (*ListLoginPolicyMultiFactorsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{287}
}

func (x *ListLoginPolicyMultiFactorsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListLoginPolicyMultiFactorsResponse) GetResult() []policy.MultiFactorType {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddMultiFactorToLoginPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type policy.MultiFactorType `protobuf:"varint,1,opt,name=type,proto3,enum=zitadel.policy.v1.MultiFactorType" json:"type,omitempty"`
}

func (x *AddMultiFactorToLoginPolicyRequest) Reset() {
	*x = AddMultiFactorToLoginPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMultiFactorToLoginPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMultiFactorToLoginPolicyRequest) ProtoMessage() {}

func (x *AddMultiFactorToLoginPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMultiFactorToLoginPolicyRequest.ProtoReflect.Descriptor instead.
func (*AddMultiFactorToLoginPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{288}
}

func (x *AddMultiFactorToLoginPolicyRequest) GetType() policy.MultiFactorType {
	if x != nil {
		return x.Type
	}
	return policy.MultiFactorType(0)
}

type AddMultiFactorToLoginPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddMultiFactorToLoginPolicyResponse) Reset() {
	*x = AddMultiFactorToLoginPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMultiFactorToLoginPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMultiFactorToLoginPolicyResponse) ProtoMessage() {}

func (x *AddMultiFactorToLoginPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMultiFactorToLoginPolicyResponse.ProtoReflect.Descriptor instead.
func (*AddMultiFactorToLoginPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{289}
}

func (x *AddMultiFactorToLoginPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveMultiFactorFromLoginPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type policy.MultiFactorType `protobuf:"varint,1,opt,name=type,proto3,enum=zitadel.policy.v1.MultiFactorType" json:"type,omitempty"`
}

func (x *RemoveMultiFactorFromLoginPolicyRequest) Reset() {
	*x = RemoveMultiFactorFromLoginPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMultiFactorFromLoginPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMultiFactorFromLoginPolicyRequest) ProtoMessage() {}

func (x *RemoveMultiFactorFromLoginPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMultiFactorFromLoginPolicyRequest.ProtoReflect.Descriptor instead.
func (*RemoveMultiFactorFromLoginPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{290}
}

func (x *RemoveMultiFactorFromLoginPolicyRequest) GetType() policy.MultiFactorType {
	if x != nil {
		return x.Type
	}
	return policy.MultiFactorType(0)
}

type RemoveMultiFactorFromLoginPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveMultiFactorFromLoginPolicyResponse) Reset() {
	*x = RemoveMultiFactorFromLoginPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMultiFactorFromLoginPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMultiFactorFromLoginPolicyResponse) ProtoMessage() {}

func (x *RemoveMultiFactorFromLoginPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMultiFactorFromLoginPolicyResponse.ProtoReflect.Descriptor instead.
func (*RemoveMultiFactorFromLoginPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{291}
}

func (x *RemoveMultiFactorFromLoginPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetPasswordComplexityPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPasswordComplexityPolicyRequest) Reset() {
	*x = GetPasswordComplexityPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPasswordComplexityPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPasswordComplexityPolicyRequest) ProtoMessage() {}

func (x *GetPasswordComplexityPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPasswordComplexityPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPasswordComplexityPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{292}
}

type GetPasswordComplexityPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.PasswordComplexityPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	//deprecated: is_default is also defined in zitadel.policy.v1.PasswordComplexityPolicy
	IsDefault bool `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
}

func (x *GetPasswordComplexityPolicyResponse) Reset() {
	*x = GetPasswordComplexityPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[293]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPasswordComplexityPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPasswordComplexityPolicyResponse) ProtoMessage() {}

func (x *GetPasswordComplexityPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[293]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPasswordComplexityPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetPasswordComplexityPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{293}
}

func (x *GetPasswordComplexityPolicyResponse) GetPolicy() *policy.PasswordComplexityPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *GetPasswordComplexityPolicyResponse) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

//This is an empty request
type GetDefaultPasswordComplexityPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDefaultPasswordComplexityPolicyRequest) Reset() {
	*x = GetDefaultPasswordComplexityPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[294]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultPasswordComplexityPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultPasswordComplexityPolicyRequest) ProtoMessage() {}

func (x *GetDefaultPasswordComplexityPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[294]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultPasswordComplexityPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultPasswordComplexityPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{294}
}

type GetDefaultPasswordComplexityPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.PasswordComplexityPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetDefaultPasswordComplexityPolicyResponse) Reset() {
	*x = GetDefaultPasswordComplexityPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[295]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultPasswordComplexityPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultPasswordComplexityPolicyResponse) ProtoMessage() {}

func (x *GetDefaultPasswordComplexityPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[295]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultPasswordComplexityPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultPasswordComplexityPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{295}
}

func (x *GetDefaultPasswordComplexityPolicyResponse) GetPolicy() *policy.PasswordComplexityPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type AddCustomPasswordComplexityPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinLength    uint64 `protobuf:"varint,1,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	HasUppercase bool   `protobuf:"varint,2,opt,name=has_uppercase,json=hasUppercase,proto3" json:"has_uppercase,omitempty"`
	HasLowercase bool   `protobuf:"varint,3,opt,name=has_lowercase,json=hasLowercase,proto3" json:"has_lowercase,omitempty"`
	HasNumber    bool   `protobuf:"varint,4,opt,name=has_number,json=hasNumber,proto3" json:"has_number,omitempty"`
	HasSymbol    bool   `protobuf:"varint,5,opt,name=has_symbol,json=hasSymbol,proto3" json:"has_symbol,omitempty"`
}

func (x *AddCustomPasswordComplexityPolicyRequest) Reset() {
	*x = AddCustomPasswordComplexityPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[296]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomPasswordComplexityPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomPasswordComplexityPolicyRequest) ProtoMessage() {}

func (x *AddCustomPasswordComplexityPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[296]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomPasswordComplexityPolicyRequest.ProtoReflect.Descriptor instead.
func (*AddCustomPasswordComplexityPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{296}
}

func (x *AddCustomPasswordComplexityPolicyRequest) GetMinLength() uint64 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *AddCustomPasswordComplexityPolicyRequest) GetHasUppercase() bool {
	if x != nil {
		return x.HasUppercase
	}
	return false
}

func (x *AddCustomPasswordComplexityPolicyRequest) GetHasLowercase() bool {
	if x != nil {
		return x.HasLowercase
	}
	return false
}

func (x *AddCustomPasswordComplexityPolicyRequest) GetHasNumber() bool {
	if x != nil {
		return x.HasNumber
	}
	return false
}

func (x *AddCustomPasswordComplexityPolicyRequest) GetHasSymbol() bool {
	if x != nil {
		return x.HasSymbol
	}
	return false
}

type AddCustomPasswordComplexityPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddCustomPasswordComplexityPolicyResponse) Reset() {
	*x = AddCustomPasswordComplexityPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[297]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomPasswordComplexityPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomPasswordComplexityPolicyResponse) ProtoMessage() {}

func (x *AddCustomPasswordComplexityPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[297]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomPasswordComplexityPolicyResponse.ProtoReflect.Descriptor instead.
func (*AddCustomPasswordComplexityPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{297}
}

func (x *AddCustomPasswordComplexityPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateCustomPasswordComplexityPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinLength    uint64 `protobuf:"varint,1,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	HasUppercase bool   `protobuf:"varint,2,opt,name=has_uppercase,json=hasUppercase,proto3" json:"has_uppercase,omitempty"`
	HasLowercase bool   `protobuf:"varint,3,opt,name=has_lowercase,json=hasLowercase,proto3" json:"has_lowercase,omitempty"`
	HasNumber    bool   `protobuf:"varint,4,opt,name=has_number,json=hasNumber,proto3" json:"has_number,omitempty"`
	HasSymbol    bool   `protobuf:"varint,5,opt,name=has_symbol,json=hasSymbol,proto3" json:"has_symbol,omitempty"`
}

func (x *UpdateCustomPasswordComplexityPolicyRequest) Reset() {
	*x = UpdateCustomPasswordComplexityPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[298]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomPasswordComplexityPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomPasswordComplexityPolicyRequest) ProtoMessage() {}

func (x *UpdateCustomPasswordComplexityPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[298]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomPasswordComplexityPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomPasswordComplexityPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{298}
}

func (x *UpdateCustomPasswordComplexityPolicyRequest) GetMinLength() uint64 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *UpdateCustomPasswordComplexityPolicyRequest) GetHasUppercase() bool {
	if x != nil {
		return x.HasUppercase
	}
	return false
}

func (x *UpdateCustomPasswordComplexityPolicyRequest) GetHasLowercase() bool {
	if x != nil {
		return x.HasLowercase
	}
	return false
}

func (x *UpdateCustomPasswordComplexityPolicyRequest) GetHasNumber() bool {
	if x != nil {
		return x.HasNumber
	}
	return false
}

func (x *UpdateCustomPasswordComplexityPolicyRequest) GetHasSymbol() bool {
	if x != nil {
		return x.HasSymbol
	}
	return false
}

type UpdateCustomPasswordComplexityPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateCustomPasswordComplexityPolicyResponse) Reset() {
	*x = UpdateCustomPasswordComplexityPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[299]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomPasswordComplexityPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomPasswordComplexityPolicyResponse) ProtoMessage() {}

func (x *UpdateCustomPasswordComplexityPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[299]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomPasswordComplexityPolicyResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomPasswordComplexityPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{299}
}

func (x *UpdateCustomPasswordComplexityPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type ResetPasswordComplexityPolicyToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetPasswordComplexityPolicyToDefaultRequest) Reset() {
	*x = ResetPasswordComplexityPolicyToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[300]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordComplexityPolicyToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordComplexityPolicyToDefaultRequest) ProtoMessage() {}

func (x *ResetPasswordComplexityPolicyToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[300]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordComplexityPolicyToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordComplexityPolicyToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{300}
}

type ResetPasswordComplexityPolicyToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetPasswordComplexityPolicyToDefaultResponse) Reset() {
	*x = ResetPasswordComplexityPolicyToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[301]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordComplexityPolicyToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordComplexityPolicyToDefaultResponse) ProtoMessage() {}

func (x *ResetPasswordComplexityPolicyToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[301]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordComplexityPolicyToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetPasswordComplexityPolicyToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{301}
}

func (x *ResetPasswordComplexityPolicyToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type GetPasswordAgePolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPasswordAgePolicyRequest) Reset() {
	*x = GetPasswordAgePolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[302]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPasswordAgePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPasswordAgePolicyRequest) ProtoMessage() {}

func (x *GetPasswordAgePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[302]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPasswordAgePolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPasswordAgePolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{302}
}

type GetPasswordAgePolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.PasswordAgePolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	//deprecated: is_default is also defined in zitadel.policy.v1.PasswordAgePolicy
	IsDefault bool `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
}

func (x *GetPasswordAgePolicyResponse) Reset() {
	*x = GetPasswordAgePolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[303]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPasswordAgePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPasswordAgePolicyResponse) ProtoMessage() {}

func (x *GetPasswordAgePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[303]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPasswordAgePolicyResponse.ProtoReflect.Descriptor instead.
func (*GetPasswordAgePolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{303}
}

func (x *GetPasswordAgePolicyResponse) GetPolicy() *policy.PasswordAgePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *GetPasswordAgePolicyResponse) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

//This is an empty request
type GetDefaultPasswordAgePolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDefaultPasswordAgePolicyRequest) Reset() {
	*x = GetDefaultPasswordAgePolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[304]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultPasswordAgePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultPasswordAgePolicyRequest) ProtoMessage() {}

func (x *GetDefaultPasswordAgePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[304]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultPasswordAgePolicyRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultPasswordAgePolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{304}
}

type GetDefaultPasswordAgePolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.PasswordAgePolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetDefaultPasswordAgePolicyResponse) Reset() {
	*x = GetDefaultPasswordAgePolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[305]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultPasswordAgePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultPasswordAgePolicyResponse) ProtoMessage() {}

func (x *GetDefaultPasswordAgePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[305]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultPasswordAgePolicyResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultPasswordAgePolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{305}
}

func (x *GetDefaultPasswordAgePolicyResponse) GetPolicy() *policy.PasswordAgePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type AddCustomPasswordAgePolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxAgeDays     uint32 `protobuf:"varint,1,opt,name=max_age_days,json=maxAgeDays,proto3" json:"max_age_days,omitempty"`
	ExpireWarnDays uint32 `protobuf:"varint,2,opt,name=expire_warn_days,json=expireWarnDays,proto3" json:"expire_warn_days,omitempty"`
}

func (x *AddCustomPasswordAgePolicyRequest) Reset() {
	*x = AddCustomPasswordAgePolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[306]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomPasswordAgePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomPasswordAgePolicyRequest) ProtoMessage() {}

func (x *AddCustomPasswordAgePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[306]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomPasswordAgePolicyRequest.ProtoReflect.Descriptor instead.
func (*AddCustomPasswordAgePolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{306}
}

func (x *AddCustomPasswordAgePolicyRequest) GetMaxAgeDays() uint32 {
	if x != nil {
		return x.MaxAgeDays
	}
	return 0
}

func (x *AddCustomPasswordAgePolicyRequest) GetExpireWarnDays() uint32 {
	if x != nil {
		return x.ExpireWarnDays
	}
	return 0
}

type AddCustomPasswordAgePolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddCustomPasswordAgePolicyResponse) Reset() {
	*x = AddCustomPasswordAgePolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[307]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomPasswordAgePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomPasswordAgePolicyResponse) ProtoMessage() {}

func (x *AddCustomPasswordAgePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[307]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomPasswordAgePolicyResponse.ProtoReflect.Descriptor instead.
func (*AddCustomPasswordAgePolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{307}
}

func (x *AddCustomPasswordAgePolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateCustomPasswordAgePolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxAgeDays     uint32 `protobuf:"varint,1,opt,name=max_age_days,json=maxAgeDays,proto3" json:"max_age_days,omitempty"`
	ExpireWarnDays uint32 `protobuf:"varint,2,opt,name=expire_warn_days,json=expireWarnDays,proto3" json:"expire_warn_days,omitempty"`
}

func (x *UpdateCustomPasswordAgePolicyRequest) Reset() {
	*x = UpdateCustomPasswordAgePolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[308]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomPasswordAgePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomPasswordAgePolicyRequest) ProtoMessage() {}

func (x *UpdateCustomPasswordAgePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[308]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomPasswordAgePolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomPasswordAgePolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{308}
}

func (x *UpdateCustomPasswordAgePolicyRequest) GetMaxAgeDays() uint32 {
	if x != nil {
		return x.MaxAgeDays
	}
	return 0
}

func (x *UpdateCustomPasswordAgePolicyRequest) GetExpireWarnDays() uint32 {
	if x != nil {
		return x.ExpireWarnDays
	}
	return 0
}

type UpdateCustomPasswordAgePolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateCustomPasswordAgePolicyResponse) Reset() {
	*x = UpdateCustomPasswordAgePolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[309]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomPasswordAgePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomPasswordAgePolicyResponse) ProtoMessage() {}

func (x *UpdateCustomPasswordAgePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[309]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomPasswordAgePolicyResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomPasswordAgePolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{309}
}

func (x *UpdateCustomPasswordAgePolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type ResetPasswordAgePolicyToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetPasswordAgePolicyToDefaultRequest) Reset() {
	*x = ResetPasswordAgePolicyToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[310]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordAgePolicyToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordAgePolicyToDefaultRequest) ProtoMessage() {}

func (x *ResetPasswordAgePolicyToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[310]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordAgePolicyToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordAgePolicyToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{310}
}

type ResetPasswordAgePolicyToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetPasswordAgePolicyToDefaultResponse) Reset() {
	*x = ResetPasswordAgePolicyToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[311]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordAgePolicyToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordAgePolicyToDefaultResponse) ProtoMessage() {}

func (x *ResetPasswordAgePolicyToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[311]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordAgePolicyToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetPasswordAgePolicyToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{311}
}

func (x *ResetPasswordAgePolicyToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type GetLockoutPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLockoutPolicyRequest) Reset() {
	*x = GetLockoutPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[312]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLockoutPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockoutPolicyRequest) ProtoMessage() {}

func (x *GetLockoutPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[312]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockoutPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetLockoutPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{312}
}

type GetLockoutPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.LockoutPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	//deprecated: is_default is also defined in zitadel.policy.v1.LockoutPolicy
	IsDefault bool `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
}

func (x *GetLockoutPolicyResponse) Reset() {
	*x = GetLockoutPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[313]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLockoutPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockoutPolicyResponse) ProtoMessage() {}

func (x *GetLockoutPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[313]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockoutPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetLockoutPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{313}
}

func (x *GetLockoutPolicyResponse) GetPolicy() *policy.LockoutPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *GetLockoutPolicyResponse) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

//This is an empty request
type GetDefaultLockoutPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDefaultLockoutPolicyRequest) Reset() {
	*x = GetDefaultLockoutPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[314]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultLockoutPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultLockoutPolicyRequest) ProtoMessage() {}

func (x *GetDefaultLockoutPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[314]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultLockoutPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultLockoutPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{314}
}

type GetDefaultLockoutPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.LockoutPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetDefaultLockoutPolicyResponse) Reset() {
	*x = GetDefaultLockoutPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[315]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultLockoutPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultLockoutPolicyResponse) ProtoMessage() {}

func (x *GetDefaultLockoutPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[315]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultLockoutPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultLockoutPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{315}
}

func (x *GetDefaultLockoutPolicyResponse) GetPolicy() *policy.LockoutPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type AddCustomLockoutPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPasswordAttempts uint32 `protobuf:"varint,1,opt,name=max_password_attempts,json=maxPasswordAttempts,proto3" json:"max_password_attempts,omitempty"`
}

func (x *AddCustomLockoutPolicyRequest) Reset() {
	*x = AddCustomLockoutPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[316]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomLockoutPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomLockoutPolicyRequest) ProtoMessage() {}

func (x *AddCustomLockoutPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[316]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomLockoutPolicyRequest.ProtoReflect.Descriptor instead.
func (*AddCustomLockoutPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{316}
}

func (x *AddCustomLockoutPolicyRequest) GetMaxPasswordAttempts() uint32 {
	if x != nil {
		return x.MaxPasswordAttempts
	}
	return 0
}

type AddCustomLockoutPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddCustomLockoutPolicyResponse) Reset() {
	*x = AddCustomLockoutPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[317]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomLockoutPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomLockoutPolicyResponse) ProtoMessage() {}

func (x *AddCustomLockoutPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[317]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomLockoutPolicyResponse.ProtoReflect.Descriptor instead.
func (*AddCustomLockoutPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{317}
}

func (x *AddCustomLockoutPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateCustomLockoutPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPasswordAttempts uint32 `protobuf:"varint,1,opt,name=max_password_attempts,json=maxPasswordAttempts,proto3" json:"max_password_attempts,omitempty"`
}

func (x *UpdateCustomLockoutPolicyRequest) Reset() {
	*x = UpdateCustomLockoutPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[318]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomLockoutPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomLockoutPolicyRequest) ProtoMessage() {}

func (x *UpdateCustomLockoutPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[318]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomLockoutPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomLockoutPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{318}
}

func (x *UpdateCustomLockoutPolicyRequest) GetMaxPasswordAttempts() uint32 {
	if x != nil {
		return x.MaxPasswordAttempts
	}
	return 0
}

type UpdateCustomLockoutPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateCustomLockoutPolicyResponse) Reset() {
	*x = UpdateCustomLockoutPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[319]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomLockoutPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomLockoutPolicyResponse) ProtoMessage() {}

func (x *UpdateCustomLockoutPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[319]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomLockoutPolicyResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomLockoutPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{319}
}

func (x *UpdateCustomLockoutPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type ResetLockoutPolicyToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetLockoutPolicyToDefaultRequest) Reset() {
	*x = ResetLockoutPolicyToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[320]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetLockoutPolicyToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLockoutPolicyToDefaultRequest) ProtoMessage() {}

func (x *ResetLockoutPolicyToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[320]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLockoutPolicyToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetLockoutPolicyToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{320}
}

type ResetLockoutPolicyToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetLockoutPolicyToDefaultResponse) Reset() {
	*x = ResetLockoutPolicyToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[321]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetLockoutPolicyToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLockoutPolicyToDefaultResponse) ProtoMessage() {}

func (x *ResetLockoutPolicyToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[321]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLockoutPolicyToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetLockoutPolicyToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{321}
}

func (x *ResetLockoutPolicyToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type GetPrivacyPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPrivacyPolicyRequest) Reset() {
	*x = GetPrivacyPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[322]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivacyPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivacyPolicyRequest) ProtoMessage() {}

func (x *GetPrivacyPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[322]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivacyPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPrivacyPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{322}
}

type GetPrivacyPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.PrivacyPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetPrivacyPolicyResponse) Reset() {
	*x = GetPrivacyPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[323]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivacyPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivacyPolicyResponse) ProtoMessage() {}

func (x *GetPrivacyPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[323]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivacyPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetPrivacyPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{323}
}

func (x *GetPrivacyPolicyResponse) GetPolicy() *policy.PrivacyPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

//This is an empty request
type GetDefaultPrivacyPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDefaultPrivacyPolicyRequest) Reset() {
	*x = GetDefaultPrivacyPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[324]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultPrivacyPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultPrivacyPolicyRequest) ProtoMessage() {}

func (x *GetDefaultPrivacyPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[324]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultPrivacyPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultPrivacyPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{324}
}

type GetDefaultPrivacyPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.PrivacyPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetDefaultPrivacyPolicyResponse) Reset() {
	*x = GetDefaultPrivacyPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[325]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultPrivacyPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultPrivacyPolicyResponse) ProtoMessage() {}

func (x *GetDefaultPrivacyPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[325]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultPrivacyPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultPrivacyPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{325}
}

func (x *GetDefaultPrivacyPolicyResponse) GetPolicy() *policy.PrivacyPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type AddCustomPrivacyPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TosLink     string `protobuf:"bytes,1,opt,name=tos_link,json=tosLink,proto3" json:"tos_link,omitempty"`
	PrivacyLink string `protobuf:"bytes,2,opt,name=privacy_link,json=privacyLink,proto3" json:"privacy_link,omitempty"`
}

func (x *AddCustomPrivacyPolicyRequest) Reset() {
	*x = AddCustomPrivacyPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[326]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomPrivacyPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomPrivacyPolicyRequest) ProtoMessage() {}

func (x *AddCustomPrivacyPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[326]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomPrivacyPolicyRequest.ProtoReflect.Descriptor instead.
func (*AddCustomPrivacyPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{326}
}

func (x *AddCustomPrivacyPolicyRequest) GetTosLink() string {
	if x != nil {
		return x.TosLink
	}
	return ""
}

func (x *AddCustomPrivacyPolicyRequest) GetPrivacyLink() string {
	if x != nil {
		return x.PrivacyLink
	}
	return ""
}

type AddCustomPrivacyPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddCustomPrivacyPolicyResponse) Reset() {
	*x = AddCustomPrivacyPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[327]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomPrivacyPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomPrivacyPolicyResponse) ProtoMessage() {}

func (x *AddCustomPrivacyPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[327]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomPrivacyPolicyResponse.ProtoReflect.Descriptor instead.
func (*AddCustomPrivacyPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{327}
}

func (x *AddCustomPrivacyPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateCustomPrivacyPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TosLink     string `protobuf:"bytes,1,opt,name=tos_link,json=tosLink,proto3" json:"tos_link,omitempty"`
	PrivacyLink string `protobuf:"bytes,2,opt,name=privacy_link,json=privacyLink,proto3" json:"privacy_link,omitempty"`
}

func (x *UpdateCustomPrivacyPolicyRequest) Reset() {
	*x = UpdateCustomPrivacyPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[328]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomPrivacyPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomPrivacyPolicyRequest) ProtoMessage() {}

func (x *UpdateCustomPrivacyPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[328]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomPrivacyPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomPrivacyPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{328}
}

func (x *UpdateCustomPrivacyPolicyRequest) GetTosLink() string {
	if x != nil {
		return x.TosLink
	}
	return ""
}

func (x *UpdateCustomPrivacyPolicyRequest) GetPrivacyLink() string {
	if x != nil {
		return x.PrivacyLink
	}
	return ""
}

type UpdateCustomPrivacyPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateCustomPrivacyPolicyResponse) Reset() {
	*x = UpdateCustomPrivacyPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[329]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomPrivacyPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomPrivacyPolicyResponse) ProtoMessage() {}

func (x *UpdateCustomPrivacyPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[329]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomPrivacyPolicyResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomPrivacyPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{329}
}

func (x *UpdateCustomPrivacyPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type ResetPrivacyPolicyToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetPrivacyPolicyToDefaultRequest) Reset() {
	*x = ResetPrivacyPolicyToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[330]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPrivacyPolicyToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPrivacyPolicyToDefaultRequest) ProtoMessage() {}

func (x *ResetPrivacyPolicyToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[330]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPrivacyPolicyToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetPrivacyPolicyToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{330}
}

type ResetPrivacyPolicyToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetPrivacyPolicyToDefaultResponse) Reset() {
	*x = ResetPrivacyPolicyToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[331]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPrivacyPolicyToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPrivacyPolicyToDefaultResponse) ProtoMessage() {}

func (x *ResetPrivacyPolicyToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[331]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPrivacyPolicyToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetPrivacyPolicyToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{331}
}

func (x *ResetPrivacyPolicyToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type GetLabelPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLabelPolicyRequest) Reset() {
	*x = GetLabelPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[332]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelPolicyRequest) ProtoMessage() {}

func (x *GetLabelPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[332]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetLabelPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{332}
}

type GetLabelPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.LabelPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	//deprecated: is_default is also defined in zitadel.policy.v1.LabelPolicy
	IsDefault bool `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
}

func (x *GetLabelPolicyResponse) Reset() {
	*x = GetLabelPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[333]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelPolicyResponse) ProtoMessage() {}

func (x *GetLabelPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[333]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetLabelPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{333}
}

func (x *GetLabelPolicyResponse) GetPolicy() *policy.LabelPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *GetLabelPolicyResponse) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

//This is an empty request
type GetPreviewLabelPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPreviewLabelPolicyRequest) Reset() {
	*x = GetPreviewLabelPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[334]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviewLabelPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviewLabelPolicyRequest) ProtoMessage() {}

func (x *GetPreviewLabelPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[334]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPreviewLabelPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPreviewLabelPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{334}
}

type GetPreviewLabelPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.LabelPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	//deprecated: is_default is also defined in zitadel.policy.v1.LabelPolicy
	IsDefault bool `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
}

func (x *GetPreviewLabelPolicyResponse) Reset() {
	*x = GetPreviewLabelPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[335]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviewLabelPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviewLabelPolicyResponse) ProtoMessage() {}

func (x *GetPreviewLabelPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[335]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPreviewLabelPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetPreviewLabelPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{335}
}

func (x *GetPreviewLabelPolicyResponse) GetPolicy() *policy.LabelPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *GetPreviewLabelPolicyResponse) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

//This is an empty request
type GetDefaultLabelPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDefaultLabelPolicyRequest) Reset() {
	*x = GetDefaultLabelPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[336]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultLabelPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultLabelPolicyRequest) ProtoMessage() {}

func (x *GetDefaultLabelPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[336]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultLabelPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultLabelPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{336}
}

type GetDefaultLabelPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *policy.LabelPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetDefaultLabelPolicyResponse) Reset() {
	*x = GetDefaultLabelPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[337]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultLabelPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultLabelPolicyResponse) ProtoMessage() {}

func (x *GetDefaultLabelPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[337]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultLabelPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultLabelPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{337}
}

func (x *GetDefaultLabelPolicyResponse) GetPolicy() *policy.LabelPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type AddCustomLabelPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryColor string `protobuf:"bytes,1,opt,name=primary_color,json=primaryColor,proto3" json:"primary_color,omitempty"`
	// hides the org suffix on the login form if the scope \"urn:zitadel:iam:org:domain:primary:{domainname}\" is set. Details about this scope in https://docs.zitadel.ch/concepts#Reserved_Scopes
	HideLoginNameSuffix bool   `protobuf:"varint,3,opt,name=hide_login_name_suffix,json=hideLoginNameSuffix,proto3" json:"hide_login_name_suffix,omitempty"`
	WarnColor           string `protobuf:"bytes,4,opt,name=warn_color,json=warnColor,proto3" json:"warn_color,omitempty"`
	BackgroundColor     string `protobuf:"bytes,5,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
	FontColor           string `protobuf:"bytes,6,opt,name=font_color,json=fontColor,proto3" json:"font_color,omitempty"`
	PrimaryColorDark    string `protobuf:"bytes,7,opt,name=primary_color_dark,json=primaryColorDark,proto3" json:"primary_color_dark,omitempty"`
	BackgroundColorDark string `protobuf:"bytes,8,opt,name=background_color_dark,json=backgroundColorDark,proto3" json:"background_color_dark,omitempty"`
	WarnColorDark       string `protobuf:"bytes,9,opt,name=warn_color_dark,json=warnColorDark,proto3" json:"warn_color_dark,omitempty"`
	FontColorDark       string `protobuf:"bytes,10,opt,name=font_color_dark,json=fontColorDark,proto3" json:"font_color_dark,omitempty"`
	DisableWatermark    bool   `protobuf:"varint,11,opt,name=disable_watermark,json=disableWatermark,proto3" json:"disable_watermark,omitempty"`
}

func (x *AddCustomLabelPolicyRequest) Reset() {
	*x = AddCustomLabelPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[338]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomLabelPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomLabelPolicyRequest) ProtoMessage() {}

func (x *AddCustomLabelPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[338]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomLabelPolicyRequest.ProtoReflect.Descriptor instead.
func (*AddCustomLabelPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{338}
}

func (x *AddCustomLabelPolicyRequest) GetPrimaryColor() string {
	if x != nil {
		return x.PrimaryColor
	}
	return ""
}

func (x *AddCustomLabelPolicyRequest) GetHideLoginNameSuffix() bool {
	if x != nil {
		return x.HideLoginNameSuffix
	}
	return false
}

func (x *AddCustomLabelPolicyRequest) GetWarnColor() string {
	if x != nil {
		return x.WarnColor
	}
	return ""
}

func (x *AddCustomLabelPolicyRequest) GetBackgroundColor() string {
	if x != nil {
		return x.BackgroundColor
	}
	return ""
}

func (x *AddCustomLabelPolicyRequest) GetFontColor() string {
	if x != nil {
		return x.FontColor
	}
	return ""
}

func (x *AddCustomLabelPolicyRequest) GetPrimaryColorDark() string {
	if x != nil {
		return x.PrimaryColorDark
	}
	return ""
}

func (x *AddCustomLabelPolicyRequest) GetBackgroundColorDark() string {
	if x != nil {
		return x.BackgroundColorDark
	}
	return ""
}

func (x *AddCustomLabelPolicyRequest) GetWarnColorDark() string {
	if x != nil {
		return x.WarnColorDark
	}
	return ""
}

func (x *AddCustomLabelPolicyRequest) GetFontColorDark() string {
	if x != nil {
		return x.FontColorDark
	}
	return ""
}

func (x *AddCustomLabelPolicyRequest) GetDisableWatermark() bool {
	if x != nil {
		return x.DisableWatermark
	}
	return false
}

type AddCustomLabelPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AddCustomLabelPolicyResponse) Reset() {
	*x = AddCustomLabelPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[339]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomLabelPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomLabelPolicyResponse) ProtoMessage() {}

func (x *AddCustomLabelPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[339]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomLabelPolicyResponse.ProtoReflect.Descriptor instead.
func (*AddCustomLabelPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{339}
}

func (x *AddCustomLabelPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateCustomLabelPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryColor        string `protobuf:"bytes,1,opt,name=primary_color,json=primaryColor,proto3" json:"primary_color,omitempty"`
	HideLoginNameSuffix bool   `protobuf:"varint,3,opt,name=hide_login_name_suffix,json=hideLoginNameSuffix,proto3" json:"hide_login_name_suffix,omitempty"`
	WarnColor           string `protobuf:"bytes,4,opt,name=warn_color,json=warnColor,proto3" json:"warn_color,omitempty"`
	BackgroundColor     string `protobuf:"bytes,5,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
	FontColor           string `protobuf:"bytes,6,opt,name=font_color,json=fontColor,proto3" json:"font_color,omitempty"`
	PrimaryColorDark    string `protobuf:"bytes,7,opt,name=primary_color_dark,json=primaryColorDark,proto3" json:"primary_color_dark,omitempty"`
	BackgroundColorDark string `protobuf:"bytes,8,opt,name=background_color_dark,json=backgroundColorDark,proto3" json:"background_color_dark,omitempty"`
	WarnColorDark       string `protobuf:"bytes,9,opt,name=warn_color_dark,json=warnColorDark,proto3" json:"warn_color_dark,omitempty"`
	FontColorDark       string `protobuf:"bytes,10,opt,name=font_color_dark,json=fontColorDark,proto3" json:"font_color_dark,omitempty"`
	DisableWatermark    bool   `protobuf:"varint,11,opt,name=disable_watermark,json=disableWatermark,proto3" json:"disable_watermark,omitempty"`
}

func (x *UpdateCustomLabelPolicyRequest) Reset() {
	*x = UpdateCustomLabelPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[340]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomLabelPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomLabelPolicyRequest) ProtoMessage() {}

func (x *UpdateCustomLabelPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[340]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomLabelPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomLabelPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{340}
}

func (x *UpdateCustomLabelPolicyRequest) GetPrimaryColor() string {
	if x != nil {
		return x.PrimaryColor
	}
	return ""
}

func (x *UpdateCustomLabelPolicyRequest) GetHideLoginNameSuffix() bool {
	if x != nil {
		return x.HideLoginNameSuffix
	}
	return false
}

func (x *UpdateCustomLabelPolicyRequest) GetWarnColor() string {
	if x != nil {
		return x.WarnColor
	}
	return ""
}

func (x *UpdateCustomLabelPolicyRequest) GetBackgroundColor() string {
	if x != nil {
		return x.BackgroundColor
	}
	return ""
}

func (x *UpdateCustomLabelPolicyRequest) GetFontColor() string {
	if x != nil {
		return x.FontColor
	}
	return ""
}

func (x *UpdateCustomLabelPolicyRequest) GetPrimaryColorDark() string {
	if x != nil {
		return x.PrimaryColorDark
	}
	return ""
}

func (x *UpdateCustomLabelPolicyRequest) GetBackgroundColorDark() string {
	if x != nil {
		return x.BackgroundColorDark
	}
	return ""
}

func (x *UpdateCustomLabelPolicyRequest) GetWarnColorDark() string {
	if x != nil {
		return x.WarnColorDark
	}
	return ""
}

func (x *UpdateCustomLabelPolicyRequest) GetFontColorDark() string {
	if x != nil {
		return x.FontColorDark
	}
	return ""
}

func (x *UpdateCustomLabelPolicyRequest) GetDisableWatermark() bool {
	if x != nil {
		return x.DisableWatermark
	}
	return false
}

type UpdateCustomLabelPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateCustomLabelPolicyResponse) Reset() {
	*x = UpdateCustomLabelPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[341]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomLabelPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomLabelPolicyResponse) ProtoMessage() {}

func (x *UpdateCustomLabelPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[341]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomLabelPolicyResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomLabelPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{341}
}

func (x *UpdateCustomLabelPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type ActivateCustomLabelPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActivateCustomLabelPolicyRequest) Reset() {
	*x = ActivateCustomLabelPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[342]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateCustomLabelPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateCustomLabelPolicyRequest) ProtoMessage() {}

func (x *ActivateCustomLabelPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[342]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateCustomLabelPolicyRequest.ProtoReflect.Descriptor instead.
func (*ActivateCustomLabelPolicyRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{342}
}

type ActivateCustomLabelPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ActivateCustomLabelPolicyResponse) Reset() {
	*x = ActivateCustomLabelPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[343]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateCustomLabelPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateCustomLabelPolicyResponse) ProtoMessage() {}

func (x *ActivateCustomLabelPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[343]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateCustomLabelPolicyResponse.ProtoReflect.Descriptor instead.
func (*ActivateCustomLabelPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{343}
}

func (x *ActivateCustomLabelPolicyResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type RemoveCustomLabelPolicyLogoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveCustomLabelPolicyLogoRequest) Reset() {
	*x = RemoveCustomLabelPolicyLogoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[344]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomLabelPolicyLogoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomLabelPolicyLogoRequest) ProtoMessage() {}

func (x *RemoveCustomLabelPolicyLogoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[344]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomLabelPolicyLogoRequest.ProtoReflect.Descriptor instead.
func (*RemoveCustomLabelPolicyLogoRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{344}
}

type RemoveCustomLabelPolicyLogoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveCustomLabelPolicyLogoResponse) Reset() {
	*x = RemoveCustomLabelPolicyLogoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[345]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomLabelPolicyLogoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomLabelPolicyLogoResponse) ProtoMessage() {}

func (x *RemoveCustomLabelPolicyLogoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[345]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomLabelPolicyLogoResponse.ProtoReflect.Descriptor instead.
func (*RemoveCustomLabelPolicyLogoResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{345}
}

func (x *RemoveCustomLabelPolicyLogoResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type RemoveCustomLabelPolicyLogoDarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveCustomLabelPolicyLogoDarkRequest) Reset() {
	*x = RemoveCustomLabelPolicyLogoDarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[346]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomLabelPolicyLogoDarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomLabelPolicyLogoDarkRequest) ProtoMessage() {}

func (x *RemoveCustomLabelPolicyLogoDarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[346]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomLabelPolicyLogoDarkRequest.ProtoReflect.Descriptor instead.
func (*RemoveCustomLabelPolicyLogoDarkRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{346}
}

type RemoveCustomLabelPolicyLogoDarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveCustomLabelPolicyLogoDarkResponse) Reset() {
	*x = RemoveCustomLabelPolicyLogoDarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[347]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomLabelPolicyLogoDarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomLabelPolicyLogoDarkResponse) ProtoMessage() {}

func (x *RemoveCustomLabelPolicyLogoDarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[347]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomLabelPolicyLogoDarkResponse.ProtoReflect.Descriptor instead.
func (*RemoveCustomLabelPolicyLogoDarkResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{347}
}

func (x *RemoveCustomLabelPolicyLogoDarkResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type RemoveCustomLabelPolicyIconRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveCustomLabelPolicyIconRequest) Reset() {
	*x = RemoveCustomLabelPolicyIconRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[348]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomLabelPolicyIconRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomLabelPolicyIconRequest) ProtoMessage() {}

func (x *RemoveCustomLabelPolicyIconRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[348]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomLabelPolicyIconRequest.ProtoReflect.Descriptor instead.
func (*RemoveCustomLabelPolicyIconRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{348}
}

type RemoveCustomLabelPolicyIconResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveCustomLabelPolicyIconResponse) Reset() {
	*x = RemoveCustomLabelPolicyIconResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[349]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomLabelPolicyIconResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomLabelPolicyIconResponse) ProtoMessage() {}

func (x *RemoveCustomLabelPolicyIconResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[349]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomLabelPolicyIconResponse.ProtoReflect.Descriptor instead.
func (*RemoveCustomLabelPolicyIconResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{349}
}

func (x *RemoveCustomLabelPolicyIconResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type RemoveCustomLabelPolicyIconDarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveCustomLabelPolicyIconDarkRequest) Reset() {
	*x = RemoveCustomLabelPolicyIconDarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[350]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomLabelPolicyIconDarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomLabelPolicyIconDarkRequest) ProtoMessage() {}

func (x *RemoveCustomLabelPolicyIconDarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[350]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomLabelPolicyIconDarkRequest.ProtoReflect.Descriptor instead.
func (*RemoveCustomLabelPolicyIconDarkRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{350}
}

type RemoveCustomLabelPolicyIconDarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveCustomLabelPolicyIconDarkResponse) Reset() {
	*x = RemoveCustomLabelPolicyIconDarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[351]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomLabelPolicyIconDarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomLabelPolicyIconDarkResponse) ProtoMessage() {}

func (x *RemoveCustomLabelPolicyIconDarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[351]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomLabelPolicyIconDarkResponse.ProtoReflect.Descriptor instead.
func (*RemoveCustomLabelPolicyIconDarkResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{351}
}

func (x *RemoveCustomLabelPolicyIconDarkResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type RemoveCustomLabelPolicyFontRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveCustomLabelPolicyFontRequest) Reset() {
	*x = RemoveCustomLabelPolicyFontRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[352]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomLabelPolicyFontRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomLabelPolicyFontRequest) ProtoMessage() {}

func (x *RemoveCustomLabelPolicyFontRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[352]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomLabelPolicyFontRequest.ProtoReflect.Descriptor instead.
func (*RemoveCustomLabelPolicyFontRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{352}
}

type RemoveCustomLabelPolicyFontResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RemoveCustomLabelPolicyFontResponse) Reset() {
	*x = RemoveCustomLabelPolicyFontResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[353]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomLabelPolicyFontResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomLabelPolicyFontResponse) ProtoMessage() {}

func (x *RemoveCustomLabelPolicyFontResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[353]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomLabelPolicyFontResponse.ProtoReflect.Descriptor instead.
func (*RemoveCustomLabelPolicyFontResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{353}
}

func (x *RemoveCustomLabelPolicyFontResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type ResetLabelPolicyToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetLabelPolicyToDefaultRequest) Reset() {
	*x = ResetLabelPolicyToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[354]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetLabelPolicyToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLabelPolicyToDefaultRequest) ProtoMessage() {}

func (x *ResetLabelPolicyToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[354]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLabelPolicyToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetLabelPolicyToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{354}
}

type ResetLabelPolicyToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetLabelPolicyToDefaultResponse) Reset() {
	*x = ResetLabelPolicyToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[355]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetLabelPolicyToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLabelPolicyToDefaultResponse) ProtoMessage() {}

func (x *ResetLabelPolicyToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[355]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLabelPolicyToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetLabelPolicyToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{355}
}

func (x *ResetLabelPolicyToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetCustomInitMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetCustomInitMessageTextRequest) Reset() {
	*x = GetCustomInitMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[356]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomInitMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomInitMessageTextRequest) ProtoMessage() {}

func (x *GetCustomInitMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[356]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomInitMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetCustomInitMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{356}
}

func (x *GetCustomInitMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetCustomInitMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetCustomInitMessageTextResponse) Reset() {
	*x = GetCustomInitMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[357]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomInitMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomInitMessageTextResponse) ProtoMessage() {}

func (x *GetCustomInitMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[357]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomInitMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetCustomInitMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{357}
}

func (x *GetCustomInitMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type GetDefaultInitMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetDefaultInitMessageTextRequest) Reset() {
	*x = GetDefaultInitMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[358]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultInitMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultInitMessageTextRequest) ProtoMessage() {}

func (x *GetDefaultInitMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[358]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultInitMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultInitMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{358}
}

func (x *GetDefaultInitMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetDefaultInitMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetDefaultInitMessageTextResponse) Reset() {
	*x = GetDefaultInitMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[359]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultInitMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultInitMessageTextResponse) ProtoMessage() {}

func (x *GetDefaultInitMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[359]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultInitMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultInitMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{359}
}

func (x *GetDefaultInitMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type SetCustomInitMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	PreHeader  string `protobuf:"bytes,3,opt,name=pre_header,json=preHeader,proto3" json:"pre_header,omitempty"`
	Subject    string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Greeting   string `protobuf:"bytes,5,opt,name=greeting,proto3" json:"greeting,omitempty"`
	Text       string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	ButtonText string `protobuf:"bytes,7,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	FooterText string `protobuf:"bytes,8,opt,name=footer_text,json=footerText,proto3" json:"footer_text,omitempty"`
}

func (x *SetCustomInitMessageTextRequest) Reset() {
	*x = SetCustomInitMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[360]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomInitMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomInitMessageTextRequest) ProtoMessage() {}

func (x *SetCustomInitMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[360]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomInitMessageTextRequest.ProtoReflect.Descriptor instead.
func (*SetCustomInitMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{360}
}

func (x *SetCustomInitMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SetCustomInitMessageTextRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SetCustomInitMessageTextRequest) GetPreHeader() string {
	if x != nil {
		return x.PreHeader
	}
	return ""
}

func (x *SetCustomInitMessageTextRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SetCustomInitMessageTextRequest) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *SetCustomInitMessageTextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SetCustomInitMessageTextRequest) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *SetCustomInitMessageTextRequest) GetFooterText() string {
	if x != nil {
		return x.FooterText
	}
	return ""
}

type SetCustomInitMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetCustomInitMessageTextResponse) Reset() {
	*x = SetCustomInitMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[361]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomInitMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomInitMessageTextResponse) ProtoMessage() {}

func (x *SetCustomInitMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[361]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomInitMessageTextResponse.ProtoReflect.Descriptor instead.
func (*SetCustomInitMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{361}
}

func (x *SetCustomInitMessageTextResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResetCustomInitMessageTextToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *ResetCustomInitMessageTextToDefaultRequest) Reset() {
	*x = ResetCustomInitMessageTextToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[362]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomInitMessageTextToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomInitMessageTextToDefaultRequest) ProtoMessage() {}

func (x *ResetCustomInitMessageTextToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[362]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomInitMessageTextToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetCustomInitMessageTextToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{362}
}

func (x *ResetCustomInitMessageTextToDefaultRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type ResetCustomInitMessageTextToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetCustomInitMessageTextToDefaultResponse) Reset() {
	*x = ResetCustomInitMessageTextToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[363]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomInitMessageTextToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomInitMessageTextToDefaultResponse) ProtoMessage() {}

func (x *ResetCustomInitMessageTextToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[363]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomInitMessageTextToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetCustomInitMessageTextToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{363}
}

func (x *ResetCustomInitMessageTextToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetDefaultLoginTextsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetDefaultLoginTextsRequest) Reset() {
	*x = GetDefaultLoginTextsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[364]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultLoginTextsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultLoginTextsRequest) ProtoMessage() {}

func (x *GetDefaultLoginTextsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[364]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultLoginTextsRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultLoginTextsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{364}
}

func (x *GetDefaultLoginTextsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetDefaultLoginTextsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.LoginCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetDefaultLoginTextsResponse) Reset() {
	*x = GetDefaultLoginTextsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[365]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultLoginTextsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultLoginTextsResponse) ProtoMessage() {}

func (x *GetDefaultLoginTextsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[365]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultLoginTextsResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultLoginTextsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{365}
}

func (x *GetDefaultLoginTextsResponse) GetCustomText() *text.LoginCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type GetCustomLoginTextsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetCustomLoginTextsRequest) Reset() {
	*x = GetCustomLoginTextsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[366]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomLoginTextsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomLoginTextsRequest) ProtoMessage() {}

func (x *GetCustomLoginTextsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[366]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomLoginTextsRequest.ProtoReflect.Descriptor instead.
func (*GetCustomLoginTextsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{366}
}

func (x *GetCustomLoginTextsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetCustomLoginTextsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.LoginCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetCustomLoginTextsResponse) Reset() {
	*x = GetCustomLoginTextsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[367]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomLoginTextsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomLoginTextsResponse) ProtoMessage() {}

func (x *GetCustomLoginTextsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[367]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomLoginTextsResponse.ProtoReflect.Descriptor instead.
func (*GetCustomLoginTextsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{367}
}

func (x *GetCustomLoginTextsResponse) GetCustomText() *text.LoginCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type SetCustomLoginTextsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language                             string                                           `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	SelectAccountText                    *text.SelectAccountScreenText                    `protobuf:"bytes,2,opt,name=select_account_text,json=selectAccountText,proto3" json:"select_account_text,omitempty"`
	LoginText                            *text.LoginScreenText                            `protobuf:"bytes,3,opt,name=login_text,json=loginText,proto3" json:"login_text,omitempty"`
	PasswordText                         *text.PasswordScreenText                         `protobuf:"bytes,4,opt,name=password_text,json=passwordText,proto3" json:"password_text,omitempty"`
	UsernameChangeText                   *text.UsernameChangeScreenText                   `protobuf:"bytes,5,opt,name=username_change_text,json=usernameChangeText,proto3" json:"username_change_text,omitempty"`
	UsernameChangeDoneText               *text.UsernameChangeDoneScreenText               `protobuf:"bytes,6,opt,name=username_change_done_text,json=usernameChangeDoneText,proto3" json:"username_change_done_text,omitempty"`
	InitPasswordText                     *text.InitPasswordScreenText                     `protobuf:"bytes,7,opt,name=init_password_text,json=initPasswordText,proto3" json:"init_password_text,omitempty"`
	InitPasswordDoneText                 *text.InitPasswordDoneScreenText                 `protobuf:"bytes,8,opt,name=init_password_done_text,json=initPasswordDoneText,proto3" json:"init_password_done_text,omitempty"`
	EmailVerificationText                *text.EmailVerificationScreenText                `protobuf:"bytes,9,opt,name=email_verification_text,json=emailVerificationText,proto3" json:"email_verification_text,omitempty"`
	EmailVerificationDoneText            *text.EmailVerificationDoneScreenText            `protobuf:"bytes,10,opt,name=email_verification_done_text,json=emailVerificationDoneText,proto3" json:"email_verification_done_text,omitempty"`
	InitializeUserText                   *text.InitializeUserScreenText                   `protobuf:"bytes,11,opt,name=initialize_user_text,json=initializeUserText,proto3" json:"initialize_user_text,omitempty"`
	InitializeDoneText                   *text.InitializeUserDoneScreenText               `protobuf:"bytes,12,opt,name=initialize_done_text,json=initializeDoneText,proto3" json:"initialize_done_text,omitempty"`
	InitMfaPromptText                    *text.InitMFAPromptScreenText                    `protobuf:"bytes,13,opt,name=init_mfa_prompt_text,json=initMfaPromptText,proto3" json:"init_mfa_prompt_text,omitempty"`
	InitMfaOtpText                       *text.InitMFAOTPScreenText                       `protobuf:"bytes,14,opt,name=init_mfa_otp_text,json=initMfaOtpText,proto3" json:"init_mfa_otp_text,omitempty"`
	InitMfaU2FText                       *text.InitMFAU2FScreenText                       `protobuf:"bytes,15,opt,name=init_mfa_u2f_text,json=initMfaU2fText,proto3" json:"init_mfa_u2f_text,omitempty"`
	InitMfaDoneText                      *text.InitMFADoneScreenText                      `protobuf:"bytes,16,opt,name=init_mfa_done_text,json=initMfaDoneText,proto3" json:"init_mfa_done_text,omitempty"`
	MfaProvidersText                     *text.MFAProvidersText                           `protobuf:"bytes,17,opt,name=mfa_providers_text,json=mfaProvidersText,proto3" json:"mfa_providers_text,omitempty"`
	VerifyMfaOtpText                     *text.VerifyMFAOTPScreenText                     `protobuf:"bytes,18,opt,name=verify_mfa_otp_text,json=verifyMfaOtpText,proto3" json:"verify_mfa_otp_text,omitempty"`
	VerifyMfaU2FText                     *text.VerifyMFAU2FScreenText                     `protobuf:"bytes,19,opt,name=verify_mfa_u2f_text,json=verifyMfaU2fText,proto3" json:"verify_mfa_u2f_text,omitempty"`
	PasswordlessText                     *text.PasswordlessScreenText                     `protobuf:"bytes,20,opt,name=passwordless_text,json=passwordlessText,proto3" json:"passwordless_text,omitempty"`
	PasswordChangeText                   *text.PasswordChangeScreenText                   `protobuf:"bytes,21,opt,name=password_change_text,json=passwordChangeText,proto3" json:"password_change_text,omitempty"`
	PasswordChangeDoneText               *text.PasswordChangeDoneScreenText               `protobuf:"bytes,22,opt,name=password_change_done_text,json=passwordChangeDoneText,proto3" json:"password_change_done_text,omitempty"`
	PasswordResetDoneText                *text.PasswordResetDoneScreenText                `protobuf:"bytes,23,opt,name=password_reset_done_text,json=passwordResetDoneText,proto3" json:"password_reset_done_text,omitempty"`
	RegistrationOptionText               *text.RegistrationOptionScreenText               `protobuf:"bytes,24,opt,name=registration_option_text,json=registrationOptionText,proto3" json:"registration_option_text,omitempty"`
	RegistrationUserText                 *text.RegistrationUserScreenText                 `protobuf:"bytes,25,opt,name=registration_user_text,json=registrationUserText,proto3" json:"registration_user_text,omitempty"`
	RegistrationOrgText                  *text.RegistrationOrgScreenText                  `protobuf:"bytes,26,opt,name=registration_org_text,json=registrationOrgText,proto3" json:"registration_org_text,omitempty"`
	LinkingUserDoneText                  *text.LinkingUserDoneScreenText                  `protobuf:"bytes,27,opt,name=linking_user_done_text,json=linkingUserDoneText,proto3" json:"linking_user_done_text,omitempty"`
	ExternalUserNotFoundText             *text.ExternalUserNotFoundScreenText             `protobuf:"bytes,28,opt,name=external_user_not_found_text,json=externalUserNotFoundText,proto3" json:"external_user_not_found_text,omitempty"`
	SuccessLoginText                     *text.SuccessLoginScreenText                     `protobuf:"bytes,29,opt,name=success_login_text,json=successLoginText,proto3" json:"success_login_text,omitempty"`
	LogoutText                           *text.LogoutDoneScreenText                       `protobuf:"bytes,30,opt,name=logout_text,json=logoutText,proto3" json:"logout_text,omitempty"`
	FooterText                           *text.FooterText                                 `protobuf:"bytes,31,opt,name=footer_text,json=footerText,proto3" json:"footer_text,omitempty"`
	PasswordlessPromptText               *text.PasswordlessPromptScreenText               `protobuf:"bytes,32,opt,name=passwordless_prompt_text,json=passwordlessPromptText,proto3" json:"passwordless_prompt_text,omitempty"`
	PasswordlessRegistrationText         *text.PasswordlessRegistrationScreenText         `protobuf:"bytes,33,opt,name=passwordless_registration_text,json=passwordlessRegistrationText,proto3" json:"passwordless_registration_text,omitempty"`
	PasswordlessRegistrationDoneText     *text.PasswordlessRegistrationDoneScreenText     `protobuf:"bytes,34,opt,name=passwordless_registration_done_text,json=passwordlessRegistrationDoneText,proto3" json:"passwordless_registration_done_text,omitempty"`
	ExternalRegistrationUserOverviewText *text.ExternalRegistrationUserOverviewScreenText `protobuf:"bytes,35,opt,name=external_registration_user_overview_text,json=externalRegistrationUserOverviewText,proto3" json:"external_registration_user_overview_text,omitempty"`
}

func (x *SetCustomLoginTextsRequest) Reset() {
	*x = SetCustomLoginTextsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[368]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomLoginTextsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomLoginTextsRequest) ProtoMessage() {}

func (x *SetCustomLoginTextsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[368]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomLoginTextsRequest.ProtoReflect.Descriptor instead.
func (*SetCustomLoginTextsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{368}
}

func (x *SetCustomLoginTextsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SetCustomLoginTextsRequest) GetSelectAccountText() *text.SelectAccountScreenText {
	if x != nil {
		return x.SelectAccountText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetLoginText() *text.LoginScreenText {
	if x != nil {
		return x.LoginText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetPasswordText() *text.PasswordScreenText {
	if x != nil {
		return x.PasswordText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetUsernameChangeText() *text.UsernameChangeScreenText {
	if x != nil {
		return x.UsernameChangeText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetUsernameChangeDoneText() *text.UsernameChangeDoneScreenText {
	if x != nil {
		return x.UsernameChangeDoneText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetInitPasswordText() *text.InitPasswordScreenText {
	if x != nil {
		return x.InitPasswordText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetInitPasswordDoneText() *text.InitPasswordDoneScreenText {
	if x != nil {
		return x.InitPasswordDoneText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetEmailVerificationText() *text.EmailVerificationScreenText {
	if x != nil {
		return x.EmailVerificationText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetEmailVerificationDoneText() *text.EmailVerificationDoneScreenText {
	if x != nil {
		return x.EmailVerificationDoneText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetInitializeUserText() *text.InitializeUserScreenText {
	if x != nil {
		return x.InitializeUserText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetInitializeDoneText() *text.InitializeUserDoneScreenText {
	if x != nil {
		return x.InitializeDoneText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetInitMfaPromptText() *text.InitMFAPromptScreenText {
	if x != nil {
		return x.InitMfaPromptText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetInitMfaOtpText() *text.InitMFAOTPScreenText {
	if x != nil {
		return x.InitMfaOtpText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetInitMfaU2FText() *text.InitMFAU2FScreenText {
	if x != nil {
		return x.InitMfaU2FText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetInitMfaDoneText() *text.InitMFADoneScreenText {
	if x != nil {
		return x.InitMfaDoneText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetMfaProvidersText() *text.MFAProvidersText {
	if x != nil {
		return x.MfaProvidersText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetVerifyMfaOtpText() *text.VerifyMFAOTPScreenText {
	if x != nil {
		return x.VerifyMfaOtpText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetVerifyMfaU2FText() *text.VerifyMFAU2FScreenText {
	if x != nil {
		return x.VerifyMfaU2FText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetPasswordlessText() *text.PasswordlessScreenText {
	if x != nil {
		return x.PasswordlessText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetPasswordChangeText() *text.PasswordChangeScreenText {
	if x != nil {
		return x.PasswordChangeText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetPasswordChangeDoneText() *text.PasswordChangeDoneScreenText {
	if x != nil {
		return x.PasswordChangeDoneText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetPasswordResetDoneText() *text.PasswordResetDoneScreenText {
	if x != nil {
		return x.PasswordResetDoneText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetRegistrationOptionText() *text.RegistrationOptionScreenText {
	if x != nil {
		return x.RegistrationOptionText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetRegistrationUserText() *text.RegistrationUserScreenText {
	if x != nil {
		return x.RegistrationUserText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetRegistrationOrgText() *text.RegistrationOrgScreenText {
	if x != nil {
		return x.RegistrationOrgText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetLinkingUserDoneText() *text.LinkingUserDoneScreenText {
	if x != nil {
		return x.LinkingUserDoneText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetExternalUserNotFoundText() *text.ExternalUserNotFoundScreenText {
	if x != nil {
		return x.ExternalUserNotFoundText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetSuccessLoginText() *text.SuccessLoginScreenText {
	if x != nil {
		return x.SuccessLoginText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetLogoutText() *text.LogoutDoneScreenText {
	if x != nil {
		return x.LogoutText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetFooterText() *text.FooterText {
	if x != nil {
		return x.FooterText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetPasswordlessPromptText() *text.PasswordlessPromptScreenText {
	if x != nil {
		return x.PasswordlessPromptText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetPasswordlessRegistrationText() *text.PasswordlessRegistrationScreenText {
	if x != nil {
		return x.PasswordlessRegistrationText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetPasswordlessRegistrationDoneText() *text.PasswordlessRegistrationDoneScreenText {
	if x != nil {
		return x.PasswordlessRegistrationDoneText
	}
	return nil
}

func (x *SetCustomLoginTextsRequest) GetExternalRegistrationUserOverviewText() *text.ExternalRegistrationUserOverviewScreenText {
	if x != nil {
		return x.ExternalRegistrationUserOverviewText
	}
	return nil
}

type SetCustomLoginTextsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetCustomLoginTextsResponse) Reset() {
	*x = SetCustomLoginTextsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[369]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomLoginTextsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomLoginTextsResponse) ProtoMessage() {}

func (x *SetCustomLoginTextsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[369]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomLoginTextsResponse.ProtoReflect.Descriptor instead.
func (*SetCustomLoginTextsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{369}
}

func (x *SetCustomLoginTextsResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResetCustomLoginTextsToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *ResetCustomLoginTextsToDefaultRequest) Reset() {
	*x = ResetCustomLoginTextsToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[370]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomLoginTextsToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomLoginTextsToDefaultRequest) ProtoMessage() {}

func (x *ResetCustomLoginTextsToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[370]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomLoginTextsToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetCustomLoginTextsToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{370}
}

func (x *ResetCustomLoginTextsToDefaultRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type ResetCustomLoginTextsToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetCustomLoginTextsToDefaultResponse) Reset() {
	*x = ResetCustomLoginTextsToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[371]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomLoginTextsToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomLoginTextsToDefaultResponse) ProtoMessage() {}

func (x *ResetCustomLoginTextsToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[371]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomLoginTextsToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetCustomLoginTextsToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{371}
}

func (x *ResetCustomLoginTextsToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetCustomPasswordResetMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetCustomPasswordResetMessageTextRequest) Reset() {
	*x = GetCustomPasswordResetMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[372]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomPasswordResetMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomPasswordResetMessageTextRequest) ProtoMessage() {}

func (x *GetCustomPasswordResetMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[372]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomPasswordResetMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetCustomPasswordResetMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{372}
}

func (x *GetCustomPasswordResetMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetCustomPasswordResetMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetCustomPasswordResetMessageTextResponse) Reset() {
	*x = GetCustomPasswordResetMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[373]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomPasswordResetMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomPasswordResetMessageTextResponse) ProtoMessage() {}

func (x *GetCustomPasswordResetMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[373]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomPasswordResetMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetCustomPasswordResetMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{373}
}

func (x *GetCustomPasswordResetMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type GetDefaultPasswordResetMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetDefaultPasswordResetMessageTextRequest) Reset() {
	*x = GetDefaultPasswordResetMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[374]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultPasswordResetMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultPasswordResetMessageTextRequest) ProtoMessage() {}

func (x *GetDefaultPasswordResetMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[374]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultPasswordResetMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultPasswordResetMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{374}
}

func (x *GetDefaultPasswordResetMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetDefaultPasswordResetMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetDefaultPasswordResetMessageTextResponse) Reset() {
	*x = GetDefaultPasswordResetMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[375]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultPasswordResetMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultPasswordResetMessageTextResponse) ProtoMessage() {}

func (x *GetDefaultPasswordResetMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[375]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultPasswordResetMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultPasswordResetMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{375}
}

func (x *GetDefaultPasswordResetMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type SetCustomPasswordResetMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	PreHeader  string `protobuf:"bytes,3,opt,name=pre_header,json=preHeader,proto3" json:"pre_header,omitempty"`
	Subject    string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Greeting   string `protobuf:"bytes,5,opt,name=greeting,proto3" json:"greeting,omitempty"`
	Text       string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	ButtonText string `protobuf:"bytes,7,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	FooterText string `protobuf:"bytes,8,opt,name=footer_text,json=footerText,proto3" json:"footer_text,omitempty"`
}

func (x *SetCustomPasswordResetMessageTextRequest) Reset() {
	*x = SetCustomPasswordResetMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[376]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomPasswordResetMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomPasswordResetMessageTextRequest) ProtoMessage() {}

func (x *SetCustomPasswordResetMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[376]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomPasswordResetMessageTextRequest.ProtoReflect.Descriptor instead.
func (*SetCustomPasswordResetMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{376}
}

func (x *SetCustomPasswordResetMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SetCustomPasswordResetMessageTextRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SetCustomPasswordResetMessageTextRequest) GetPreHeader() string {
	if x != nil {
		return x.PreHeader
	}
	return ""
}

func (x *SetCustomPasswordResetMessageTextRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SetCustomPasswordResetMessageTextRequest) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *SetCustomPasswordResetMessageTextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SetCustomPasswordResetMessageTextRequest) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *SetCustomPasswordResetMessageTextRequest) GetFooterText() string {
	if x != nil {
		return x.FooterText
	}
	return ""
}

type SetCustomPasswordResetMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetCustomPasswordResetMessageTextResponse) Reset() {
	*x = SetCustomPasswordResetMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[377]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomPasswordResetMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomPasswordResetMessageTextResponse) ProtoMessage() {}

func (x *SetCustomPasswordResetMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[377]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomPasswordResetMessageTextResponse.ProtoReflect.Descriptor instead.
func (*SetCustomPasswordResetMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{377}
}

func (x *SetCustomPasswordResetMessageTextResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResetCustomPasswordResetMessageTextToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *ResetCustomPasswordResetMessageTextToDefaultRequest) Reset() {
	*x = ResetCustomPasswordResetMessageTextToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[378]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomPasswordResetMessageTextToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomPasswordResetMessageTextToDefaultRequest) ProtoMessage() {}

func (x *ResetCustomPasswordResetMessageTextToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[378]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomPasswordResetMessageTextToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetCustomPasswordResetMessageTextToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{378}
}

func (x *ResetCustomPasswordResetMessageTextToDefaultRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type ResetCustomPasswordResetMessageTextToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetCustomPasswordResetMessageTextToDefaultResponse) Reset() {
	*x = ResetCustomPasswordResetMessageTextToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[379]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomPasswordResetMessageTextToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomPasswordResetMessageTextToDefaultResponse) ProtoMessage() {}

func (x *ResetCustomPasswordResetMessageTextToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[379]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomPasswordResetMessageTextToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetCustomPasswordResetMessageTextToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{379}
}

func (x *ResetCustomPasswordResetMessageTextToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetCustomVerifyEmailMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetCustomVerifyEmailMessageTextRequest) Reset() {
	*x = GetCustomVerifyEmailMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[380]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomVerifyEmailMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomVerifyEmailMessageTextRequest) ProtoMessage() {}

func (x *GetCustomVerifyEmailMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[380]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomVerifyEmailMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetCustomVerifyEmailMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{380}
}

func (x *GetCustomVerifyEmailMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetCustomVerifyEmailMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetCustomVerifyEmailMessageTextResponse) Reset() {
	*x = GetCustomVerifyEmailMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[381]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomVerifyEmailMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomVerifyEmailMessageTextResponse) ProtoMessage() {}

func (x *GetCustomVerifyEmailMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[381]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomVerifyEmailMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetCustomVerifyEmailMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{381}
}

func (x *GetCustomVerifyEmailMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type GetDefaultVerifyEmailMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetDefaultVerifyEmailMessageTextRequest) Reset() {
	*x = GetDefaultVerifyEmailMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[382]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultVerifyEmailMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultVerifyEmailMessageTextRequest) ProtoMessage() {}

func (x *GetDefaultVerifyEmailMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[382]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultVerifyEmailMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultVerifyEmailMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{382}
}

func (x *GetDefaultVerifyEmailMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetDefaultVerifyEmailMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetDefaultVerifyEmailMessageTextResponse) Reset() {
	*x = GetDefaultVerifyEmailMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[383]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultVerifyEmailMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultVerifyEmailMessageTextResponse) ProtoMessage() {}

func (x *GetDefaultVerifyEmailMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[383]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultVerifyEmailMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultVerifyEmailMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{383}
}

func (x *GetDefaultVerifyEmailMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type SetCustomVerifyEmailMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	PreHeader  string `protobuf:"bytes,3,opt,name=pre_header,json=preHeader,proto3" json:"pre_header,omitempty"`
	Subject    string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Greeting   string `protobuf:"bytes,5,opt,name=greeting,proto3" json:"greeting,omitempty"`
	Text       string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	ButtonText string `protobuf:"bytes,7,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	FooterText string `protobuf:"bytes,8,opt,name=footer_text,json=footerText,proto3" json:"footer_text,omitempty"`
}

func (x *SetCustomVerifyEmailMessageTextRequest) Reset() {
	*x = SetCustomVerifyEmailMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[384]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomVerifyEmailMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomVerifyEmailMessageTextRequest) ProtoMessage() {}

func (x *SetCustomVerifyEmailMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[384]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomVerifyEmailMessageTextRequest.ProtoReflect.Descriptor instead.
func (*SetCustomVerifyEmailMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{384}
}

func (x *SetCustomVerifyEmailMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SetCustomVerifyEmailMessageTextRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SetCustomVerifyEmailMessageTextRequest) GetPreHeader() string {
	if x != nil {
		return x.PreHeader
	}
	return ""
}

func (x *SetCustomVerifyEmailMessageTextRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SetCustomVerifyEmailMessageTextRequest) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *SetCustomVerifyEmailMessageTextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SetCustomVerifyEmailMessageTextRequest) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *SetCustomVerifyEmailMessageTextRequest) GetFooterText() string {
	if x != nil {
		return x.FooterText
	}
	return ""
}

type SetCustomVerifyEmailMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetCustomVerifyEmailMessageTextResponse) Reset() {
	*x = SetCustomVerifyEmailMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[385]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomVerifyEmailMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomVerifyEmailMessageTextResponse) ProtoMessage() {}

func (x *SetCustomVerifyEmailMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[385]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomVerifyEmailMessageTextResponse.ProtoReflect.Descriptor instead.
func (*SetCustomVerifyEmailMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{385}
}

func (x *SetCustomVerifyEmailMessageTextResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResetCustomVerifyEmailMessageTextToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *ResetCustomVerifyEmailMessageTextToDefaultRequest) Reset() {
	*x = ResetCustomVerifyEmailMessageTextToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[386]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomVerifyEmailMessageTextToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomVerifyEmailMessageTextToDefaultRequest) ProtoMessage() {}

func (x *ResetCustomVerifyEmailMessageTextToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[386]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomVerifyEmailMessageTextToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetCustomVerifyEmailMessageTextToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{386}
}

func (x *ResetCustomVerifyEmailMessageTextToDefaultRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type ResetCustomVerifyEmailMessageTextToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetCustomVerifyEmailMessageTextToDefaultResponse) Reset() {
	*x = ResetCustomVerifyEmailMessageTextToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[387]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomVerifyEmailMessageTextToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomVerifyEmailMessageTextToDefaultResponse) ProtoMessage() {}

func (x *ResetCustomVerifyEmailMessageTextToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[387]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomVerifyEmailMessageTextToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetCustomVerifyEmailMessageTextToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{387}
}

func (x *ResetCustomVerifyEmailMessageTextToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetCustomVerifyPhoneMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetCustomVerifyPhoneMessageTextRequest) Reset() {
	*x = GetCustomVerifyPhoneMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[388]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomVerifyPhoneMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomVerifyPhoneMessageTextRequest) ProtoMessage() {}

func (x *GetCustomVerifyPhoneMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[388]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomVerifyPhoneMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetCustomVerifyPhoneMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{388}
}

func (x *GetCustomVerifyPhoneMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetCustomVerifyPhoneMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetCustomVerifyPhoneMessageTextResponse) Reset() {
	*x = GetCustomVerifyPhoneMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[389]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomVerifyPhoneMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomVerifyPhoneMessageTextResponse) ProtoMessage() {}

func (x *GetCustomVerifyPhoneMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[389]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomVerifyPhoneMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetCustomVerifyPhoneMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{389}
}

func (x *GetCustomVerifyPhoneMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type GetDefaultVerifyPhoneMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetDefaultVerifyPhoneMessageTextRequest) Reset() {
	*x = GetDefaultVerifyPhoneMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[390]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultVerifyPhoneMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultVerifyPhoneMessageTextRequest) ProtoMessage() {}

func (x *GetDefaultVerifyPhoneMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[390]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultVerifyPhoneMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultVerifyPhoneMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{390}
}

func (x *GetDefaultVerifyPhoneMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetDefaultVerifyPhoneMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetDefaultVerifyPhoneMessageTextResponse) Reset() {
	*x = GetDefaultVerifyPhoneMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[391]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultVerifyPhoneMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultVerifyPhoneMessageTextResponse) ProtoMessage() {}

func (x *GetDefaultVerifyPhoneMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[391]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultVerifyPhoneMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultVerifyPhoneMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{391}
}

func (x *GetDefaultVerifyPhoneMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type SetCustomVerifyPhoneMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	PreHeader  string `protobuf:"bytes,3,opt,name=pre_header,json=preHeader,proto3" json:"pre_header,omitempty"`
	Subject    string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Greeting   string `protobuf:"bytes,5,opt,name=greeting,proto3" json:"greeting,omitempty"`
	Text       string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	ButtonText string `protobuf:"bytes,7,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	FooterText string `protobuf:"bytes,8,opt,name=footer_text,json=footerText,proto3" json:"footer_text,omitempty"`
}

func (x *SetCustomVerifyPhoneMessageTextRequest) Reset() {
	*x = SetCustomVerifyPhoneMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[392]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomVerifyPhoneMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomVerifyPhoneMessageTextRequest) ProtoMessage() {}

func (x *SetCustomVerifyPhoneMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[392]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomVerifyPhoneMessageTextRequest.ProtoReflect.Descriptor instead.
func (*SetCustomVerifyPhoneMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{392}
}

func (x *SetCustomVerifyPhoneMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SetCustomVerifyPhoneMessageTextRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SetCustomVerifyPhoneMessageTextRequest) GetPreHeader() string {
	if x != nil {
		return x.PreHeader
	}
	return ""
}

func (x *SetCustomVerifyPhoneMessageTextRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SetCustomVerifyPhoneMessageTextRequest) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *SetCustomVerifyPhoneMessageTextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SetCustomVerifyPhoneMessageTextRequest) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *SetCustomVerifyPhoneMessageTextRequest) GetFooterText() string {
	if x != nil {
		return x.FooterText
	}
	return ""
}

type SetCustomVerifyPhoneMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetCustomVerifyPhoneMessageTextResponse) Reset() {
	*x = SetCustomVerifyPhoneMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[393]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomVerifyPhoneMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomVerifyPhoneMessageTextResponse) ProtoMessage() {}

func (x *SetCustomVerifyPhoneMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[393]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomVerifyPhoneMessageTextResponse.ProtoReflect.Descriptor instead.
func (*SetCustomVerifyPhoneMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{393}
}

func (x *SetCustomVerifyPhoneMessageTextResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResetCustomVerifyPhoneMessageTextToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *ResetCustomVerifyPhoneMessageTextToDefaultRequest) Reset() {
	*x = ResetCustomVerifyPhoneMessageTextToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[394]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomVerifyPhoneMessageTextToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomVerifyPhoneMessageTextToDefaultRequest) ProtoMessage() {}

func (x *ResetCustomVerifyPhoneMessageTextToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[394]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomVerifyPhoneMessageTextToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetCustomVerifyPhoneMessageTextToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{394}
}

func (x *ResetCustomVerifyPhoneMessageTextToDefaultRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type ResetCustomVerifyPhoneMessageTextToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetCustomVerifyPhoneMessageTextToDefaultResponse) Reset() {
	*x = ResetCustomVerifyPhoneMessageTextToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[395]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomVerifyPhoneMessageTextToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomVerifyPhoneMessageTextToDefaultResponse) ProtoMessage() {}

func (x *ResetCustomVerifyPhoneMessageTextToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[395]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomVerifyPhoneMessageTextToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetCustomVerifyPhoneMessageTextToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{395}
}

func (x *ResetCustomVerifyPhoneMessageTextToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetCustomDomainClaimedMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetCustomDomainClaimedMessageTextRequest) Reset() {
	*x = GetCustomDomainClaimedMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[396]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomDomainClaimedMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomDomainClaimedMessageTextRequest) ProtoMessage() {}

func (x *GetCustomDomainClaimedMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[396]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomDomainClaimedMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetCustomDomainClaimedMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{396}
}

func (x *GetCustomDomainClaimedMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetCustomDomainClaimedMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetCustomDomainClaimedMessageTextResponse) Reset() {
	*x = GetCustomDomainClaimedMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[397]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomDomainClaimedMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomDomainClaimedMessageTextResponse) ProtoMessage() {}

func (x *GetCustomDomainClaimedMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[397]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomDomainClaimedMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetCustomDomainClaimedMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{397}
}

func (x *GetCustomDomainClaimedMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type GetDefaultDomainClaimedMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetDefaultDomainClaimedMessageTextRequest) Reset() {
	*x = GetDefaultDomainClaimedMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[398]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultDomainClaimedMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultDomainClaimedMessageTextRequest) ProtoMessage() {}

func (x *GetDefaultDomainClaimedMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[398]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultDomainClaimedMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultDomainClaimedMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{398}
}

func (x *GetDefaultDomainClaimedMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetDefaultDomainClaimedMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetDefaultDomainClaimedMessageTextResponse) Reset() {
	*x = GetDefaultDomainClaimedMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[399]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultDomainClaimedMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultDomainClaimedMessageTextResponse) ProtoMessage() {}

func (x *GetDefaultDomainClaimedMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[399]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultDomainClaimedMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultDomainClaimedMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{399}
}

func (x *GetDefaultDomainClaimedMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type SetCustomDomainClaimedMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	PreHeader  string `protobuf:"bytes,3,opt,name=pre_header,json=preHeader,proto3" json:"pre_header,omitempty"`
	Subject    string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Greeting   string `protobuf:"bytes,5,opt,name=greeting,proto3" json:"greeting,omitempty"`
	Text       string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	ButtonText string `protobuf:"bytes,7,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	FooterText string `protobuf:"bytes,8,opt,name=footer_text,json=footerText,proto3" json:"footer_text,omitempty"`
}

func (x *SetCustomDomainClaimedMessageTextRequest) Reset() {
	*x = SetCustomDomainClaimedMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[400]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomDomainClaimedMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomDomainClaimedMessageTextRequest) ProtoMessage() {}

func (x *SetCustomDomainClaimedMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[400]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomDomainClaimedMessageTextRequest.ProtoReflect.Descriptor instead.
func (*SetCustomDomainClaimedMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{400}
}

func (x *SetCustomDomainClaimedMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SetCustomDomainClaimedMessageTextRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SetCustomDomainClaimedMessageTextRequest) GetPreHeader() string {
	if x != nil {
		return x.PreHeader
	}
	return ""
}

func (x *SetCustomDomainClaimedMessageTextRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SetCustomDomainClaimedMessageTextRequest) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *SetCustomDomainClaimedMessageTextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SetCustomDomainClaimedMessageTextRequest) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *SetCustomDomainClaimedMessageTextRequest) GetFooterText() string {
	if x != nil {
		return x.FooterText
	}
	return ""
}

type SetCustomDomainClaimedMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetCustomDomainClaimedMessageTextResponse) Reset() {
	*x = SetCustomDomainClaimedMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[401]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomDomainClaimedMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomDomainClaimedMessageTextResponse) ProtoMessage() {}

func (x *SetCustomDomainClaimedMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[401]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomDomainClaimedMessageTextResponse.ProtoReflect.Descriptor instead.
func (*SetCustomDomainClaimedMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{401}
}

func (x *SetCustomDomainClaimedMessageTextResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

//This is an empty request
type ResetCustomDomainClaimedMessageTextToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *ResetCustomDomainClaimedMessageTextToDefaultRequest) Reset() {
	*x = ResetCustomDomainClaimedMessageTextToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[402]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomDomainClaimedMessageTextToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomDomainClaimedMessageTextToDefaultRequest) ProtoMessage() {}

func (x *ResetCustomDomainClaimedMessageTextToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[402]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomDomainClaimedMessageTextToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetCustomDomainClaimedMessageTextToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{402}
}

func (x *ResetCustomDomainClaimedMessageTextToDefaultRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type ResetCustomDomainClaimedMessageTextToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetCustomDomainClaimedMessageTextToDefaultResponse) Reset() {
	*x = ResetCustomDomainClaimedMessageTextToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[403]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomDomainClaimedMessageTextToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomDomainClaimedMessageTextToDefaultResponse) ProtoMessage() {}

func (x *ResetCustomDomainClaimedMessageTextToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[403]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomDomainClaimedMessageTextToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetCustomDomainClaimedMessageTextToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{403}
}

func (x *ResetCustomDomainClaimedMessageTextToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetCustomPasswordlessRegistrationMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetCustomPasswordlessRegistrationMessageTextRequest) Reset() {
	*x = GetCustomPasswordlessRegistrationMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[404]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomPasswordlessRegistrationMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomPasswordlessRegistrationMessageTextRequest) ProtoMessage() {}

func (x *GetCustomPasswordlessRegistrationMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[404]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomPasswordlessRegistrationMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetCustomPasswordlessRegistrationMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{404}
}

func (x *GetCustomPasswordlessRegistrationMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetCustomPasswordlessRegistrationMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetCustomPasswordlessRegistrationMessageTextResponse) Reset() {
	*x = GetCustomPasswordlessRegistrationMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[405]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomPasswordlessRegistrationMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomPasswordlessRegistrationMessageTextResponse) ProtoMessage() {}

func (x *GetCustomPasswordlessRegistrationMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[405]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomPasswordlessRegistrationMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetCustomPasswordlessRegistrationMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{405}
}

func (x *GetCustomPasswordlessRegistrationMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type GetDefaultPasswordlessRegistrationMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetDefaultPasswordlessRegistrationMessageTextRequest) Reset() {
	*x = GetDefaultPasswordlessRegistrationMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[406]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultPasswordlessRegistrationMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultPasswordlessRegistrationMessageTextRequest) ProtoMessage() {}

func (x *GetDefaultPasswordlessRegistrationMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[406]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultPasswordlessRegistrationMessageTextRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultPasswordlessRegistrationMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{406}
}

func (x *GetDefaultPasswordlessRegistrationMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetDefaultPasswordlessRegistrationMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomText *text.MessageCustomText `protobuf:"bytes,1,opt,name=custom_text,json=customText,proto3" json:"custom_text,omitempty"`
}

func (x *GetDefaultPasswordlessRegistrationMessageTextResponse) Reset() {
	*x = GetDefaultPasswordlessRegistrationMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[407]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultPasswordlessRegistrationMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultPasswordlessRegistrationMessageTextResponse) ProtoMessage() {}

func (x *GetDefaultPasswordlessRegistrationMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[407]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultPasswordlessRegistrationMessageTextResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultPasswordlessRegistrationMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{407}
}

func (x *GetDefaultPasswordlessRegistrationMessageTextResponse) GetCustomText() *text.MessageCustomText {
	if x != nil {
		return x.CustomText
	}
	return nil
}

type SetCustomPasswordlessRegistrationMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	PreHeader  string `protobuf:"bytes,3,opt,name=pre_header,json=preHeader,proto3" json:"pre_header,omitempty"`
	Subject    string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Greeting   string `protobuf:"bytes,5,opt,name=greeting,proto3" json:"greeting,omitempty"`
	Text       string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	ButtonText string `protobuf:"bytes,7,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	FooterText string `protobuf:"bytes,8,opt,name=footer_text,json=footerText,proto3" json:"footer_text,omitempty"`
}

func (x *SetCustomPasswordlessRegistrationMessageTextRequest) Reset() {
	*x = SetCustomPasswordlessRegistrationMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[408]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomPasswordlessRegistrationMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomPasswordlessRegistrationMessageTextRequest) ProtoMessage() {}

func (x *SetCustomPasswordlessRegistrationMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[408]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomPasswordlessRegistrationMessageTextRequest.ProtoReflect.Descriptor instead.
func (*SetCustomPasswordlessRegistrationMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{408}
}

func (x *SetCustomPasswordlessRegistrationMessageTextRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SetCustomPasswordlessRegistrationMessageTextRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SetCustomPasswordlessRegistrationMessageTextRequest) GetPreHeader() string {
	if x != nil {
		return x.PreHeader
	}
	return ""
}

func (x *SetCustomPasswordlessRegistrationMessageTextRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SetCustomPasswordlessRegistrationMessageTextRequest) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *SetCustomPasswordlessRegistrationMessageTextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SetCustomPasswordlessRegistrationMessageTextRequest) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *SetCustomPasswordlessRegistrationMessageTextRequest) GetFooterText() string {
	if x != nil {
		return x.FooterText
	}
	return ""
}

type SetCustomPasswordlessRegistrationMessageTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetCustomPasswordlessRegistrationMessageTextResponse) Reset() {
	*x = SetCustomPasswordlessRegistrationMessageTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[409]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCustomPasswordlessRegistrationMessageTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCustomPasswordlessRegistrationMessageTextResponse) ProtoMessage() {}

func (x *SetCustomPasswordlessRegistrationMessageTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[409]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCustomPasswordlessRegistrationMessageTextResponse.ProtoReflect.Descriptor instead.
func (*SetCustomPasswordlessRegistrationMessageTextResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{409}
}

func (x *SetCustomPasswordlessRegistrationMessageTextResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest) Reset() {
	*x = ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[410]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest) ProtoMessage() {}

func (x *ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[410]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest.ProtoReflect.Descriptor instead.
func (*ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{410}
}

func (x *ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse) Reset() {
	*x = ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[411]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse) ProtoMessage() {}

func (x *ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[411]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse.ProtoReflect.Descriptor instead.
func (*ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{411}
}

func (x *ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetOrgIDPByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOrgIDPByIDRequest) Reset() {
	*x = GetOrgIDPByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[412]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgIDPByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgIDPByIDRequest) ProtoMessage() {}

func (x *GetOrgIDPByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[412]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgIDPByIDRequest.ProtoReflect.Descriptor instead.
func (*GetOrgIDPByIDRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{412}
}

func (x *GetOrgIDPByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetOrgIDPByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idp *idp.IDP `protobuf:"bytes,1,opt,name=idp,proto3" json:"idp,omitempty"`
}

func (x *GetOrgIDPByIDResponse) Reset() {
	*x = GetOrgIDPByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[413]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgIDPByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgIDPByIDResponse) ProtoMessage() {}

func (x *GetOrgIDPByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[413]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgIDPByIDResponse.ProtoReflect.Descriptor instead.
func (*GetOrgIDPByIDResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{413}
}

func (x *GetOrgIDPByIDResponse) GetIdp() *idp.IDP {
	if x != nil {
		return x.Idp
	}
	return nil
}

type ListOrgIDPsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	//the field the result is sorted
	SortingColumn idp.IDPFieldName `protobuf:"varint,2,opt,name=sorting_column,json=sortingColumn,proto3,enum=zitadel.idp.v1.IDPFieldName" json:"sorting_column,omitempty"`
	//criterias the client is looking for
	Queries []*IDPQuery `protobuf:"bytes,3,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListOrgIDPsRequest) Reset() {
	*x = ListOrgIDPsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[414]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgIDPsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgIDPsRequest) ProtoMessage() {}

func (x *ListOrgIDPsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[414]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgIDPsRequest.ProtoReflect.Descriptor instead.
func (*ListOrgIDPsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{414}
}

func (x *ListOrgIDPsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListOrgIDPsRequest) GetSortingColumn() idp.IDPFieldName {
	if x != nil {
		return x.SortingColumn
	}
	return idp.IDPFieldName(0)
}

func (x *ListOrgIDPsRequest) GetQueries() []*IDPQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type IDPQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//	*IDPQuery_IdpIdQuery
	//	*IDPQuery_IdpNameQuery
	//	*IDPQuery_OwnerTypeQuery
	Query isIDPQuery_Query `protobuf_oneof:"query"`
}

func (x *IDPQuery) Reset() {
	*x = IDPQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[415]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDPQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDPQuery) ProtoMessage() {}

func (x *IDPQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[415]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDPQuery.ProtoReflect.Descriptor instead.
func (*IDPQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{415}
}

func (m *IDPQuery) GetQuery() isIDPQuery_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *IDPQuery) GetIdpIdQuery() *idp.IDPIDQuery {
	if x, ok := x.GetQuery().(*IDPQuery_IdpIdQuery); ok {
		return x.IdpIdQuery
	}
	return nil
}

func (x *IDPQuery) GetIdpNameQuery() *idp.IDPNameQuery {
	if x, ok := x.GetQuery().(*IDPQuery_IdpNameQuery); ok {
		return x.IdpNameQuery
	}
	return nil
}

func (x *IDPQuery) GetOwnerTypeQuery() *idp.IDPOwnerTypeQuery {
	if x, ok := x.GetQuery().(*IDPQuery_OwnerTypeQuery); ok {
		return x.OwnerTypeQuery
	}
	return nil
}

type isIDPQuery_Query interface {
	isIDPQuery_Query()
}

type IDPQuery_IdpIdQuery struct {
	IdpIdQuery *idp.IDPIDQuery `protobuf:"bytes,1,opt,name=idp_id_query,json=idpIdQuery,proto3,oneof"`
}

type IDPQuery_IdpNameQuery struct {
	IdpNameQuery *idp.IDPNameQuery `protobuf:"bytes,2,opt,name=idp_name_query,json=idpNameQuery,proto3,oneof"`
}

type IDPQuery_OwnerTypeQuery struct {
	OwnerTypeQuery *idp.IDPOwnerTypeQuery `protobuf:"bytes,3,opt,name=owner_type_query,json=ownerTypeQuery,proto3,oneof"`
}

func (*IDPQuery_IdpIdQuery) isIDPQuery_Query() {}

func (*IDPQuery_IdpNameQuery) isIDPQuery_Query() {}

func (*IDPQuery_OwnerTypeQuery) isIDPQuery_Query() {}

type ListOrgIDPsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details       *object.ListDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	SortingColumn idp.IDPFieldName    `protobuf:"varint,2,opt,name=sorting_column,json=sortingColumn,proto3,enum=zitadel.idp.v1.IDPFieldName" json:"sorting_column,omitempty"`
	Result        []*idp.IDP          `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListOrgIDPsResponse) Reset() {
	*x = ListOrgIDPsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[416]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgIDPsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgIDPsResponse) ProtoMessage() {}

func (x *ListOrgIDPsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[416]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgIDPsResponse.ProtoReflect.Descriptor instead.
func (*ListOrgIDPsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{416}
}

func (x *ListOrgIDPsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListOrgIDPsResponse) GetSortingColumn() idp.IDPFieldName {
	if x != nil {
		return x.SortingColumn
	}
	return idp.IDPFieldName(0)
}

func (x *ListOrgIDPsResponse) GetResult() []*idp.IDP {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddOrgOIDCIDPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StylingType        idp.IDPStylingType   `protobuf:"varint,2,opt,name=styling_type,json=stylingType,proto3,enum=zitadel.idp.v1.IDPStylingType" json:"styling_type,omitempty"`
	ClientId           string               `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret       string               `protobuf:"bytes,4,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	Issuer             string               `protobuf:"bytes,5,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Scopes             []string             `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
	DisplayNameMapping idp.OIDCMappingField `protobuf:"varint,7,opt,name=display_name_mapping,json=displayNameMapping,proto3,enum=zitadel.idp.v1.OIDCMappingField" json:"display_name_mapping,omitempty"`
	UsernameMapping    idp.OIDCMappingField `protobuf:"varint,8,opt,name=username_mapping,json=usernameMapping,proto3,enum=zitadel.idp.v1.OIDCMappingField" json:"username_mapping,omitempty"`
	AutoRegister       bool                 `protobuf:"varint,9,opt,name=auto_register,json=autoRegister,proto3" json:"auto_register,omitempty"`
}

func (x *AddOrgOIDCIDPRequest) Reset() {
	*x = AddOrgOIDCIDPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[417]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrgOIDCIDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgOIDCIDPRequest) ProtoMessage() {}

func (x *AddOrgOIDCIDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[417]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgOIDCIDPRequest.ProtoReflect.Descriptor instead.
func (*AddOrgOIDCIDPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{417}
}

func (x *AddOrgOIDCIDPRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddOrgOIDCIDPRequest) GetStylingType() idp.IDPStylingType {
	if x != nil {
		return x.StylingType
	}
	return idp.IDPStylingType(0)
}

func (x *AddOrgOIDCIDPRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AddOrgOIDCIDPRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *AddOrgOIDCIDPRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *AddOrgOIDCIDPRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *AddOrgOIDCIDPRequest) GetDisplayNameMapping() idp.OIDCMappingField {
	if x != nil {
		return x.DisplayNameMapping
	}
	return idp.OIDCMappingField(0)
}

func (x *AddOrgOIDCIDPRequest) GetUsernameMapping() idp.OIDCMappingField {
	if x != nil {
		return x.UsernameMapping
	}
	return idp.OIDCMappingField(0)
}

func (x *AddOrgOIDCIDPRequest) GetAutoRegister() bool {
	if x != nil {
		return x.AutoRegister
	}
	return false
}

type AddOrgOIDCIDPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	IdpId   string                `protobuf:"bytes,2,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
}

func (x *AddOrgOIDCIDPResponse) Reset() {
	*x = AddOrgOIDCIDPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[418]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrgOIDCIDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgOIDCIDPResponse) ProtoMessage() {}

func (x *AddOrgOIDCIDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[418]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgOIDCIDPResponse.ProtoReflect.Descriptor instead.
func (*AddOrgOIDCIDPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{418}
}

func (x *AddOrgOIDCIDPResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AddOrgOIDCIDPResponse) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

type AddOrgJWTIDPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StylingType  idp.IDPStylingType `protobuf:"varint,2,opt,name=styling_type,json=stylingType,proto3,enum=zitadel.idp.v1.IDPStylingType" json:"styling_type,omitempty"`
	JwtEndpoint  string             `protobuf:"bytes,3,opt,name=jwt_endpoint,json=jwtEndpoint,proto3" json:"jwt_endpoint,omitempty"`
	Issuer       string             `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
	KeysEndpoint string             `protobuf:"bytes,5,opt,name=keys_endpoint,json=keysEndpoint,proto3" json:"keys_endpoint,omitempty"`
	HeaderName   string             `protobuf:"bytes,6,opt,name=header_name,json=headerName,proto3" json:"header_name,omitempty"`
	AutoRegister bool               `protobuf:"varint,7,opt,name=auto_register,json=autoRegister,proto3" json:"auto_register,omitempty"`
}

func (x *AddOrgJWTIDPRequest) Reset() {
	*x = AddOrgJWTIDPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[419]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrgJWTIDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgJWTIDPRequest) ProtoMessage() {}

func (x *AddOrgJWTIDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[419]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgJWTIDPRequest.ProtoReflect.Descriptor instead.
func (*AddOrgJWTIDPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{419}
}

func (x *AddOrgJWTIDPRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddOrgJWTIDPRequest) GetStylingType() idp.IDPStylingType {
	if x != nil {
		return x.StylingType
	}
	return idp.IDPStylingType(0)
}

func (x *AddOrgJWTIDPRequest) GetJwtEndpoint() string {
	if x != nil {
		return x.JwtEndpoint
	}
	return ""
}

func (x *AddOrgJWTIDPRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *AddOrgJWTIDPRequest) GetKeysEndpoint() string {
	if x != nil {
		return x.KeysEndpoint
	}
	return ""
}

func (x *AddOrgJWTIDPRequest) GetHeaderName() string {
	if x != nil {
		return x.HeaderName
	}
	return ""
}

func (x *AddOrgJWTIDPRequest) GetAutoRegister() bool {
	if x != nil {
		return x.AutoRegister
	}
	return false
}

type AddOrgJWTIDPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	IdpId   string                `protobuf:"bytes,2,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
}

func (x *AddOrgJWTIDPResponse) Reset() {
	*x = AddOrgJWTIDPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[420]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrgJWTIDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgJWTIDPResponse) ProtoMessage() {}

func (x *AddOrgJWTIDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[420]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgJWTIDPResponse.ProtoReflect.Descriptor instead.
func (*AddOrgJWTIDPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{420}
}

func (x *AddOrgJWTIDPResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AddOrgJWTIDPResponse) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

type DeactivateOrgIDPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdpId string `protobuf:"bytes,1,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
}

func (x *DeactivateOrgIDPRequest) Reset() {
	*x = DeactivateOrgIDPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[421]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateOrgIDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateOrgIDPRequest) ProtoMessage() {}

func (x *DeactivateOrgIDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[421]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateOrgIDPRequest.ProtoReflect.Descriptor instead.
func (*DeactivateOrgIDPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{421}
}

func (x *DeactivateOrgIDPRequest) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

type DeactivateOrgIDPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DeactivateOrgIDPResponse) Reset() {
	*x = DeactivateOrgIDPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[422]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateOrgIDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateOrgIDPResponse) ProtoMessage() {}

func (x *DeactivateOrgIDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[422]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateOrgIDPResponse.ProtoReflect.Descriptor instead.
func (*DeactivateOrgIDPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{422}
}

func (x *DeactivateOrgIDPResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ReactivateOrgIDPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdpId string `protobuf:"bytes,1,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
}

func (x *ReactivateOrgIDPRequest) Reset() {
	*x = ReactivateOrgIDPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[423]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateOrgIDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateOrgIDPRequest) ProtoMessage() {}

func (x *ReactivateOrgIDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[423]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateOrgIDPRequest.ProtoReflect.Descriptor instead.
func (*ReactivateOrgIDPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{423}
}

func (x *ReactivateOrgIDPRequest) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

type ReactivateOrgIDPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ReactivateOrgIDPResponse) Reset() {
	*x = ReactivateOrgIDPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[424]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateOrgIDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateOrgIDPResponse) ProtoMessage() {}

func (x *ReactivateOrgIDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[424]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateOrgIDPResponse.ProtoReflect.Descriptor instead.
func (*ReactivateOrgIDPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{424}
}

func (x *ReactivateOrgIDPResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type RemoveOrgIDPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdpId string `protobuf:"bytes,1,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
}

func (x *RemoveOrgIDPRequest) Reset() {
	*x = RemoveOrgIDPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[425]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrgIDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrgIDPRequest) ProtoMessage() {}

func (x *RemoveOrgIDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[425]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrgIDPRequest.ProtoReflect.Descriptor instead.
func (*RemoveOrgIDPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{425}
}

func (x *RemoveOrgIDPRequest) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

//This is an empty response
type RemoveOrgIDPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveOrgIDPResponse) Reset() {
	*x = RemoveOrgIDPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[426]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrgIDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrgIDPResponse) ProtoMessage() {}

func (x *RemoveOrgIDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[426]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrgIDPResponse.ProtoReflect.Descriptor instead.
func (*RemoveOrgIDPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{426}
}

type UpdateOrgIDPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdpId        string             `protobuf:"bytes,1,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
	Name         string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StylingType  idp.IDPStylingType `protobuf:"varint,3,opt,name=styling_type,json=stylingType,proto3,enum=zitadel.idp.v1.IDPStylingType" json:"styling_type,omitempty"`
	AutoRegister bool               `protobuf:"varint,4,opt,name=auto_register,json=autoRegister,proto3" json:"auto_register,omitempty"`
}

func (x *UpdateOrgIDPRequest) Reset() {
	*x = UpdateOrgIDPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[427]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgIDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgIDPRequest) ProtoMessage() {}

func (x *UpdateOrgIDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[427]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgIDPRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrgIDPRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{427}
}

func (x *UpdateOrgIDPRequest) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

func (x *UpdateOrgIDPRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateOrgIDPRequest) GetStylingType() idp.IDPStylingType {
	if x != nil {
		return x.StylingType
	}
	return idp.IDPStylingType(0)
}

func (x *UpdateOrgIDPRequest) GetAutoRegister() bool {
	if x != nil {
		return x.AutoRegister
	}
	return false
}

type UpdateOrgIDPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateOrgIDPResponse) Reset() {
	*x = UpdateOrgIDPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[428]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgIDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgIDPResponse) ProtoMessage() {}

func (x *UpdateOrgIDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[428]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgIDPResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrgIDPResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{428}
}

func (x *UpdateOrgIDPResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateOrgIDPOIDCConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdpId              string               `protobuf:"bytes,1,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
	ClientId           string               `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret       string               `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	Issuer             string               `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Scopes             []string             `protobuf:"bytes,5,rep,name=scopes,proto3" json:"scopes,omitempty"`
	DisplayNameMapping idp.OIDCMappingField `protobuf:"varint,6,opt,name=display_name_mapping,json=displayNameMapping,proto3,enum=zitadel.idp.v1.OIDCMappingField" json:"display_name_mapping,omitempty"`
	UsernameMapping    idp.OIDCMappingField `protobuf:"varint,7,opt,name=username_mapping,json=usernameMapping,proto3,enum=zitadel.idp.v1.OIDCMappingField" json:"username_mapping,omitempty"`
}

func (x *UpdateOrgIDPOIDCConfigRequest) Reset() {
	*x = UpdateOrgIDPOIDCConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[429]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgIDPOIDCConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgIDPOIDCConfigRequest) ProtoMessage() {}

func (x *UpdateOrgIDPOIDCConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[429]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgIDPOIDCConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrgIDPOIDCConfigRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{429}
}

func (x *UpdateOrgIDPOIDCConfigRequest) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

func (x *UpdateOrgIDPOIDCConfigRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UpdateOrgIDPOIDCConfigRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *UpdateOrgIDPOIDCConfigRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *UpdateOrgIDPOIDCConfigRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *UpdateOrgIDPOIDCConfigRequest) GetDisplayNameMapping() idp.OIDCMappingField {
	if x != nil {
		return x.DisplayNameMapping
	}
	return idp.OIDCMappingField(0)
}

func (x *UpdateOrgIDPOIDCConfigRequest) GetUsernameMapping() idp.OIDCMappingField {
	if x != nil {
		return x.UsernameMapping
	}
	return idp.OIDCMappingField(0)
}

type UpdateOrgIDPOIDCConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateOrgIDPOIDCConfigResponse) Reset() {
	*x = UpdateOrgIDPOIDCConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[430]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgIDPOIDCConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgIDPOIDCConfigResponse) ProtoMessage() {}

func (x *UpdateOrgIDPOIDCConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[430]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgIDPOIDCConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrgIDPOIDCConfigResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{430}
}

func (x *UpdateOrgIDPOIDCConfigResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateOrgIDPJWTConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdpId        string `protobuf:"bytes,1,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
	JwtEndpoint  string `protobuf:"bytes,2,opt,name=jwt_endpoint,json=jwtEndpoint,proto3" json:"jwt_endpoint,omitempty"`
	Issuer       string `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	KeysEndpoint string `protobuf:"bytes,4,opt,name=keys_endpoint,json=keysEndpoint,proto3" json:"keys_endpoint,omitempty"`
	HeaderName   string `protobuf:"bytes,5,opt,name=header_name,json=headerName,proto3" json:"header_name,omitempty"`
}

func (x *UpdateOrgIDPJWTConfigRequest) Reset() {
	*x = UpdateOrgIDPJWTConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[431]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgIDPJWTConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgIDPJWTConfigRequest) ProtoMessage() {}

func (x *UpdateOrgIDPJWTConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[431]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgIDPJWTConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrgIDPJWTConfigRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{431}
}

func (x *UpdateOrgIDPJWTConfigRequest) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

func (x *UpdateOrgIDPJWTConfigRequest) GetJwtEndpoint() string {
	if x != nil {
		return x.JwtEndpoint
	}
	return ""
}

func (x *UpdateOrgIDPJWTConfigRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *UpdateOrgIDPJWTConfigRequest) GetKeysEndpoint() string {
	if x != nil {
		return x.KeysEndpoint
	}
	return ""
}

func (x *UpdateOrgIDPJWTConfigRequest) GetHeaderName() string {
	if x != nil {
		return x.HeaderName
	}
	return ""
}

type UpdateOrgIDPJWTConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateOrgIDPJWTConfigResponse) Reset() {
	*x = UpdateOrgIDPJWTConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[432]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgIDPJWTConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgIDPJWTConfigResponse) ProtoMessage() {}

func (x *UpdateOrgIDPJWTConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[432]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgIDPJWTConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrgIDPJWTConfigResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{432}
}

func (x *UpdateOrgIDPJWTConfigResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListActionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//list limitations and ordering
	Query *object.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	//the field the result is sorted
	SortingColumn action.ActionFieldName `protobuf:"varint,2,opt,name=sorting_column,json=sortingColumn,proto3,enum=zitadel.action.v1.ActionFieldName" json:"sorting_column,omitempty"`
	//criteria the client is looking for
	Queries []*ActionQuery `protobuf:"bytes,3,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *ListActionsRequest) Reset() {
	*x = ListActionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[433]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActionsRequest) ProtoMessage() {}

func (x *ListActionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[433]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActionsRequest.ProtoReflect.Descriptor instead.
func (*ListActionsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{433}
}

func (x *ListActionsRequest) GetQuery() *object.ListQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListActionsRequest) GetSortingColumn() action.ActionFieldName {
	if x != nil {
		return x.SortingColumn
	}
	return action.ActionFieldName(0)
}

func (x *ListActionsRequest) GetQueries() []*ActionQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ActionQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//	*ActionQuery_ActionIdQuery
	//	*ActionQuery_ActionNameQuery
	//	*ActionQuery_ActionStateQuery
	Query isActionQuery_Query `protobuf_oneof:"query"`
}

func (x *ActionQuery) Reset() {
	*x = ActionQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[434]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionQuery) ProtoMessage() {}

func (x *ActionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[434]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionQuery.ProtoReflect.Descriptor instead.
func (*ActionQuery) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{434}
}

func (m *ActionQuery) GetQuery() isActionQuery_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ActionQuery) GetActionIdQuery() *action.ActionIDQuery {
	if x, ok := x.GetQuery().(*ActionQuery_ActionIdQuery); ok {
		return x.ActionIdQuery
	}
	return nil
}

func (x *ActionQuery) GetActionNameQuery() *action.ActionNameQuery {
	if x, ok := x.GetQuery().(*ActionQuery_ActionNameQuery); ok {
		return x.ActionNameQuery
	}
	return nil
}

func (x *ActionQuery) GetActionStateQuery() *action.ActionStateQuery {
	if x, ok := x.GetQuery().(*ActionQuery_ActionStateQuery); ok {
		return x.ActionStateQuery
	}
	return nil
}

type isActionQuery_Query interface {
	isActionQuery_Query()
}

type ActionQuery_ActionIdQuery struct {
	ActionIdQuery *action.ActionIDQuery `protobuf:"bytes,1,opt,name=action_id_query,json=actionIdQuery,proto3,oneof"`
}

type ActionQuery_ActionNameQuery struct {
	ActionNameQuery *action.ActionNameQuery `protobuf:"bytes,2,opt,name=action_name_query,json=actionNameQuery,proto3,oneof"`
}

type ActionQuery_ActionStateQuery struct {
	ActionStateQuery *action.ActionStateQuery `protobuf:"bytes,3,opt,name=action_state_query,json=actionStateQuery,proto3,oneof"`
}

func (*ActionQuery_ActionIdQuery) isActionQuery_Query() {}

func (*ActionQuery_ActionNameQuery) isActionQuery_Query() {}

func (*ActionQuery_ActionStateQuery) isActionQuery_Query() {}

type ListActionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details       *object.ListDetails    `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	SortingColumn action.ActionFieldName `protobuf:"varint,2,opt,name=sorting_column,json=sortingColumn,proto3,enum=zitadel.action.v1.ActionFieldName" json:"sorting_column,omitempty"`
	Result        []*action.Action       `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListActionsResponse) Reset() {
	*x = ListActionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[435]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActionsResponse) ProtoMessage() {}

func (x *ListActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[435]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActionsResponse.ProtoReflect.Descriptor instead.
func (*ListActionsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{435}
}

func (x *ListActionsResponse) GetDetails() *object.ListDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListActionsResponse) GetSortingColumn() action.ActionFieldName {
	if x != nil {
		return x.SortingColumn
	}
	return action.ActionFieldName(0)
}

func (x *ListActionsResponse) GetResult() []*action.Action {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Script        string               `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	Timeout       *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	AllowedToFail bool                 `protobuf:"varint,4,opt,name=allowed_to_fail,json=allowedToFail,proto3" json:"allowed_to_fail,omitempty"`
}

func (x *CreateActionRequest) Reset() {
	*x = CreateActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[436]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActionRequest) ProtoMessage() {}

func (x *CreateActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[436]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActionRequest.ProtoReflect.Descriptor instead.
func (*CreateActionRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{436}
}

func (x *CreateActionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateActionRequest) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *CreateActionRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *CreateActionRequest) GetAllowedToFail() bool {
	if x != nil {
		return x.AllowedToFail
	}
	return false
}

type CreateActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Id      string                `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateActionResponse) Reset() {
	*x = CreateActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[437]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActionResponse) ProtoMessage() {}

func (x *CreateActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[437]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActionResponse.ProtoReflect.Descriptor instead.
func (*CreateActionResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{437}
}

func (x *CreateActionResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *CreateActionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetActionRequest) Reset() {
	*x = GetActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[438]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionRequest) ProtoMessage() {}

func (x *GetActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[438]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionRequest.ProtoReflect.Descriptor instead.
func (*GetActionRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{438}
}

func (x *GetActionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *action.Action `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *GetActionResponse) Reset() {
	*x = GetActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[439]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionResponse) ProtoMessage() {}

func (x *GetActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[439]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionResponse.ProtoReflect.Descriptor instead.
func (*GetActionResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{439}
}

func (x *GetActionResponse) GetAction() *action.Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type UpdateActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Script        string               `protobuf:"bytes,3,opt,name=script,proto3" json:"script,omitempty"`
	Timeout       *durationpb.Duration `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	AllowedToFail bool                 `protobuf:"varint,5,opt,name=allowed_to_fail,json=allowedToFail,proto3" json:"allowed_to_fail,omitempty"`
}

func (x *UpdateActionRequest) Reset() {
	*x = UpdateActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[440]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActionRequest) ProtoMessage() {}

func (x *UpdateActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[440]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActionRequest.ProtoReflect.Descriptor instead.
func (*UpdateActionRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{440}
}

func (x *UpdateActionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateActionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateActionRequest) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *UpdateActionRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *UpdateActionRequest) GetAllowedToFail() bool {
	if x != nil {
		return x.AllowedToFail
	}
	return false
}

type UpdateActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateActionResponse) Reset() {
	*x = UpdateActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[441]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActionResponse) ProtoMessage() {}

func (x *UpdateActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[441]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActionResponse.ProtoReflect.Descriptor instead.
func (*UpdateActionResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{441}
}

func (x *UpdateActionResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type DeleteActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteActionRequest) Reset() {
	*x = DeleteActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[442]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActionRequest) ProtoMessage() {}

func (x *DeleteActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[442]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActionRequest.ProtoReflect.Descriptor instead.
func (*DeleteActionRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{442}
}

func (x *DeleteActionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteActionResponse) Reset() {
	*x = DeleteActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[443]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActionResponse) ProtoMessage() {}

func (x *DeleteActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[443]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActionResponse.ProtoReflect.Descriptor instead.
func (*DeleteActionResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{443}
}

type DeactivateActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeactivateActionRequest) Reset() {
	*x = DeactivateActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[444]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateActionRequest) ProtoMessage() {}

func (x *DeactivateActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[444]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateActionRequest.ProtoReflect.Descriptor instead.
func (*DeactivateActionRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{444}
}

func (x *DeactivateActionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeactivateActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DeactivateActionResponse) Reset() {
	*x = DeactivateActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[445]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateActionResponse) ProtoMessage() {}

func (x *DeactivateActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[445]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateActionResponse.ProtoReflect.Descriptor instead.
func (*DeactivateActionResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{445}
}

func (x *DeactivateActionResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ReactivateActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReactivateActionRequest) Reset() {
	*x = ReactivateActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[446]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateActionRequest) ProtoMessage() {}

func (x *ReactivateActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[446]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateActionRequest.ProtoReflect.Descriptor instead.
func (*ReactivateActionRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{446}
}

func (x *ReactivateActionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReactivateActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ReactivateActionResponse) Reset() {
	*x = ReactivateActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[447]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivateActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivateActionResponse) ProtoMessage() {}

func (x *ReactivateActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[447]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivateActionResponse.ProtoReflect.Descriptor instead.
func (*ReactivateActionResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{447}
}

func (x *ReactivateActionResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type action.FlowType `protobuf:"varint,1,opt,name=type,proto3,enum=zitadel.action.v1.FlowType" json:"type,omitempty"`
}

func (x *GetFlowRequest) Reset() {
	*x = GetFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[448]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlowRequest) ProtoMessage() {}

func (x *GetFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[448]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlowRequest.ProtoReflect.Descriptor instead.
func (*GetFlowRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{448}
}

func (x *GetFlowRequest) GetType() action.FlowType {
	if x != nil {
		return x.Type
	}
	return action.FlowType(0)
}

type GetFlowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flow *action.Flow `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
}

func (x *GetFlowResponse) Reset() {
	*x = GetFlowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[449]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlowResponse) ProtoMessage() {}

func (x *GetFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[449]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlowResponse.ProtoReflect.Descriptor instead.
func (*GetFlowResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{449}
}

func (x *GetFlowResponse) GetFlow() *action.Flow {
	if x != nil {
		return x.Flow
	}
	return nil
}

type ClearFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type action.FlowType `protobuf:"varint,1,opt,name=type,proto3,enum=zitadel.action.v1.FlowType" json:"type,omitempty"`
}

func (x *ClearFlowRequest) Reset() {
	*x = ClearFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[450]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearFlowRequest) ProtoMessage() {}

func (x *ClearFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[450]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearFlowRequest.ProtoReflect.Descriptor instead.
func (*ClearFlowRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{450}
}

func (x *ClearFlowRequest) GetType() action.FlowType {
	if x != nil {
		return x.Type
	}
	return action.FlowType(0)
}

type ClearFlowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ClearFlowResponse) Reset() {
	*x = ClearFlowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[451]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearFlowResponse) ProtoMessage() {}

func (x *ClearFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[451]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearFlowResponse.ProtoReflect.Descriptor instead.
func (*ClearFlowResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{451}
}

func (x *ClearFlowResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type SetTriggerActionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowType    action.FlowType    `protobuf:"varint,1,opt,name=flow_type,json=flowType,proto3,enum=zitadel.action.v1.FlowType" json:"flow_type,omitempty"`
	TriggerType action.TriggerType `protobuf:"varint,2,opt,name=trigger_type,json=triggerType,proto3,enum=zitadel.action.v1.TriggerType" json:"trigger_type,omitempty"`
	ActionIds   []string           `protobuf:"bytes,3,rep,name=action_ids,json=actionIds,proto3" json:"action_ids,omitempty"`
}

func (x *SetTriggerActionsRequest) Reset() {
	*x = SetTriggerActionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[452]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTriggerActionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTriggerActionsRequest) ProtoMessage() {}

func (x *SetTriggerActionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[452]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTriggerActionsRequest.ProtoReflect.Descriptor instead.
func (*SetTriggerActionsRequest) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{452}
}

func (x *SetTriggerActionsRequest) GetFlowType() action.FlowType {
	if x != nil {
		return x.FlowType
	}
	return action.FlowType(0)
}

func (x *SetTriggerActionsRequest) GetTriggerType() action.TriggerType {
	if x != nil {
		return x.TriggerType
	}
	return action.TriggerType(0)
}

func (x *SetTriggerActionsRequest) GetActionIds() []string {
	if x != nil {
		return x.ActionIds
	}
	return nil
}

type SetTriggerActionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *object.ObjectDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetTriggerActionsResponse) Reset() {
	*x = SetTriggerActionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[453]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTriggerActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTriggerActionsResponse) ProtoMessage() {}

func (x *SetTriggerActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[453]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTriggerActionsResponse.ProtoReflect.Descriptor instead.
func (*SetTriggerActionsResponse) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{453}
}

func (x *SetTriggerActionsResponse) GetDetails() *object.ObjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type AddHumanUserRequest_Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName         string      `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName          string      `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	NickName          string      `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	DisplayName       string      `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	PreferredLanguage string      `protobuf:"bytes,5,opt,name=preferred_language,json=preferredLanguage,proto3" json:"preferred_language,omitempty"`
	Gender            user.Gender `protobuf:"varint,6,opt,name=gender,proto3,enum=zitadel.user.v1.Gender" json:"gender,omitempty"`
}

func (x *AddHumanUserRequest_Profile) Reset() {
	*x = AddHumanUserRequest_Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[454]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHumanUserRequest_Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHumanUserRequest_Profile) ProtoMessage() {}

func (x *AddHumanUserRequest_Profile) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[454]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHumanUserRequest_Profile.ProtoReflect.Descriptor instead.
func (*AddHumanUserRequest_Profile) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{18, 0}
}

func (x *AddHumanUserRequest_Profile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AddHumanUserRequest_Profile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AddHumanUserRequest_Profile) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AddHumanUserRequest_Profile) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *AddHumanUserRequest_Profile) GetPreferredLanguage() string {
	if x != nil {
		return x.PreferredLanguage
	}
	return ""
}

func (x *AddHumanUserRequest_Profile) GetGender() user.Gender {
	if x != nil {
		return x.Gender
	}
	return user.Gender(0)
}

type AddHumanUserRequest_Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email           string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"` //TODO: check if no value is allowed
	IsEmailVerified bool   `protobuf:"varint,2,opt,name=is_email_verified,json=isEmailVerified,proto3" json:"is_email_verified,omitempty"`
}

func (x *AddHumanUserRequest_Email) Reset() {
	*x = AddHumanUserRequest_Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[455]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHumanUserRequest_Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHumanUserRequest_Email) ProtoMessage() {}

func (x *AddHumanUserRequest_Email) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[455]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHumanUserRequest_Email.ProtoReflect.Descriptor instead.
func (*AddHumanUserRequest_Email) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{18, 1}
}

func (x *AddHumanUserRequest_Email) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddHumanUserRequest_Email) GetIsEmailVerified() bool {
	if x != nil {
		return x.IsEmailVerified
	}
	return false
}

type AddHumanUserRequest_Phone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// has to be a global number
	Phone           string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	IsPhoneVerified bool   `protobuf:"varint,2,opt,name=is_phone_verified,json=isPhoneVerified,proto3" json:"is_phone_verified,omitempty"`
}

func (x *AddHumanUserRequest_Phone) Reset() {
	*x = AddHumanUserRequest_Phone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[456]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHumanUserRequest_Phone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHumanUserRequest_Phone) ProtoMessage() {}

func (x *AddHumanUserRequest_Phone) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[456]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHumanUserRequest_Phone.ProtoReflect.Descriptor instead.
func (*AddHumanUserRequest_Phone) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{18, 2}
}

func (x *AddHumanUserRequest_Phone) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AddHumanUserRequest_Phone) GetIsPhoneVerified() bool {
	if x != nil {
		return x.IsPhoneVerified
	}
	return false
}

type ImportHumanUserRequest_Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName         string      `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName          string      `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	NickName          string      `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	DisplayName       string      `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	PreferredLanguage string      `protobuf:"bytes,5,opt,name=preferred_language,json=preferredLanguage,proto3" json:"preferred_language,omitempty"`
	Gender            user.Gender `protobuf:"varint,6,opt,name=gender,proto3,enum=zitadel.user.v1.Gender" json:"gender,omitempty"`
}

func (x *ImportHumanUserRequest_Profile) Reset() {
	*x = ImportHumanUserRequest_Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[457]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportHumanUserRequest_Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportHumanUserRequest_Profile) ProtoMessage() {}

func (x *ImportHumanUserRequest_Profile) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[457]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportHumanUserRequest_Profile.ProtoReflect.Descriptor instead.
func (*ImportHumanUserRequest_Profile) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{20, 0}
}

func (x *ImportHumanUserRequest_Profile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ImportHumanUserRequest_Profile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ImportHumanUserRequest_Profile) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ImportHumanUserRequest_Profile) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ImportHumanUserRequest_Profile) GetPreferredLanguage() string {
	if x != nil {
		return x.PreferredLanguage
	}
	return ""
}

func (x *ImportHumanUserRequest_Profile) GetGender() user.Gender {
	if x != nil {
		return x.Gender
	}
	return user.Gender(0)
}

type ImportHumanUserRequest_Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email           string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"` //TODO: check if no value is allowed
	IsEmailVerified bool   `protobuf:"varint,2,opt,name=is_email_verified,json=isEmailVerified,proto3" json:"is_email_verified,omitempty"`
}

func (x *ImportHumanUserRequest_Email) Reset() {
	*x = ImportHumanUserRequest_Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[458]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportHumanUserRequest_Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportHumanUserRequest_Email) ProtoMessage() {}

func (x *ImportHumanUserRequest_Email) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[458]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportHumanUserRequest_Email.ProtoReflect.Descriptor instead.
func (*ImportHumanUserRequest_Email) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{20, 1}
}

func (x *ImportHumanUserRequest_Email) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ImportHumanUserRequest_Email) GetIsEmailVerified() bool {
	if x != nil {
		return x.IsEmailVerified
	}
	return false
}

type ImportHumanUserRequest_Phone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// has to be a global number
	Phone           string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	IsPhoneVerified bool   `protobuf:"varint,2,opt,name=is_phone_verified,json=isPhoneVerified,proto3" json:"is_phone_verified,omitempty"`
}

func (x *ImportHumanUserRequest_Phone) Reset() {
	*x = ImportHumanUserRequest_Phone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[459]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportHumanUserRequest_Phone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportHumanUserRequest_Phone) ProtoMessage() {}

func (x *ImportHumanUserRequest_Phone) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[459]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportHumanUserRequest_Phone.ProtoReflect.Descriptor instead.
func (*ImportHumanUserRequest_Phone) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{20, 2}
}

func (x *ImportHumanUserRequest_Phone) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ImportHumanUserRequest_Phone) GetIsPhoneVerified() bool {
	if x != nil {
		return x.IsPhoneVerified
	}
	return false
}

type ImportHumanUserResponse_PasswordlessRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	//deprecated: use expiration instead
	Lifetime   *durationpb.Duration `protobuf:"bytes,2,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
	Expiration *durationpb.Duration `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *ImportHumanUserResponse_PasswordlessRegistration) Reset() {
	*x = ImportHumanUserResponse_PasswordlessRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[460]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportHumanUserResponse_PasswordlessRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportHumanUserResponse_PasswordlessRegistration) ProtoMessage() {}

func (x *ImportHumanUserResponse_PasswordlessRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[460]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportHumanUserResponse_PasswordlessRegistration.ProtoReflect.Descriptor instead.
func (*ImportHumanUserResponse_PasswordlessRegistration) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{21, 0}
}

func (x *ImportHumanUserResponse_PasswordlessRegistration) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ImportHumanUserResponse_PasswordlessRegistration) GetLifetime() *durationpb.Duration {
	if x != nil {
		return x.Lifetime
	}
	return nil
}

func (x *ImportHumanUserResponse_PasswordlessRegistration) GetExpiration() *durationpb.Duration {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type BulkSetUserMetadataRequest_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BulkSetUserMetadataRequest_Metadata) Reset() {
	*x = BulkSetUserMetadataRequest_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[461]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkSetUserMetadataRequest_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkSetUserMetadataRequest_Metadata) ProtoMessage() {}

func (x *BulkSetUserMetadataRequest_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[461]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkSetUserMetadataRequest_Metadata.ProtoReflect.Descriptor instead.
func (*BulkSetUserMetadataRequest_Metadata) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{42, 0}
}

func (x *BulkSetUserMetadataRequest_Metadata) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BulkSetUserMetadataRequest_Metadata) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type BulkAddProjectRolesRequest_Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Group       string `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *BulkAddProjectRolesRequest_Role) Reset() {
	*x = BulkAddProjectRolesRequest_Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_management_proto_msgTypes[462]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAddProjectRolesRequest_Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAddProjectRolesRequest_Role) ProtoMessage() {}

func (x *BulkAddProjectRolesRequest_Role) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_management_proto_msgTypes[462]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAddProjectRolesRequest_Role.ProtoReflect.Descriptor instead.
func (*BulkAddProjectRolesRequest_Role) Descriptor() ([]byte, []int) {
	return file_zitadel_management_proto_rawDescGZIP(), []int{166, 0}
}

func (x *BulkAddProjectRolesRequest_Role) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BulkAddProjectRolesRequest_Role) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *BulkAddProjectRolesRequest_Role) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

var File_zitadel_management_proto protoreflect.FileDescriptor

var file_zitadel_management_proto_rawDesc = []byte{
	0x0a, 0x18, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x1a, 0x11, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x69, 0x64,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2f, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x10, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x4f, 0x49, 0x44, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x4f, 0x49, 0x44, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12,
	0x2d, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x0f,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x5a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x4f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x61, 0x6d, 0x5f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x61, 0x6d, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x4c,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xbe, 0x01, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x45, 0x0a,
	0x0e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x36, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0xbc, 0x01, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x45, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x73,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x2d, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x73, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x5b, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4a, 0x04,
	0x08, 0x01, 0x10, 0x02, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x5c, 0x0a,
	0x13, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8,
	0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x33, 0x0a, 0x14, 0x49,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x22, 0xa5, 0x06, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x56, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x75,
	0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x46, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x9a,
	0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x0a, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x1a, 0x52, 0x0a, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x1a,
	0x57, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x10, 0x01,
	0x18, 0x32, 0x3a, 0x01, 0x2b, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x69, 0x73, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x64, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x48,
	0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xa8,
	0x07, 0x0a, 0x16, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x59, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x53, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x49, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x48, 0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x21, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x9a, 0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64,
	0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x0a, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x1a, 0x52, 0x0a, 0x05,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x69, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x1a, 0x57, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x10,
	0x01, 0x18, 0x32, 0x3a, 0x01, 0x2b, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x69, 0x73, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x91, 0x03, 0x0a, 0x17, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x19, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x18, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa0, 0x01, 0x0a, 0x18, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x35, 0x0a, 0x08, 0x6c,
	0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8c, 0x01,
	0x0a, 0x15, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xf4, 0x03, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x16,
	0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x33, 0x0a, 0x15, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x16, 0x44, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x33, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a,
	0x16, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x2d, 0x0a, 0x0f,
	0x4c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x10, 0x4c,
	0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x2f, 0x0a, 0x11, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x12, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x2f, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x49, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x65, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x52, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x54, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x7a, 0x06,
	0x10, 0x01, 0x18, 0xa0, 0xc2, 0x1e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5e, 0x0a,
	0x17, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xdd, 0x01,
	0x0a, 0x1a, 0x42, 0x75, 0x6c, 0x6b, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x56, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x4b, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x7a, 0x06,
	0x10, 0x01, 0x18, 0xa0, 0xc2, 0x1e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x52, 0x0a,
	0x1b, 0x42, 0x75, 0x6c, 0x6b, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x55, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x51, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x60, 0x0a, 0x1d, 0x42,
	0x75, 0x6c, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0f, 0xfa, 0x42, 0x0c, 0x92, 0x01, 0x09, 0x22, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x55, 0x0a,
	0x1e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x3d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xd3, 0x02, 0x0a, 0x19, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x0a, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x51,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x3b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7a,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x60, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x4f, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x69, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x65, 0x6e,
	0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x60, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x22, 0x58, 0x0a, 0x21, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61,
	0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4a, 0x0a, 0x23,
	0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x24, 0x52, 0x65, 0x73, 0x65,
	0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61,
	0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x7a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x2c, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x8e,
	0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xfa, 0x42, 0x09, 0x72, 0x07, 0x10, 0x01, 0x18, 0x32, 0x3a, 0x01, 0x2b, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x73, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22,
	0x4f, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x3e, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x4f, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x4a, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5b, 0x0a,
	0x24, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3f, 0x0a, 0x18, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x19, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x69, 0x0a,
	0x1e, 0x53, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x48, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x56, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x48,
	0x75, 0x6d, 0x61, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x90, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x48, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x6e, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x22, 0x4f, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x29, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x63, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x24, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41,
	0x49, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4d, 0x53,
	0x10, 0x01, 0x22, 0x61, 0x0a, 0x2a, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x42, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x75, 0x6d,
	0x61, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1c, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x46,
	0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x75, 0x74,
	0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x20, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f,
	0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x6d, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x75,
	0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x57,
	0x0a, 0x20, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x75, 0x74,
	0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x43, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x75, 0x6d, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1d,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x4e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x49, 0x0a, 0x22, 0x41, 0x64, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xa9, 0x01, 0x0a, 0x23, 0x41, 0x64, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x23,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x24, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x6c, 0x0a, 0x1e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48,
	0x75, 0x6d, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d,
	0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xf4, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x63, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x6a, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x7b, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9a, 0x02, 0x0a, 0x14, 0x41, 0x64, 0x64,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0xa4,
	0x01, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x5f, 0x92, 0x41, 0x5c, 0x32, 0x3b, 0x54, 0x68, 0x65, 0x20, 0x64,
	0x61, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x77, 0x69, 0x6c, 0x6c,
	0x20, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6e, 0x6f, 0x20, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x70, 0x6f,
	0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4a, 0x1d, 0x22, 0x32, 0x35, 0x31, 0x39, 0x2d, 0x30, 0x34,
	0x2d, 0x30, 0x31, 0x54, 0x30, 0x38, 0x3a, 0x34, 0x35, 0x3a, 0x30, 0x30, 0x2e, 0x30, 0x30, 0x30,
	0x30, 0x30, 0x30, 0x5a, 0x22, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6b, 0x65, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x61, 0x0a, 0x17,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22,
	0x4f, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x6e, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x4c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x49, 0x44, 0x50, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x22, 0x85, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x4c, 0x69,
	0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44,
	0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x69, 0x64, 0x70, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x53, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61,
	0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3a, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x11, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x39, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x67, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22, 0x41, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x4d, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x5a, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x45, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22,
	0x2f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x55, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x32, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a,
	0x15, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x7b, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x39, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x4b, 0x0a,
	0x14, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3c, 0x0a, 0x16, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x4e, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x44, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x10,
	0x01, 0x20, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x23, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x3e, 0x0a, 0x18, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x50, 0x0a, 0x19, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x40, 0x0a, 0x1a, 0x53, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x52, 0x0a, 0x1b,
	0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x7e, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x22, 0x7e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x50, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x53, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x4e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3d, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x33, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x70, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6c,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x0f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0e, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x7e, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x3a, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x7e, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x85, 0x01, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3a, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x7c, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x5e, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0xb3, 0x02, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x68,
	0x61, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x6e, 0x0a, 0x18, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x16, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x65, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xd2,
	0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x12, 0x6e, 0x0a, 0x18, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x16, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x22, 0x4c, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x36, 0x0a, 0x18, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x19, 0x44, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x36, 0x0a, 0x18, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x32, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x15, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x2d, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x22, 0x4d, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x8a, 0x02, 0x0a, 0x1a, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x73, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x52, 0x0a, 0x1b,
	0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0xbb, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x2d, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x50,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x6c, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x50,
	0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0xaa, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x7f, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x30, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd8,
	0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x37, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x1f, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7f, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x52,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x6c, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x52, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x61, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x52,
	0x03, 0x61, 0x70, 0x70, 0x22, 0x9d, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x32, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0xbe, 0x07, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4f, 0x49, 0x44, 0x43, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f,
	0x75, 0x72, 0x69, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x47, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x40, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x49, 0x44, 0x43, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x61, 0x75, 0x74,
	0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16,
	0x70, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x76, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x53, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x49, 0x44, 0x43, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a,
	0x1b, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x18, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0a,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x6b, 0x65, 0x77, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0xfa, 0x42, 0x09,
	0xaa, 0x01, 0x06, 0x22, 0x02, 0x08, 0x05, 0x32, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x6b, 0x65, 0x77, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x73, 0x22, 0x8c, 0x03, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4f, 0x49, 0x44, 0x43, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x55, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0x92, 0x41, 0x35, 0x32, 0x20,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4a, 0x11, 0x22, 0x67, 0x6a, 0xc3, 0xb6, 0x71, 0x33, 0x34, 0x35, 0x38, 0x39, 0x75, 0x61, 0x73,
	0x67, 0x68, 0x22, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x5d, 0x0a,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0x92, 0x41, 0x35, 0x32, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x20, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x74, 0x68, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x11, 0x22, 0x67, 0x6a,
	0xc3, 0xb6, 0x71, 0x33, 0x34, 0x35, 0x38, 0x39, 0x75, 0x61, 0x73, 0x67, 0x68, 0x22, 0x52, 0x0c,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x6e, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x12,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x41, 0x50, 0x49, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50,
	0x49, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x95, 0x02, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x41, 0x50, 0x49, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x55, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38,
	0x92, 0x41, 0x35, 0x32, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x11, 0x22, 0x67, 0x6a, 0xc3, 0xb6, 0x71, 0x33, 0x34, 0x35,
	0x38, 0x39, 0x75, 0x61, 0x73, 0x67, 0x68, 0x22, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x5d, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0x92, 0x41, 0x35, 0x32, 0x20,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4a, 0x11, 0x22, 0x67, 0x6a, 0xc3, 0xb6, 0x71, 0x33, 0x34, 0x35, 0x38, 0x39, 0x75, 0x61, 0x73,
	0x67, 0x68, 0x22, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x89,
	0x07, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x73,
	0x12, 0x47, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x49, 0x44, 0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44,
	0x43, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x41, 0x75, 0x74, 0x68, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x70, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x65, 0x76, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x64, 0x65, 0x76, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x53, 0x0a, 0x11, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d,
	0x0a, 0x1b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x18, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a,
	0x17, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x1b, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x6b, 0x65,
	0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0xaa, 0x01, 0x06, 0x22, 0x02, 0x08, 0x05, 0x32, 0x00,
	0x52, 0x09, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x6b, 0x65, 0x77, 0x12, 0x2d, 0x0a, 0x12, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x22, 0x52, 0x0a, 0x1b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xc0,
	0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x10, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x51, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x64, 0x0a, 0x14, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x15, 0x44, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x64, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x4c,
	0x0a, 0x15, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x60, 0x0a, 0x10,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x48,
	0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x71, 0x0a, 0x21, 0x52, 0x65, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x22,
	0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0x92, 0x41, 0x34, 0x32, 0x1f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4a,
	0x11, 0x22, 0x67, 0x6a, 0xc3, 0xb6, 0x71, 0x33, 0x34, 0x35, 0x38, 0x39, 0x75, 0x61, 0x73, 0x67,
	0x68, 0x22, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x70, 0x0a, 0x20, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x21, 0x52, 0x65, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x21,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc2, 0x02, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0xa4, 0x01, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x5f, 0x92, 0x41, 0x5c, 0x32, 0x3b,
	0x54, 0x68, 0x65, 0x20, 0x64, 0x61, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6b, 0x65, 0x79,
	0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x20, 0x61, 0x6e, 0x64,
	0x20, 0x6e, 0x6f, 0x20, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20,
	0x62, 0x65, 0x20, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4a, 0x1d, 0x22, 0x32, 0x35,
	0x31, 0x39, 0x2d, 0x30, 0x34, 0x2d, 0x30, 0x31, 0x54, 0x30, 0x38, 0x3a, 0x34, 0x35, 0x3a, 0x30,
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x22, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x79, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x4b,
	0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x6e, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x42, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a,
	0x0e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x69, 0x0a, 0x17,
	0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x73, 0x22, 0x51, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x71, 0x0a, 0x1d, 0x44, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x1e, 0x44, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x71, 0x0a, 0x1d, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x08, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x1e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x6d, 0x0a, 0x19, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x1a, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x69, 0x0a,
	0x22, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x70, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x1e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x31, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xab, 0x01, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x54,
	0x0a, 0x1d, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x98,
	0x01, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x08, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x20, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x65, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x22, 0x7e, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x22, 0x7e, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xb6, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x6f, 0x0a, 0x14, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x4e,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x68,
	0x0a, 0x1a, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x1b, 0x44, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x68, 0x0a, 0x1a,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x1b, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x64, 0x0a, 0x16, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x4e, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x37, 0x0a, 0x1a, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x42, 0x75, 0x6c,
	0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x41, 0x4d, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x49, 0x41, 0x4d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x41, 0x4d,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x17,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x22, 0xd3, 0x02, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x66, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x4d, 0x66, 0x61, 0x12, 0x5a, 0x0a, 0x11, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x69, 0x64, 0x65, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x68, 0x69, 0x64, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x22, 0x53, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xd6, 0x02, 0x0a,
	0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x17, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2c,
	0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x66, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x4d, 0x66, 0x61, 0x12, 0x5a, 0x0a, 0x11, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x68, 0x69, 0x64, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x22, 0x56, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x22, 0x0a,
	0x20, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x58, 0x0a, 0x21, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x49, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x44,
	0x50, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x8c, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x44, 0x50, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x49, 0x44, 0x50,
	0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x05, 0x69, 0x64, 0x70, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04,
	0x10, 0x01, 0x20, 0x00, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x52, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x49, 0x44, 0x50, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x44, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x44, 0x50,
	0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x52, 0x05, 0x69, 0x64, 0x70, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x20, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x49, 0x44, 0x50, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x25, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x24, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x6a, 0x0a, 0x23, 0x41, 0x64, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5b,
	0x0a, 0x24, 0x41, 0x64, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x6f, 0x0a, 0x28, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82,
	0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x60, 0x0a, 0x29,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x24,
	0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x68, 0x0a, 0x22, 0x41,
	0x64, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x42, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5a, 0x0a, 0x23, 0x41, 0x64, 0x64, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x6d, 0x0a, 0x27, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x5f, 0x0a, 0x28, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x24, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74,
	0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x22, 0x2b, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x71, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x22, 0xd1, 0x01, 0x0a, 0x28, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x23, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x63, 0x61, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x55, 0x70, 0x70, 0x65, 0x72,
	0x63, 0x61, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x63, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73,
	0x4c, 0x6f, 0x77, 0x65, 0x72, 0x63, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68,
	0x61, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61,
	0x73, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x60, 0x0a, 0x29, 0x41, 0x64, 0x64, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x2b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d,
	0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f,
	0x75, 0x70, 0x70, 0x65, 0x72, 0x63, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x68, 0x61, 0x73, 0x55, 0x70, 0x70, 0x65, 0x72, 0x63, 0x61, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x68, 0x61, 0x73, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x63, 0x61, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x63, 0x61,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0x63, 0x0a, 0x2c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69,
	0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x2f, 0x0a, 0x2d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74,
	0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1d, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7b, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x24, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41,
	0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x63, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x22, 0x6f, 0x0a, 0x21, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78,
	0x5f, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x57, 0x61, 0x72,
	0x6e, 0x44, 0x61, 0x79, 0x73, 0x22, 0x59, 0x0a, 0x22, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x72, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x57, 0x61, 0x72, 0x6e,
	0x44, 0x61, 0x79, 0x73, 0x22, 0x5c, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x28, 0x0a, 0x26, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x27,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x19, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x73, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x20, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x53, 0x0a, 0x1d, 0x41,
	0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x61, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6d, 0x61, 0x78,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73,
	0x22, 0x55, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x56, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6d,
	0x61, 0x78, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x61, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x22,
	0x58, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c,
	0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54,
	0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x5a, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x20, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x5d, 0x0a, 0x1d, 0x41,
	0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x55, 0x0a, 0x1e, 0x41, 0x64,
	0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x60, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x73, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x4c,
	0x69, 0x6e, 0x6b, 0x22, 0x58, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x24, 0x0a,
	0x22, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x76, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x57, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0xcc, 0x05, 0x0a, 0x1b, 0x41,
	0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x32, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0xf7, 0x01, 0x0a, 0x16, 0x68, 0x69, 0x64,
	0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x75, 0x66,
	0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0xc1, 0x01, 0x92, 0x41, 0xbd, 0x01,
	0x32, 0xba, 0x01, 0x68, 0x69, 0x64, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x72, 0x67,
	0x20, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x20, 0x22, 0x75, 0x72, 0x6e, 0x3a, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x3a, 0x69, 0x61, 0x6d, 0x3a, 0x6f, 0x72, 0x67, 0x3a, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x3a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x7b, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x22, 0x20, 0x69, 0x73, 0x20, 0x73, 0x65, 0x74, 0x2e,
	0x20, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x74,
	0x68, 0x69, 0x73, 0x20, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x64, 0x6f, 0x63, 0x73, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x63, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x73, 0x23, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x13, 0x68,
	0x69, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x75, 0x66, 0x66,
	0x69, 0x78, 0x12, 0x26, 0x0a, 0x0a, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x32, 0x52,
	0x09, 0x77, 0x61, 0x72, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x10, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x32, 0x52, 0x0f, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x26,
	0x0a, 0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x32, 0x52, 0x09, 0x66, 0x6f, 0x6e,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x32, 0x52, 0x10, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x61, 0x72, 0x6b, 0x12, 0x3b, 0x0a,
	0x15, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x5f, 0x64, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x18, 0x32, 0x52, 0x13, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x61, 0x72, 0x6b, 0x12, 0x2f, 0x0a, 0x0f, 0x77, 0x61,
	0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x32, 0x52, 0x0d, 0x77, 0x61,
	0x72, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x61, 0x72, 0x6b, 0x12, 0x2f, 0x0a, 0x0f, 0x66,
	0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x72, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x32, 0x52, 0x0d, 0x66,
	0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x61, 0x72, 0x6b, 0x12, 0x2b, 0x0a, 0x11,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x53, 0x0a, 0x1c, 0x41, 0x64, 0x64,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xcf,
	0x05, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18,
	0x32, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0xf7, 0x01, 0x0a, 0x16, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x42, 0xc1, 0x01, 0x92, 0x41, 0xbd, 0x01, 0x32, 0xba, 0x01, 0x68, 0x69, 0x64, 0x65, 0x73, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x6f, 0x72, 0x67, 0x20, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x20, 0x6f,
	0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x6d,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x20, 0x22, 0x75,
	0x72, 0x6e, 0x3a, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x3a, 0x69, 0x61, 0x6d, 0x3a, 0x6f,
	0x72, 0x67, 0x3a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x3a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x3a, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x22, 0x20,
	0x69, 0x73, 0x20, 0x73, 0x65, 0x74, 0x2e, 0x20, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x20,
	0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x20, 0x69, 0x6e, 0x20, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x64, 0x6f, 0x63, 0x73,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x73, 0x23, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x73, 0x52, 0x13, 0x68, 0x69, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x26, 0x0a, 0x0a, 0x77, 0x61, 0x72,
	0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x18, 0x32, 0x52, 0x09, 0x77, 0x61, 0x72, 0x6e, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x32, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x18, 0x32, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x18, 0x32, 0x52, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x35, 0x0a,
	0x12, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x64,
	0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x18, 0x32, 0x52, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x44, 0x61, 0x72, 0x6b, 0x12, 0x3b, 0x0a, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x32, 0x52, 0x13, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x61, 0x72,
	0x6b, 0x12, 0x2f, 0x0a, 0x0f, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x64, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x18, 0x32, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x61,
	0x72, 0x6b, 0x12, 0x2f, 0x0a, 0x0f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x5f, 0x64, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x18, 0x32, 0x52, 0x0d, 0x66, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44,
	0x61, 0x72, 0x6b, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x77,
	0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x56, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x21,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x23,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x28, 0x0a, 0x26, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x5e, 0x0a, 0x27, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x6f, 0x67,
	0x6f, 0x44, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x63, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x23, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x28, 0x0a, 0x26, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49,
	0x63, 0x6f, 0x6e, 0x44, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5e,
	0x0a, 0x27, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x72,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x24,
	0x0a, 0x22, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x46, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x23, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x46,
	0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x22, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x21, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x49,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x67, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65,
	0x78, 0x74, 0x22, 0x4a, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x68,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x69, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x22, 0xd9, 0x02, 0x0a, 0x1f, 0x53, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x06, 0x4a, 0x04, 0x22,
	0x64, 0x65, 0x22, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x27, 0x0a,
	0x0a, 0x70, 0x72, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8,
	0x01, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1c, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xa0, 0x06, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x29,
	0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x0a, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x66, 0x6f, 0x6f,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x22, 0x57, 0x0a, 0x20, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x54, 0x0a,
	0x2a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x69, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x22, 0x62, 0x0a, 0x2b, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x45, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x61,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65,
	0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78,
	0x74, 0x22, 0x44, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x22, 0x82, 0x1a, 0x0a, 0x1a, 0x53, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x06, 0x4a, 0x04, 0x22, 0x64, 0x65, 0x22, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x5b,
	0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x68, 0x0a, 0x19, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x64,
	0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44,
	0x6f, 0x6e, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x16, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x6f, 0x6e,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x55, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x62, 0x0a, 0x17,
	0x69, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x6f,
	0x6e, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x69, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x44, 0x6f, 0x6e, 0x65,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x14, 0x69, 0x6e, 0x69, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x64, 0x0a, 0x17, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x71, 0x0a, 0x1c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x6f, 0x6e,
	0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x6f, 0x6e, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x19,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x5b, 0x0a, 0x14, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x5f, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74,
	0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x44,
	0x6f, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x5f,
	0x6d, 0x66, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x46, 0x41, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x11, 0x69, 0x6e, 0x69, 0x74, 0x4d, 0x66, 0x61, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x50, 0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x6d, 0x66, 0x61, 0x5f, 0x6f,
	0x74, 0x70, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x69, 0x74, 0x4d, 0x46, 0x41, 0x4f, 0x54, 0x50, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x4d, 0x66, 0x61, 0x4f, 0x74, 0x70,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x50, 0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x6d, 0x66, 0x61,
	0x5f, 0x75, 0x32, 0x66, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x46, 0x41, 0x55, 0x32, 0x46, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x4d, 0x66, 0x61, 0x55,
	0x32, 0x66, 0x54, 0x65, 0x78, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x6d,
	0x66, 0x61, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x46, 0x41, 0x44, 0x6f, 0x6e, 0x65,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74,
	0x4d, 0x66, 0x61, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x4f, 0x0a, 0x12, 0x6d,
	0x66, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x46, 0x41, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x54, 0x65, 0x78, 0x74, 0x52, 0x10, 0x6d, 0x66, 0x61, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x56, 0x0a, 0x13,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x66, 0x61, 0x5f, 0x6f, 0x74, 0x70, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4d, 0x46, 0x41, 0x4f, 0x54, 0x50, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x66, 0x61, 0x4f, 0x74, 0x70,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x56, 0x0a, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x6d,
	0x66, 0x61, 0x5f, 0x75, 0x32, 0x66, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x46, 0x41, 0x55, 0x32, 0x46,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4d, 0x66, 0x61, 0x55, 0x32, 0x66, 0x54, 0x65, 0x78, 0x74, 0x12, 0x54, 0x0a, 0x11,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x5b, 0x0a, 0x14, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x12, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x68, 0x0a, 0x19, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x16, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x65, 0x0a, 0x18, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x6f, 0x6e, 0x65,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x15, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x67, 0x0a, 0x18, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x16, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x61, 0x0a, 0x16, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x5e, 0x0a, 0x15,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x67,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x54, 0x65, 0x78, 0x74, 0x12, 0x5f, 0x0a, 0x16,
	0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x6e,
	0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x13, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x55, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x6f, 0x0a,
	0x1c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65,
	0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x18, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x55,
	0x0a, 0x12, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x10, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x46, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3c, 0x0a,
	0x0b, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x67, 0x0a, 0x18, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x16, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x79, 0x0a, 0x1e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x1c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x86, 0x01, 0x0a, 0x23, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x6f,
	0x6e, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x20, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x93, 0x01, 0x0a, 0x28, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x24, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x74, 0x22, 0x52,
	0x0a, 0x1b, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x4f, 0x0a, 0x25, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x54, 0x6f, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x22, 0x5d, 0x0a, 0x26, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x54, 0x6f, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x52, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x70, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x22, 0x53, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x71, 0x0a,
	0x2a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74,
	0x22, 0xe2, 0x02, 0x0a, 0x28, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x13, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x06, 0x4a, 0x04,
	0x22, 0x64, 0x65, 0x22, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1e,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x27,
	0x0a, 0x0a, 0x70, 0x72, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0xc8, 0x01, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67,
	0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xa0, 0x06, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x29, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x0a,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x66, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x22, 0x60, 0x0a, 0x29, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x5d, 0x0a, 0x33, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x6b, 0x0a, 0x34, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x50, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x6e, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x54, 0x65, 0x78, 0x74, 0x22, 0x51, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x6f, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x22, 0xe0, 0x02, 0x0a, 0x26, 0x53, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x92, 0x41, 0x06, 0x4a, 0x04, 0x22, 0x64, 0x65, 0x22, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x08,
	0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xa0, 0x06,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x29, 0x0a, 0x0b, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01,
	0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x22, 0x5e, 0x0a, 0x27,
	0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x5b, 0x0a, 0x31,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x69, 0x0a, 0x32, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x50, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x6e, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x22, 0x51, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x6f, 0x0a, 0x28, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x22, 0xe0, 0x02, 0x0a, 0x26, 0x53,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x92, 0x41, 0x06, 0x4a, 0x04, 0x22, 0x64, 0x65, 0x22, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52,
	0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xa0,
	0x06, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8,
	0x01, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x22, 0x5e, 0x0a,
	0x27, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x5b, 0x0a,
	0x31, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x69, 0x0a, 0x32, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x52, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x70, 0x0a, 0x29, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x22, 0x53, 0x0a, 0x29, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x22, 0x71, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65,
	0x78, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54,
	0x65, 0x78, 0x74, 0x22, 0xe2, 0x02, 0x0a, 0x28, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41,
	0x06, 0x4a, 0x04, 0x22, 0x64, 0x65, 0x22, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52,
	0x09, 0x70, 0x72, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x24,
	0x0a, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x67, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xa0, 0x06, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8,
	0x01, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a,
	0x0b, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x0a, 0x66, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x22, 0x60, 0x0a, 0x29, 0x53, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x5d, 0x0a, 0x33, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x6b, 0x0a, 0x34, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x5d, 0x0a, 0x33, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x7b, 0x0a, 0x34, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65,
	0x78, 0x74, 0x22, 0x5e, 0x0a, 0x34, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x22, 0x7c, 0x0a, 0x35, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74,
	0x22, 0xed, 0x02, 0x0a, 0x33, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x06, 0x4a, 0x04, 0x22, 0x64, 0x65, 0x22, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0xc8, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x65,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x09, 0x70, 0x72, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0xc8, 0x01, 0x52, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0x18, 0xa0, 0x06, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0x18, 0xc8, 0x01, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x22, 0x6b, 0x0a, 0x34, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x68, 0x0a,
	0x3e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x3f, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x32, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x03,
	0x69, 0x64, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x52, 0x03,
	0x69, 0x64, 0x70, 0x22, 0xc1, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x49,
	0x44, 0x50, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x43, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x44, 0x50, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x73,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x39, 0x0a, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0xed, 0x01, 0x0a, 0x08, 0x49, 0x44, 0x50, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x49,
	0x44, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x70, 0x49, 0x64, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x69, 0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44,
	0x50, 0x4e, 0x61, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x64,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4d, 0x0a, 0x10, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69,
	0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0c, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xba, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x43, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xf8, 0x07, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x4f,
	0x49, 0x44, 0x43, 0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x0a, 0x4a, 0x08, 0x22, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x22, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x0c, 0x73,
	0x74, 0x79, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x53, 0x74, 0x79, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x55, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x92, 0x41, 0x4a, 0x32, 0x48,
	0x73, 0x6f, 0x6d, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x73, 0x74, 0x79, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65,
	0x69, 0x72, 0x20, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3b, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x2e, 0x32, 0x2c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20,
	0x69, 0x64, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x64, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3f, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xc8, 0x01, 0x92, 0x41, 0x32, 0x32, 0x30, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x62,
	0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x6e, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x56, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x92, 0x41, 0x49, 0x32, 0x28, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x69, 0x64, 0x63, 0x20, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4a, 0x1d,
	0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x52, 0x06, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x88, 0x01, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x70, 0x92, 0x41, 0x6d, 0x32, 0x4b, 0x74, 0x68, 0x65,
	0x20, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x20, 0x62, 0x79, 0x20, 0x5a, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c, 0x20, 0x64, 0x75, 0x72,
	0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20,
	0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4a, 0x1e, 0x5b, 0x22, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x2c, 0x20,
	0x22, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x5d, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x12, 0xa1, 0x01, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x49, 0x44, 0x43, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x42, 0x4d, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x92, 0x41, 0x42, 0x32, 0x40,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x20,
	0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x12, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x12, 0x93, 0x01, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x49, 0x44, 0x43, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x42, 0x46, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x92, 0x41, 0x3b, 0x32, 0x39,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x63, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x4f, 0x49, 0x44, 0x43, 0x49, 0x44, 0x50,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x64, 0x70, 0x49, 0x64, 0x22, 0xac, 0x06, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x4a,
	0x57, 0x54, 0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x0a, 0x4a, 0x08, 0x22, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x22, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x0c, 0x73, 0x74,
	0x79, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x44, 0x50, 0x53, 0x74, 0x79, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x55, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x92, 0x41, 0x4a, 0x32, 0x48, 0x73,
	0x6f, 0x6d, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x73, 0x74, 0x79, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x69,
	0x72, 0x20, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0c, 0x6a, 0x77, 0x74, 0x5f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5f, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x52, 0x32, 0x2b, 0x74, 0x68, 0x65, 0x20,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x77, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x6a, 0x77, 0x74, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x65, 0x64, 0x4a, 0x1d, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x78, 0xc8, 0x01, 0x80, 0x01, 0x01, 0x52, 0x0b, 0x6a, 0x77,
	0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x72, 0x0a, 0x06, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x4d, 0x32, 0x26, 0x74, 0x68, 0x65, 0x20, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6a, 0x77, 0x74, 0x20,
	0x28, 0x66, 0x6f, 0x72, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x29,
	0x4a, 0x1d, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x78,
	0xc8, 0x01, 0x80, 0x01, 0x01, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x9f, 0x01,
	0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x7a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x92, 0x41, 0x6d, 0x32, 0x41, 0x74, 0x68, 0x65, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x28, 0x4a,
	0x57, 0x4b, 0x29, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x61, 0x72, 0x65, 0x20, 0x75, 0x73,
	0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4a,
	0x57, 0x54, 0x20, 0x77, 0x69, 0x74, 0x68, 0x4a, 0x22, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x78, 0xc8, 0x01, 0x80, 0x01,
	0x01, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x8c, 0x01, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6b, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x92, 0x41, 0x5e, 0x32, 0x49, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x20, 0x77, 0x68, 0x65,
	0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4a, 0x57, 0x54, 0x20, 0x69, 0x73, 0x20, 0x73, 0x65,
	0x6e, 0x74, 0x20, 0x69, 0x6e, 0x2c, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x69,
	0x73, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a,
	0x0e, 0x22, 0x78, 0x2d, 0x61, 0x75, 0x74, 0x68, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x78,
	0xc8, 0x01, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x4a, 0x57, 0x54,
	0x49, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x64, 0x70, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x17, 0x44, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05,
	0x69, 0x64, 0x70, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x18, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3c, 0x0a, 0x17, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x69,
	0x64, 0x70, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x38, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f,
	0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x06,
	0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x69, 0x64, 0x70, 0x49, 0x64, 0x22,
	0x16, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x69, 0x64, 0x70,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x17, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x0a, 0x4a,
	0x08, 0x22, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x22, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x98, 0x01, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x50, 0x53, 0x74, 0x79, 0x6c, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x42, 0x55, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01,
	0x92, 0x41, 0x4a, 0x32, 0x48, 0x73, 0x6f, 0x6d, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x20, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x74, 0x79, 0x6c, 0x69, 0x6e, 0x67,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x20, 0x74,
	0x6f, 0x20, 0x74, 0x68, 0x65, 0x69, 0x72, 0x20, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x0b, 0x73,
	0x74, 0x79, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x4b, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xf6, 0x06, 0x0a,
	0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x4f, 0x49, 0x44,
	0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x15, 0x4a, 0x13, 0x22,
	0x36, 0x39, 0x36, 0x32, 0x39, 0x30, 0x32, 0x33, 0x39, 0x30, 0x36, 0x34, 0x38, 0x38, 0x33, 0x33,
	0x34, 0x22, 0x52, 0x05, 0x69, 0x64, 0x70, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3b, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x2e, 0x32, 0x2c, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x20, 0x69, 0x64, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x8a, 0x01, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x65, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x5a, 0x32, 0x58, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x20, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20,
	0x69, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x74,
	0x65, 0x6e, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x6e, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x56, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x49, 0x32,
	0x28, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x69, 0x64, 0x63, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4a, 0x1d, 0x22, 0x68, 0x74, 0x74, 0x70,
	0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x88, 0x01, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x70, 0x92, 0x41, 0x6d, 0x32, 0x4b, 0x74, 0x68, 0x65, 0x20, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20,
	0x5a, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c, 0x20, 0x64, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4a, 0x1e, 0x5b, 0x22, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22, 0x2c, 0x20,
	0x22, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x2c, 0x20, 0x22, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x22, 0x5d, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0xa1, 0x01, 0x0a, 0x14,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x4d, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x92, 0x41, 0x42, 0x32, 0x40, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x52, 0x12, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x93, 0x01, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x46, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x75, 0x73, 0x65, 0x72, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x55, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x49, 0x44, 0x50, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x83, 0x05, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x4a, 0x57, 0x54,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a,
	0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x15, 0x4a, 0x13, 0x22, 0x36,
	0x39, 0x36, 0x32, 0x39, 0x30, 0x32, 0x33, 0x39, 0x30, 0x36, 0x34, 0x38, 0x38, 0x33, 0x33, 0x34,
	0x22, 0x52, 0x05, 0x69, 0x64, 0x70, 0x49, 0x64, 0x12, 0x82, 0x01, 0x0a, 0x0c, 0x6a, 0x77, 0x74,
	0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x5f, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x52, 0x32, 0x2b,
	0x74, 0x68, 0x65, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x77, 0x68, 0x65,
	0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6a, 0x77, 0x74, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62,
	0x65, 0x20, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x65, 0x64, 0x4a, 0x1d, 0x22, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x78, 0xc8, 0x01, 0x80, 0x01, 0x01,
	0x52, 0x0b, 0x6a, 0x77, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x72, 0x0a,
	0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x4d, 0x32, 0x26, 0x74, 0x68,
	0x65, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x6a, 0x77, 0x74, 0x20, 0x28, 0x66, 0x6f, 0x72, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x29, 0x4a, 0x1d, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x22, 0x78, 0xc8, 0x01, 0x80, 0x01, 0x01, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x12, 0x9f, 0x01, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x7a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x6d, 0x32, 0x41, 0x74, 0x68, 0x65, 0x20, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6b, 0x65,
	0x79, 0x20, 0x28, 0x4a, 0x57, 0x4b, 0x29, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x61, 0x72,
	0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x4a, 0x57, 0x54, 0x20, 0x77, 0x69, 0x74, 0x68, 0x4a, 0x22, 0x22, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x78,
	0xc8, 0x01, 0x80, 0x01, 0x01, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x8c, 0x01, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6b, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x5e, 0x32, 0x49, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x61,
	0x6d, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x20, 0x77, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4a, 0x57, 0x54, 0x20, 0x69,
	0x73, 0x20, 0x73, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x6e, 0x2c, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x20, 0x69, 0x73, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4a, 0x0e, 0x22, 0x78, 0x2d, 0x61, 0x75, 0x74, 0x68, 0x2d, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x78, 0xc8, 0x01, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x54, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49,
	0x44, 0x50, 0x4a, 0x57, 0x54, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0e,
	0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x3c, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x8e, 0x02, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4a, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x48, 0x00, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x50, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x48, 0x00, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x53, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0c, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xc6, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x49, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x73,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x31, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x9d, 0x03, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x92, 0x41, 0x0f, 0x4a, 0x0d, 0x22, 0x6c, 0x6f, 0x67, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x06, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x43, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xd0, 0x0f, 0x92, 0x41, 0x36, 0x4a, 0x34, 0x22, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x6c, 0x6f, 0x67, 0x28, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2c,
	0x20, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x29, 0x7b, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e,
	0x6c, 0x6f, 0x67, 0x28, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x29, 0x7d, 0x22, 0x52, 0x06,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x4f, 0xfa, 0x42, 0x09, 0xaa, 0x01, 0x06, 0x22, 0x02, 0x08, 0x14, 0x32,
	0x00, 0x92, 0x41, 0x40, 0x32, 0x3e, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x77, 0x68, 0x69, 0x63,
	0x68, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x70, 0x0a,
	0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x48, 0x92, 0x41, 0x45, 0x32, 0x43, 0x77, 0x68, 0x65,
	0x6e, 0x20, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x65, 0x78, 0x74,
	0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x74,
	0x68, 0x69, 0x73, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x6f, 0x46, 0x61, 0x69, 0x6c, 0x22,
	0x5b, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x46, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd1, 0x03, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41, 0x15, 0x4a, 0x13, 0x22, 0x36, 0x39,
	0x36, 0x32, 0x39, 0x30, 0x32, 0x33, 0x39, 0x30, 0x36, 0x34, 0x38, 0x38, 0x33, 0x33, 0x34, 0x22,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1c, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x92, 0x41,
	0x0f, 0x4a, 0x0d, 0x22, 0x6c, 0x6f, 0x67, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x43, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xd0, 0x0f, 0x92, 0x41, 0x36, 0x4a, 0x34, 0x22, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x6c, 0x6f, 0x67, 0x28, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2c, 0x20, 0x63, 0x61,
	0x6c, 0x6c, 0x73, 0x29, 0x7b, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x67,
	0x28, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x29, 0x7d, 0x22, 0x52, 0x06, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x4f, 0xfa, 0x42, 0x09, 0xaa, 0x01, 0x06, 0x22, 0x02, 0x08, 0x14, 0x32, 0x00, 0x92, 0x41,
	0x40, 0x32, 0x3e, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x74,
	0x69, 0x6d, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77,
	0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x70, 0x0a, 0x0f, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x42, 0x48, 0x92, 0x41, 0x45, 0x32, 0x43, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74,
	0x72, 0x75, 0x65, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x65, 0x78, 0x74, 0x20, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x69, 0x73,
	0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x6f, 0x46, 0x61, 0x69, 0x6c, 0x22, 0x4b, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x18, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x4f, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x41, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x04, 0x66,
	0x6c, 0x6f, 0x77, 0x22, 0x43, 0x0a, 0x10, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x48, 0x0a, 0x11, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x50, 0x0a, 0x19, 0x53,
	0x65, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x32, 0xab, 0xda,
	0x02, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x12,
	0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a,
	0x12, 0x90, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x49, 0x44, 0x43, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x49, 0x44, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x49, 0x44, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x64,
	0x6f, 0x63, 0x73, 0x12, 0x76, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x49, 0x41, 0x4d, 0x12, 0x24, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x06, 0x12, 0x04, 0x2f, 0x69, 0x61, 0x6d, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0xa9, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x73, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x88, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x72, 0x65,
	0x61, 0x64, 0x12, 0xe3, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12,
	0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xd5, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x5f, 0x62, 0x79, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xb5, 0x18, 0x12, 0x0a, 0x10, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x92, 0x41, 0x97,
	0x01, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12,
	0x38, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x61, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x77,
	0x69, 0x74, 0x68, 0x69, 0x6e, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x62, 0x79, 0x20, 0x69, 0x74, 0x27, 0x73, 0x20,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x40, 0x54, 0x68, 0x65, 0x20, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x73, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x20, 0x65, 0x78, 0x61, 0x63, 0x74, 0x6c, 0x79, 0x2e, 0x4a, 0x0b, 0x0a, 0x03, 0x32,
	0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0x88, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x22, 0x0e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0xac, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x72, 0x65,
	0x61, 0x64, 0x12, 0x91, 0x01, 0x0a, 0x0c, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x12, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x5f, 0x69, 0x73,
	0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x90, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x48, 0x75,
	0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x48,
	0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x0f, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x75, 0x6d, 0x61,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x68, 0x75, 0x6d,
	0x61, 0x6e, 0x2f, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18,
	0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x98, 0x01,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x22, 0x17, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x64,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xa1, 0x01, 0x0a,
	0x0e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a,
	0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x89, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x91, 0x01, 0x0a,
	0x0a, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x3a, 0x01, 0x2a,
	0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x87, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x2a, 0x0b, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x1a, 0x19, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xb5, 0x18,
	0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xb6, 0x01,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b,
	0x6b, 0x65, 0x79, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1b, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x12, 0xc2, 0x01, 0x0a, 0x13, 0x42, 0x75, 0x6c, 0x6b, 0x53,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x31,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x53, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x53, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x5f, 0x62, 0x75, 0x6c, 0x6b, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1b,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0d, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x12, 0xba, 0x01, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f,
	0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1a, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x12, 0xb2, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x82,
	0xb5, 0x18, 0x1a, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x0d,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x12, 0xbc, 0x01,
	0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x2a, 0x1a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x82, 0xb5, 0x18,
	0x1b, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0d, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x12, 0xcb, 0x01, 0x0a,
	0x16, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1a, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2f, 0x5f, 0x62, 0x75, 0x6c, 0x6b, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1b, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0d, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x12, 0xa1, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2d,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x82,
	0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xae,
	0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x1a, 0x18, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x82,
	0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12,
	0x99, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d,
	0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x82, 0xb5, 0x18, 0x0b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xa6, 0x01, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x12, 0xd2, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x48,
	0x75, 0x6d, 0x61, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e,
	0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x22, 0x27, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x5f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xdf, 0x01, 0x0a, 0x1c, 0x52, 0x65,
	0x73, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x22, 0x2b, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x2f, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2b, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x12, 0x16, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xa6, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2e, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x3a, 0x01, 0x2a,
	0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x12, 0xa3, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xdf, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x65, 0x6e,
	0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x22, 0x2b, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x2f, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xa7, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2f,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d,
	0x61, 0x6e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75,
	0x6d, 0x61, 0x6e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x12, 0xca, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x35,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x25, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x2f, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x3a, 0x01, 0x2a, 0x82,
	0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12,
	0xa9, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xe6, 0x01, 0x0a, 0x22,
	0x53, 0x65, 0x6e, 0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x40, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48,
	0x75, 0x6d, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22,
	0x20, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x5f, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x12, 0xbd, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x75, 0x6d,
	0x61, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x32, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41,
	0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x75,
	0x6d, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22, 0x25,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x72, 0x65, 0x61, 0x64, 0x12, 0xc6, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48,
	0x75, 0x6d, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54,
	0x50, 0x12, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f,
	0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x75, 0x74,
	0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x2a, 0x21, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x6f, 0x74, 0x70, 0x82, 0xb5, 0x18,
	0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xd1, 0x01,
	0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x75, 0x74,
	0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x12, 0x36, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x75,
	0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x32, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x55, 0x32, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2e, 0x2a, 0x2c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x2f, 0x75, 0x32, 0x66, 0x2f, 0x7b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x7d, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x12, 0xc0, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x12, 0x33, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x75, 0x6d,
	0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22, 0x25,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2f, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x72, 0x65, 0x61, 0x64, 0x12, 0xdc, 0x01, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x25, 0x22, 0x23, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65,
	0x73, 0x73, 0x2f, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x82, 0xb5, 0x18, 0x17, 0x0a, 0x15, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x12, 0xdc, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x22, 0x28, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x3a,
	0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x12, 0xca, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d,
	0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x12, 0x35,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d,
	0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x2a, 0x28, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x82,
	0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12,
	0x9f, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x1a, 0x18, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x3a, 0x01,
	0x2a, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x12, 0xb0, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x4b, 0x65, 0x79, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x79,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79,
	0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x7b, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x72, 0x65, 0x61, 0x64, 0x12, 0xa9, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22,
	0x1d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01,
	0x2a, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x9c, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x3a, 0x01, 0x2a, 0x82,
	0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12,
	0xab, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x6b, 0x65, 0x79, 0x73, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18,
	0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xb5, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x49, 0x44, 0x50, 0x73, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64,
	0x49, 0x44, 0x50, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xc8, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x48, 0x75, 0x6d, 0x61, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50, 0x12, 0x32,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x75, 0x6d,
	0x61, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x44, 0x50, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x2a,
	0x2f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x12, 0xc7, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a,
	0x82, 0xb5, 0x18, 0x16, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x7b, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x12, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12,
	0x08, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65, 0x82, 0xb5, 0x18, 0x0a, 0x0a, 0x08, 0x6f,
	0x72, 0x67, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xb5, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x12, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x42,
	0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x12, 0x17, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f,
	0x5f, 0x62, 0x79, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x82, 0xb5, 0x18, 0x11, 0x0a, 0x0f,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12,
	0xa0, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x12, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d,
	0x65, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0a, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x65,
	0x61, 0x64, 0x12, 0x77, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x12, 0x24, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0a, 0x22, 0x05, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0c, 0x0a,
	0x0a, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x12, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0d, 0x1a, 0x08, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65, 0x3a, 0x01,
	0x2a, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x6f, 0x72, 0x67, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x9a, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x12, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65, 0x2f,
	0x5f, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5,
	0x18, 0x0b, 0x0a, 0x09, 0x6f, 0x72, 0x67, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x9a, 0x01,
	0x0a, 0x0d, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x12,
	0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x22, 0x14, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x5f, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0b, 0x0a,
	0x09, 0x6f, 0x72, 0x67, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x2c, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x22, 0x18, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82,
	0xb5, 0x18, 0x0a, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xa2, 0x01,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2a,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22,
	0x10, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1a, 0x0a, 0x09, 0x6f, 0x72, 0x67, 0x2e, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x1a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0xa2, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19, 0x2f,
	0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f,
	0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x6f, 0x72,
	0x67, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xed, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22, 0x2e, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65,
	0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x7d, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x5f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1a, 0x0a, 0x09, 0x6f,
	0x72, 0x67, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0xcf, 0x01, 0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2f, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x57, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22, 0x2e, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f,
	0x6d, 0x65, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x7d, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1a, 0x0a,
	0x09, 0x6f, 0x72, 0x67, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0d, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0xca, 0x01, 0x0a, 0x13, 0x53, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28,
	0x22, 0x26, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x5f, 0x73, 0x65, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x82, 0xb5, 0x18, 0x1a, 0x0a, 0x09, 0x6f, 0x72,
	0x67, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0xb3, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x1b, 0x2f, 0x6f, 0x72, 0x67,
	0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f,
	0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x82, 0xb5, 0x18, 0x11, 0x0a, 0x0f, 0x6f, 0x72, 0x67,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xa7, 0x01, 0x0a,
	0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01,
	0x2a, 0x82, 0xb5, 0x18, 0x11, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x9a, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4f, 0x72,
	0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f,
	0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f,
	0x6d, 0x65, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18,
	0x12, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x12, 0xad, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x1a, 0x1a,
	0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18,
	0x12, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x12, 0xab, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72,
	0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a, 0x1a,
	0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6d, 0x65, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x13, 0x0a, 0x11,
	0x6f, 0x72, 0x67, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x9b, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x12, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x02, 0x49, 0x64, 0x12,
	0xd7, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x33, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5,
	0x18, 0x17, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x07, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x97, 0x01, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01,
	0x2a, 0x82, 0xb5, 0x18, 0x0e, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0xb4, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x31, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0e, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xf0, 0x01, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x35, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x12, 0x3e, 0x2f,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x82, 0xb5, 0x18,
	0x1c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e,
	0x72, 0x65, 0x61, 0x64, 0x12, 0x07, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0xbb, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x22, 0x26, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x82, 0xb5, 0x18, 0x0e, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x8b, 0x01, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x09, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x10, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x1a, 0x0e,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01,
	0x2a, 0x82, 0xb5, 0x18, 0x13, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x02, 0x49, 0x64, 0x12, 0xb4, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2f,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x64, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x13, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x02, 0x49, 0x64, 0x12,
	0xb4, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x22, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x2f, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82,
	0xb5, 0x18, 0x13, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x02, 0x49, 0x64, 0x12, 0x9a, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x2a, 0x0e, 0x2f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x14, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x02, 0x49, 0x64, 0x12, 0xc6, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x29, 0x22, 0x24, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f,
	0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1e, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x61,
	0x64, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xb9, 0x01, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1f, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x09, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xce, 0x01, 0x0a, 0x13, 0x42, 0x75, 0x6c,
	0x6b, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x64,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b,
	0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22,
	0x22, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x5f, 0x62,
	0x75, 0x6c, 0x6b, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1f, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xcd, 0x01, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x55, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x1a, 0x27, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1f, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xcb, 0x01, 0x0a, 0x11, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x2a, 0x27, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x7d, 0x82, 0xb5, 0x18, 0x20, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x09, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xc7, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x34, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x82, 0xb5, 0x18, 0x15, 0x0a, 0x13, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61,
	0x64, 0x12, 0xd0, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a,
	0x82, 0xb5, 0x18, 0x20, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0xc3, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x23, 0x22, 0x1e, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x21, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12,
	0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xd6, 0x01, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2d, 0x1a, 0x28, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5,
	0x18, 0x21, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0xd4, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x2a, 0x28, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x22, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xb0, 0x01, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x1d,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x72, 0x65,
	0x61, 0x64, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xac, 0x01,
	0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x12, 0x26, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x28, 0x22, 0x23, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73,
	0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1d, 0x0a,
	0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x72, 0x65, 0x61,
	0x64, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xcc, 0x01, 0x0a,
	0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12,
	0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x36, 0x22, 0x34, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70,
	0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x82, 0xb5, 0x18, 0x1d, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xb0, 0x01, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x4f, 0x49, 0x44, 0x43, 0x41, 0x70, 0x70, 0x12, 0x28, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x49, 0x44, 0x43, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x4f, 0x49, 0x44, 0x43, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x61, 0x70, 0x70, 0x73, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1e,
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xac,
	0x01, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x41, 0x50, 0x49, 0x41, 0x70, 0x70, 0x12, 0x27, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x50, 0x49, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x41, 0x50, 0x49, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x61, 0x70, 0x70, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1e, 0x0a,
	0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xb1, 0x01,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x27, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x1a, 0x24, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x82,
	0xb5, 0x18, 0x1e, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0xdb, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x1a, 0x30, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6f,
	0x69, 0x64, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18,
	0x1e, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0xd7, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x34, 0x1a, 0x2f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73,
	0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1e, 0x0a, 0x11, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xc9, 0x01, 0x0a, 0x0d, 0x44, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x2b, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x22, 0x30,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1e, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xc9, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x22, 0x30, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82,
	0xb5, 0x18, 0x1e, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0xaf, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x12,
	0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x2a, 0x24, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d,
	0x82, 0xb5, 0x18, 0x1f, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x88, 0x02, 0x0a, 0x1a, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x38, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f,
	0x49, 0x44, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4d, 0x22,
	0x48, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1e,
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x84,
	0x02, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x37, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41,
	0x50, 0x49, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4c, 0x22, 0x47, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70,
	0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1e, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xbb, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x12, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12, 0x32,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x7d, 0x82, 0xb5, 0x18, 0x1d, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0xc3, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x36, 0x22, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f,
	0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1d, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xb6, 0x01, 0x0a, 0x09, 0x41, 0x64,
	0x64, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2e, 0x22, 0x29, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f,
	0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x3a, 0x01, 0x2a,
	0x82, 0xb5, 0x18, 0x1e, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0xc5, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x12, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70,
	0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x34, 0x2a, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70,
	0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f,
	0x7b, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x1e, 0x0a, 0x11, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12,
	0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0xc6, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x12, 0x28, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x14, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0xcb, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2a, 0x22, 0x25, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5,
	0x18, 0x1f, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0xba, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x14, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xb3,
	0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x15, 0x0a,
	0x13, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x12, 0xc7, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x1a, 0x28, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x15, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xdf,
	0x01, 0x0a, 0x16, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x34, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x22, 0x34,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x15, 0x0a, 0x13, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x12, 0xdf, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x34, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39,
	0x22, 0x34, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f,
	0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x72, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x15, 0x0a, 0x13, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x12, 0xc5, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x2a, 0x28, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x82, 0xb5, 0x18, 0x16, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xe3, 0x01, 0x0a, 0x1b, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x39, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x26, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x82, 0xb5, 0x18, 0x1b, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0xec, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x35, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3d, 0x22, 0x38, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a,
	0x82, 0xb5, 0x18, 0x1b, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12,
	0xdf, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x22, 0x30, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x3a, 0x01,
	0x2a, 0x82, 0xb5, 0x18, 0x1c, 0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x12, 0xf2, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x1a, 0x3a, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1c, 0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xf0, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x2a, 0x3a, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x7b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x1d, 0x0a, 0x1b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xb4, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2e,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x11, 0x0a,
	0x0f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0xa2, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a,
	0x82, 0xb5, 0x18, 0x11, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xa1, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73,
	0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x12, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xb5, 0x01, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x2d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x1a, 0x22, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x12, 0x0a,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x12, 0xcd, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22, 0x2e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x64, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x12, 0x0a,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x12, 0xcd, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22, 0x2e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x12, 0x0a,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x12, 0xb3, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x2a, 0x22, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x82, 0xb5, 0x18, 0x13, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xb2, 0x01, 0x0a, 0x13, 0x42, 0x75, 0x6c, 0x6b,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12,
	0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x12,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x5f, 0x62, 0x75,
	0x6c, 0x6b, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x13, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x8a, 0x01, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x9d, 0x01, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x49, 0x41, 0x4d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2d, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x41, 0x4d, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x41, 0x4d, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f,
	0x6f, 0x72, 0x67, 0x69, 0x61, 0x6d, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x97, 0x01, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2c, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x12, 0x0f, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0xb4, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x33, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x12, 0x17, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xbb, 0x01, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1c, 0x0a, 0x0c, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0c, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xc4, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x35, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x1a, 0x0f, 0x2f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x82,
	0xb5, 0x18, 0x1c, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x1a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0xba, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54,
	0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xb6, 0x01, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x49, 0x44, 0x50, 0x73, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x44, 0x50, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49,
	0x44, 0x50, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xc1, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x49, 0x44, 0x50,
	0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x31, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x44, 0x50, 0x54, 0x6f, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x44, 0x50, 0x54,
	0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x69, 0x64,
	0x70, 0x73, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x20, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x69, 0x64, 0x70, 0x12, 0xd6, 0x01, 0x0a, 0x18, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x49, 0x44, 0x50, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x44, 0x50, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x44, 0x50,
	0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a,
	0x1d, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x82, 0xb5,
	0x18, 0x20, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x1a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x69,
	0x64, 0x70, 0x12, 0xd8, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x28, 0x22, 0x26, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x82, 0xb5, 0x18, 0x0d,
	0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xea, 0x01,
	0x0a, 0x1c, 0x41, 0x64, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3a,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22,
	0x1e, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x2f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x3a,
	0x01, 0x2a, 0x82, 0xb5, 0x18, 0x24, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x1a, 0x14, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xfd, 0x01, 0x0a, 0x21, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x3f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x40, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x72, 0x6f, 0x6d,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x55, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25, 0x2f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x7b, 0x74, 0x79, 0x70,
	0x65, 0x7d, 0x82, 0xb5, 0x18, 0x24, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x1a, 0x14, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xd3, 0x01, 0x0a, 0x1b, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x39, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x24, 0x2f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x82,
	0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0xe6, 0x01, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x39, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22,
	0x1d, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x3a, 0x01,
	0x2a, 0x82, 0xb5, 0x18, 0x24, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x1a, 0x14, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xf9, 0x01, 0x0a, 0x20, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x46,
	0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3e,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x54, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x2a, 0x24, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x7b, 0x74, 0x79, 0x70, 0x65, 0x7d, 0x82, 0xb5, 0x18,
	0x24, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a,
	0x14, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xcc, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x39, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x69, 0x74, 0x79, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x72, 0x65, 0x61, 0x64, 0x12, 0xe9, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x40, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69,
	0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x82,
	0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0xfe, 0x01, 0x0a, 0x21, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x22, 0x1d, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79,
	0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x2a, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x1a, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x87, 0x02, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x42, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74,
	0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x1a, 0x1d, 0x2f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18,
	0x2a, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a,
	0x1a, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xef, 0x01, 0x0a, 0x26,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x44, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1d, 0x2f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xb0, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x61, 0x67, 0x65, 0x82,
	0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0xcd, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x39, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12,
	0x1e, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x61, 0x67, 0x65, 0x82,
	0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0xc6, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x38, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x2f, 0x61, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0e, 0x0a, 0x0c, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xcf, 0x01, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3b, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x16,
	0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x2f, 0x61, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0e, 0x0a, 0x0c, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xd3, 0x01, 0x0a, 0x1f,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x3d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x41, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x61, 0x67, 0x65, 0x82, 0xb5,
	0x18, 0x0f, 0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x9f, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12,
	0x11, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0xbc, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x35, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65,
	0x61, 0x64, 0x12, 0xb5, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x34, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c,
	0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x22, 0x11, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0e, 0x0a, 0x0c, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xbe, 0x01, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x37, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x1a, 0x11, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c,
	0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0e, 0x0a, 0x0c, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0xc2, 0x01, 0x0a, 0x1b,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x82, 0xb5, 0x18,
	0x0f, 0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x9f, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11,
	0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65,
	0x61, 0x64, 0x12, 0xbc, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x35,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61,
	0x64, 0x12, 0xc5, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x34, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x22, 0x11, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1e, 0x0a, 0x0c, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xce, 0x01, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x37, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x38, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x1a, 0x11, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1e, 0x0a, 0x0c, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xc2, 0x01, 0x0a, 0x1b, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x82, 0xb5, 0x18, 0x0f,
	0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x97, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xb5, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x33, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2f, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61,
	0x64, 0x12, 0xc2, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x33, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17,
	0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x82, 0xb5, 0x18, 0x1b, 0x0a, 0x0b, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xbb, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x22, 0x0f, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1c, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0xc4, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x35, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x1a, 0x0f, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1c, 0x0a,
	0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0c, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xd4, 0x01, 0x0a, 0x19,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x37, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2f, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a,
	0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1c, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x1a, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0xd2, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x6f,
	0x67, 0x6f, 0x12, 0x39, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x6f, 0x67,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x2a, 0x14, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x2f, 0x6c, 0x6f, 0x67, 0x6f, 0x82, 0xb5, 0x18, 0x1c, 0x0a, 0x0c, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xe3, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x61, 0x72, 0x6b, 0x12, 0x3d, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x44,
	0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x61,
	0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x2a, 0x19, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x2f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x64, 0x61, 0x72, 0x6b, 0x82, 0xb5, 0x18,
	0x1c, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a,
	0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xd2, 0x01,
	0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x39, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x63, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2f, 0x69, 0x63,
	0x6f, 0x6e, 0x82, 0xb5, 0x18, 0x1c, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x1a, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0xe3, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x63,
	0x6f, 0x6e, 0x44, 0x61, 0x72, 0x6b, 0x12, 0x3d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19, 0x2f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2f, 0x69,
	0x63, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x72, 0x6b, 0x82, 0xb5, 0x18, 0x1c, 0x0a, 0x0c, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x0c, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xd2, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x46, 0x6f, 0x6e, 0x74, 0x12, 0x39, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x46, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x46, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2f, 0x66, 0x6f, 0x6e, 0x74, 0x82, 0xb5, 0x18,
	0x1c, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a,
	0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xba, 0x01,
	0x0a, 0x19, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xc3, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x36, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x37, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x12, 0x1d, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x69, 0x6e, 0x69, 0x74, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x82,
	0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0xce, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49,
	0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x37,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x74, 0x65, 0x78, 0x74,
	0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x69, 0x6e, 0x69, 0x74, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x7d,
	0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61,
	0x64, 0x12, 0xdc, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49,
	0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x36,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x1a, 0x1d, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x2f, 0x7b, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x23, 0x0a, 0x0c, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x13, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0xe6, 0x01, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x41, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x69, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49,
	0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1d, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x2f, 0x7b, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xe7, 0x01, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x3f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x40, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x74, 0x65, 0x78,
	0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0xf2, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x40, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2f, 0x7b, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x80, 0x02, 0x0a, 0x21, 0x53, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3f,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x40, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x1a, 0x26, 0x2f, 0x74, 0x65, 0x78, 0x74,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x23, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x88, 0x02, 0x0a, 0x2c,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x4a, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x2a, 0x24, 0x2f,
	0x74, 0x65, 0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xdf, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3d, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x26, 0x12, 0x24, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xea, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3e, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xf8, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3d, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29,
	0x1a, 0x24, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x23, 0x0a, 0x0c, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x13, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x82, 0x02, 0x0a, 0x2a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x48, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x2a, 0x24, 0x2f, 0x74,
	0x65, 0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xdf, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3d, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26,
	0x12, 0x24, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x7b, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xea, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3e, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x72, 0x65, 0x61, 0x64, 0x12, 0xf8, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x1a,
	0x24, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x23, 0x0a, 0x0c, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x13, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x82, 0x02, 0x0a, 0x2a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x48,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x2a, 0x24, 0x2f, 0x74, 0x65,
	0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x7d, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0xe7, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3f, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x65, 0x64, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x82, 0xb5, 0x18,
	0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xf2,
	0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x40, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x30, 0x12, 0x2e, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x86, 0x02, 0x0a, 0x27, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x3f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x40, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x1a, 0x26, 0x2f, 0x74, 0x65, 0x78,
	0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x23, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x8a, 0x02, 0x0a,
	0x2c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x4a, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x2a, 0x26,
	0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x2f, 0x7b, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x94, 0x02, 0x0a, 0x2c, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x4a, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12, 0x32, 0x2f, 0x74, 0x65,
	0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x82,
	0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x9f, 0x02, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x4b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x7d, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65,
	0x61, 0x64, 0x12, 0xb3, 0x02, 0x0a, 0x32, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x12, 0x4a, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x1a, 0x32, 0x2f, 0x74, 0x65, 0x78,
	0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x3a, 0x01,
	0x2a, 0x82, 0xb5, 0x18, 0x23, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x1a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0xb7, 0x02, 0x0a, 0x37, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x55, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x56, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x2a, 0x32, 0x2f, 0x74, 0x65,
	0x78, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x82,
	0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0xad, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x74, 0x65, 0x78, 0x74,
	0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x7d, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65,
	0x61, 0x64, 0x12, 0xb8, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x12, 0x32, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x74,
	0x65, 0x78, 0x74, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0d,
	0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xc3, 0x01,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x31, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5,
	0x18, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x1a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0xcf, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x73, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x73, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x74, 0x65, 0x78,
	0x74, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x7b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x7d, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x49, 0x44, 0x50, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x69, 0x64, 0x70,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x0e, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x2e,
	0x69, 0x64, 0x70, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x90, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x73, 0x12, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x5f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x0e, 0x0a, 0x0c, 0x6f,
	0x72, 0x67, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0xa6, 0x01, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x4f, 0x49, 0x44, 0x43, 0x49, 0x44, 0x50, 0x12, 0x2b, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x4f, 0x49, 0x44, 0x43,
	0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x4f, 0x49, 0x44, 0x43, 0x49, 0x44, 0x50,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f,
	0x22, 0x0a, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x3a, 0x01, 0x2a, 0x82,
	0xb5, 0x18, 0x21, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x1a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x69, 0x64, 0x70, 0x12, 0xa2, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x4a,
	0x57, 0x54, 0x49, 0x44, 0x50, 0x12, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x4f, 0x72, 0x67, 0x4a, 0x57, 0x54, 0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67,
	0x4a, 0x57, 0x54, 0x49, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x09, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x6a, 0x77,
	0x74, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x21, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2e, 0x69, 0x64,
	0x70, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x69, 0x64, 0x70, 0x12, 0xbf, 0x01, 0x0a, 0x10, 0x44, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x12, 0x2e,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x21, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2e,
	0x69, 0x64, 0x70, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x69, 0x64, 0x70, 0x12, 0xbf, 0x01, 0x0a, 0x10,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50,
	0x12, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x69, 0x64, 0x70, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x21, 0x0a, 0x0d, 0x6f, 0x72,
	0x67, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x10, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x69, 0x64, 0x70, 0x12, 0xa4, 0x01,
	0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x12, 0x2a,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67,
	0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x2a,
	0x0e, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x82,
	0xb5, 0x18, 0x21, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x1a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x69, 0x64, 0x70, 0x12, 0xa7, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x49, 0x44, 0x50, 0x12, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x1a, 0x0e, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x21, 0x0a, 0x0d, 0x6f,
	0x72, 0x67, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x10, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x69, 0x64, 0x70, 0x12, 0xd1,
	0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x4f,
	0x49, 0x44, 0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x4f, 0x49,
	0x44, 0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x49, 0x44, 0x50, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x1a, 0x1a,
	0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6f,
	0x69, 0x64, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18,
	0x21, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x1a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x69,
	0x64, 0x70, 0x12, 0xcd, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x49, 0x44, 0x50, 0x4a, 0x57, 0x54, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x44,
	0x50, 0x4a, 0x57, 0x54, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x49, 0x44, 0x50, 0x4a, 0x57, 0x54, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x1a,
	0x19, 0x2f, 0x69, 0x64, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x6a, 0x77, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18,
	0x21, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x1a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x69,
	0x64, 0x70, 0x12, 0x9f, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x22, 0x10, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x5f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1a, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x07, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x93, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x82, 0xb5, 0x18, 0x1a,
	0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x61,
	0x64, 0x1a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1b, 0x0a, 0x10, 0x6f,
	0x72, 0x67, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xa0, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x1a, 0x0d, 0x2f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1b,
	0x0a, 0x10, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x1a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xb8, 0x01, 0x0a, 0x10,
	0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1b, 0x0a, 0x10, 0x6f, 0x72, 0x67,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xb8, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x2f, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a,
	0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1b, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0xa1, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x2a, 0x0d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x82, 0xb5, 0x18, 0x1c, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f,
	0x77, 0x12, 0x25, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x2f, 0x7b, 0x74, 0x79, 0x70, 0x65, 0x7d, 0x82, 0xb5, 0x18, 0x18, 0x0a, 0x0d, 0x6f, 0x72, 0x67,
	0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x9a, 0x01, 0x0a, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x6f,
	0x77, 0x12, 0x27, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x7a, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x14, 0x2f, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x7b, 0x74, 0x79, 0x70, 0x65, 0x7d, 0x2f, 0x5f, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x82, 0xb5, 0x18, 0x1a, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x2e, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0xc9, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2e, 0x22, 0x29, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x7b, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x7d, 0x2f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x7b, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x82,
	0xb5, 0x18, 0x19, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x1a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x97, 0x05, 0x5a,
	0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x6f, 0x73,
	0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x92, 0x41, 0xe6, 0x04,
	0x12, 0xdf, 0x02, 0x0a, 0x0e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20,
	0x41, 0x50, 0x49, 0x12, 0xbd, 0x01, 0x54, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x41, 0x50, 0x49, 0x20, 0x69, 0x73, 0x20, 0x61, 0x73, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x77, 0x68, 0x65,
	0x72, 0x65, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x6d,
	0x75, 0x74, 0x61, 0x74, 0x65, 0x20, 0x49, 0x41, 0x4d, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x20, 0x6c, 0x69, 0x6b, 0x65, 0x2c, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2c, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2c,
	0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2c, 0x20, 0x75, 0x73, 0x65, 0x72, 0x73, 0x20,
	0x61, 0x6e, 0x64, 0x20, 0x73, 0x6f, 0x20, 0x6f, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x79, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x65, 0x63, 0x65, 0x73,
	0x73, 0x61, 0x72, 0x79, 0x20, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x2e, 0x22, 0x3f, 0x0a, 0x1a, 0x43, 0x41, 0x4f, 0x53, 0x20, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x5a, 0x49, 0x54, 0x41, 0x44, 0x45,
	0x4c, 0x12, 0x12, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x2e, 0x63, 0x68, 0x1a, 0x0d, 0x68, 0x69, 0x40, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x63, 0x68, 0x2a, 0x47, 0x0a, 0x12, 0x41, 0x70, 0x61, 0x63, 0x68, 0x65, 0x20, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x32, 0x2e, 0x30, 0x12, 0x31, 0x68, 0x74, 0x74, 0x70,
	0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x61, 0x6f, 0x73, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x62, 0x6c, 0x6f, 0x62,
	0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x32, 0x03, 0x31,
	0x2e, 0x30, 0x1a, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e,
	0x63, 0x68, 0x22, 0x0e, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x76, 0x31, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x32, 0x1a, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x77, 0x65, 0x62, 0x2b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x3a, 0x1a, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x77, 0x65, 0x62, 0x2b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x3d, 0x0a, 0x22, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x62,
	0x6f, 0x75, 0x74, 0x20, 0x5a, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c, 0x12, 0x17, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x64, 0x6f, 0x63, 0x73, 0x2e, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2e, 0x63, 0x68, 0x7a, 0x20, 0x0a, 0x0f, 0x78, 0x2d, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x2d, 0x6f, 0x72, 0x67, 0x69, 0x64, 0x12, 0x0d, 0x1a, 0x0b, 0x79, 0x6f, 0x75, 0x72, 0x2d,
	0x6f, 0x72, 0x67, 0x2d, 0x69, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zitadel_management_proto_rawDescOnce sync.Once
	file_zitadel_management_proto_rawDescData = file_zitadel_management_proto_rawDesc
)

func file_zitadel_management_proto_rawDescGZIP() []byte {
	file_zitadel_management_proto_rawDescOnce.Do(func() {
		file_zitadel_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_management_proto_rawDescData)
	})
	return file_zitadel_management_proto_rawDescData
}

var file_zitadel_management_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_zitadel_management_proto_msgTypes = make([]protoimpl.MessageInfo, 463)
var file_zitadel_management_proto_goTypes = []interface{}{
	(SendHumanResetPasswordNotificationRequest_Type)(0),                     // 0: zitadel.management.v1.SendHumanResetPasswordNotificationRequest.Type
	(*HealthzRequest)(nil),                                                  // 1: zitadel.management.v1.HealthzRequest
	(*HealthzResponse)(nil),                                                 // 2: zitadel.management.v1.HealthzResponse
	(*GetOIDCInformationRequest)(nil),                                       // 3: zitadel.management.v1.GetOIDCInformationRequest
	(*GetOIDCInformationResponse)(nil),                                      // 4: zitadel.management.v1.GetOIDCInformationResponse
	(*GetIAMRequest)(nil),                                                   // 5: zitadel.management.v1.GetIAMRequest
	(*GetIAMResponse)(nil),                                                  // 6: zitadel.management.v1.GetIAMResponse
	(*GetSupportedLanguagesRequest)(nil),                                    // 7: zitadel.management.v1.GetSupportedLanguagesRequest
	(*GetSupportedLanguagesResponse)(nil),                                   // 8: zitadel.management.v1.GetSupportedLanguagesResponse
	(*GetUserByIDRequest)(nil),                                              // 9: zitadel.management.v1.GetUserByIDRequest
	(*GetUserByIDResponse)(nil),                                             // 10: zitadel.management.v1.GetUserByIDResponse
	(*GetUserByLoginNameGlobalRequest)(nil),                                 // 11: zitadel.management.v1.GetUserByLoginNameGlobalRequest
	(*GetUserByLoginNameGlobalResponse)(nil),                                // 12: zitadel.management.v1.GetUserByLoginNameGlobalResponse
	(*ListUsersRequest)(nil),                                                // 13: zitadel.management.v1.ListUsersRequest
	(*ListUsersResponse)(nil),                                               // 14: zitadel.management.v1.ListUsersResponse
	(*ListUserChangesRequest)(nil),                                          // 15: zitadel.management.v1.ListUserChangesRequest
	(*ListUserChangesResponse)(nil),                                         // 16: zitadel.management.v1.ListUserChangesResponse
	(*IsUserUniqueRequest)(nil),                                             // 17: zitadel.management.v1.IsUserUniqueRequest
	(*IsUserUniqueResponse)(nil),                                            // 18: zitadel.management.v1.IsUserUniqueResponse
	(*AddHumanUserRequest)(nil),                                             // 19: zitadel.management.v1.AddHumanUserRequest
	(*AddHumanUserResponse)(nil),                                            // 20: zitadel.management.v1.AddHumanUserResponse
	(*ImportHumanUserRequest)(nil),                                          // 21: zitadel.management.v1.ImportHumanUserRequest
	(*ImportHumanUserResponse)(nil),                                         // 22: zitadel.management.v1.ImportHumanUserResponse
	(*AddMachineUserRequest)(nil),                                           // 23: zitadel.management.v1.AddMachineUserRequest
	(*AddMachineUserResponse)(nil),                                          // 24: zitadel.management.v1.AddMachineUserResponse
	(*DeactivateUserRequest)(nil),                                           // 25: zitadel.management.v1.DeactivateUserRequest
	(*DeactivateUserResponse)(nil),                                          // 26: zitadel.management.v1.DeactivateUserResponse
	(*ReactivateUserRequest)(nil),                                           // 27: zitadel.management.v1.ReactivateUserRequest
	(*ReactivateUserResponse)(nil),                                          // 28: zitadel.management.v1.ReactivateUserResponse
	(*LockUserRequest)(nil),                                                 // 29: zitadel.management.v1.LockUserRequest
	(*LockUserResponse)(nil),                                                // 30: zitadel.management.v1.LockUserResponse
	(*UnlockUserRequest)(nil),                                               // 31: zitadel.management.v1.UnlockUserRequest
	(*UnlockUserResponse)(nil),                                              // 32: zitadel.management.v1.UnlockUserResponse
	(*RemoveUserRequest)(nil),                                               // 33: zitadel.management.v1.RemoveUserRequest
	(*RemoveUserResponse)(nil),                                              // 34: zitadel.management.v1.RemoveUserResponse
	(*UpdateUserNameRequest)(nil),                                           // 35: zitadel.management.v1.UpdateUserNameRequest
	(*UpdateUserNameResponse)(nil),                                          // 36: zitadel.management.v1.UpdateUserNameResponse
	(*ListUserMetadataRequest)(nil),                                         // 37: zitadel.management.v1.ListUserMetadataRequest
	(*ListUserMetadataResponse)(nil),                                        // 38: zitadel.management.v1.ListUserMetadataResponse
	(*GetUserMetadataRequest)(nil),                                          // 39: zitadel.management.v1.GetUserMetadataRequest
	(*GetUserMetadataResponse)(nil),                                         // 40: zitadel.management.v1.GetUserMetadataResponse
	(*SetUserMetadataRequest)(nil),                                          // 41: zitadel.management.v1.SetUserMetadataRequest
	(*SetUserMetadataResponse)(nil),                                         // 42: zitadel.management.v1.SetUserMetadataResponse
	(*BulkSetUserMetadataRequest)(nil),                                      // 43: zitadel.management.v1.BulkSetUserMetadataRequest
	(*BulkSetUserMetadataResponse)(nil),                                     // 44: zitadel.management.v1.BulkSetUserMetadataResponse
	(*RemoveUserMetadataRequest)(nil),                                       // 45: zitadel.management.v1.RemoveUserMetadataRequest
	(*RemoveUserMetadataResponse)(nil),                                      // 46: zitadel.management.v1.RemoveUserMetadataResponse
	(*BulkRemoveUserMetadataRequest)(nil),                                   // 47: zitadel.management.v1.BulkRemoveUserMetadataRequest
	(*BulkRemoveUserMetadataResponse)(nil),                                  // 48: zitadel.management.v1.BulkRemoveUserMetadataResponse
	(*GetHumanProfileRequest)(nil),                                          // 49: zitadel.management.v1.GetHumanProfileRequest
	(*GetHumanProfileResponse)(nil),                                         // 50: zitadel.management.v1.GetHumanProfileResponse
	(*UpdateHumanProfileRequest)(nil),                                       // 51: zitadel.management.v1.UpdateHumanProfileRequest
	(*UpdateHumanProfileResponse)(nil),                                      // 52: zitadel.management.v1.UpdateHumanProfileResponse
	(*GetHumanEmailRequest)(nil),                                            // 53: zitadel.management.v1.GetHumanEmailRequest
	(*GetHumanEmailResponse)(nil),                                           // 54: zitadel.management.v1.GetHumanEmailResponse
	(*UpdateHumanEmailRequest)(nil),                                         // 55: zitadel.management.v1.UpdateHumanEmailRequest
	(*UpdateHumanEmailResponse)(nil),                                        // 56: zitadel.management.v1.UpdateHumanEmailResponse
	(*ResendHumanInitializationRequest)(nil),                                // 57: zitadel.management.v1.ResendHumanInitializationRequest
	(*ResendHumanInitializationResponse)(nil),                               // 58: zitadel.management.v1.ResendHumanInitializationResponse
	(*ResendHumanEmailVerificationRequest)(nil),                             // 59: zitadel.management.v1.ResendHumanEmailVerificationRequest
	(*ResendHumanEmailVerificationResponse)(nil),                            // 60: zitadel.management.v1.ResendHumanEmailVerificationResponse
	(*GetHumanPhoneRequest)(nil),                                            // 61: zitadel.management.v1.GetHumanPhoneRequest
	(*GetHumanPhoneResponse)(nil),                                           // 62: zitadel.management.v1.GetHumanPhoneResponse
	(*UpdateHumanPhoneRequest)(nil),                                         // 63: zitadel.management.v1.UpdateHumanPhoneRequest
	(*UpdateHumanPhoneResponse)(nil),                                        // 64: zitadel.management.v1.UpdateHumanPhoneResponse
	(*RemoveHumanPhoneRequest)(nil),                                         // 65: zitadel.management.v1.RemoveHumanPhoneRequest
	(*RemoveHumanPhoneResponse)(nil),                                        // 66: zitadel.management.v1.RemoveHumanPhoneResponse
	(*ResendHumanPhoneVerificationRequest)(nil),                             // 67: zitadel.management.v1.ResendHumanPhoneVerificationRequest
	(*ResendHumanPhoneVerificationResponse)(nil),                            // 68: zitadel.management.v1.ResendHumanPhoneVerificationResponse
	(*RemoveHumanAvatarRequest)(nil),                                        // 69: zitadel.management.v1.RemoveHumanAvatarRequest
	(*RemoveHumanAvatarResponse)(nil),                                       // 70: zitadel.management.v1.RemoveHumanAvatarResponse
	(*SetHumanInitialPasswordRequest)(nil),                                  // 71: zitadel.management.v1.SetHumanInitialPasswordRequest
	(*SetHumanInitialPasswordResponse)(nil),                                 // 72: zitadel.management.v1.SetHumanInitialPasswordResponse
	(*SetHumanPasswordRequest)(nil),                                         // 73: zitadel.management.v1.SetHumanPasswordRequest
	(*SetHumanPasswordResponse)(nil),                                        // 74: zitadel.management.v1.SetHumanPasswordResponse
	(*SendHumanResetPasswordNotificationRequest)(nil),                       // 75: zitadel.management.v1.SendHumanResetPasswordNotificationRequest
	(*SendHumanResetPasswordNotificationResponse)(nil),                      // 76: zitadel.management.v1.SendHumanResetPasswordNotificationResponse
	(*ListHumanAuthFactorsRequest)(nil),                                     // 77: zitadel.management.v1.ListHumanAuthFactorsRequest
	(*ListHumanAuthFactorsResponse)(nil),                                    // 78: zitadel.management.v1.ListHumanAuthFactorsResponse
	(*RemoveHumanAuthFactorOTPRequest)(nil),                                 // 79: zitadel.management.v1.RemoveHumanAuthFactorOTPRequest
	(*RemoveHumanAuthFactorOTPResponse)(nil),                                // 80: zitadel.management.v1.RemoveHumanAuthFactorOTPResponse
	(*RemoveHumanAuthFactorU2FRequest)(nil),                                 // 81: zitadel.management.v1.RemoveHumanAuthFactorU2FRequest
	(*RemoveHumanAuthFactorU2FResponse)(nil),                                // 82: zitadel.management.v1.RemoveHumanAuthFactorU2FResponse
	(*ListHumanPasswordlessRequest)(nil),                                    // 83: zitadel.management.v1.ListHumanPasswordlessRequest
	(*ListHumanPasswordlessResponse)(nil),                                   // 84: zitadel.management.v1.ListHumanPasswordlessResponse
	(*AddPasswordlessRegistrationRequest)(nil),                              // 85: zitadel.management.v1.AddPasswordlessRegistrationRequest
	(*AddPasswordlessRegistrationResponse)(nil),                             // 86: zitadel.management.v1.AddPasswordlessRegistrationResponse
	(*SendPasswordlessRegistrationRequest)(nil),                             // 87: zitadel.management.v1.SendPasswordlessRegistrationRequest
	(*SendPasswordlessRegistrationResponse)(nil),                            // 88: zitadel.management.v1.SendPasswordlessRegistrationResponse
	(*RemoveHumanPasswordlessRequest)(nil),                                  // 89: zitadel.management.v1.RemoveHumanPasswordlessRequest
	(*RemoveHumanPasswordlessResponse)(nil),                                 // 90: zitadel.management.v1.RemoveHumanPasswordlessResponse
	(*UpdateMachineRequest)(nil),                                            // 91: zitadel.management.v1.UpdateMachineRequest
	(*UpdateMachineResponse)(nil),                                           // 92: zitadel.management.v1.UpdateMachineResponse
	(*GetMachineKeyByIDsRequest)(nil),                                       // 93: zitadel.management.v1.GetMachineKeyByIDsRequest
	(*GetMachineKeyByIDsResponse)(nil),                                      // 94: zitadel.management.v1.GetMachineKeyByIDsResponse
	(*ListMachineKeysRequest)(nil),                                          // 95: zitadel.management.v1.ListMachineKeysRequest
	(*ListMachineKeysResponse)(nil),                                         // 96: zitadel.management.v1.ListMachineKeysResponse
	(*AddMachineKeyRequest)(nil),                                            // 97: zitadel.management.v1.AddMachineKeyRequest
	(*AddMachineKeyResponse)(nil),                                           // 98: zitadel.management.v1.AddMachineKeyResponse
	(*RemoveMachineKeyRequest)(nil),                                         // 99: zitadel.management.v1.RemoveMachineKeyRequest
	(*RemoveMachineKeyResponse)(nil),                                        // 100: zitadel.management.v1.RemoveMachineKeyResponse
	(*ListHumanLinkedIDPsRequest)(nil),                                      // 101: zitadel.management.v1.ListHumanLinkedIDPsRequest
	(*ListHumanLinkedIDPsResponse)(nil),                                     // 102: zitadel.management.v1.ListHumanLinkedIDPsResponse
	(*RemoveHumanLinkedIDPRequest)(nil),                                     // 103: zitadel.management.v1.RemoveHumanLinkedIDPRequest
	(*RemoveHumanLinkedIDPResponse)(nil),                                    // 104: zitadel.management.v1.RemoveHumanLinkedIDPResponse
	(*ListUserMembershipsRequest)(nil),                                      // 105: zitadel.management.v1.ListUserMembershipsRequest
	(*ListUserMembershipsResponse)(nil),                                     // 106: zitadel.management.v1.ListUserMembershipsResponse
	(*GetMyOrgRequest)(nil),                                                 // 107: zitadel.management.v1.GetMyOrgRequest
	(*GetMyOrgResponse)(nil),                                                // 108: zitadel.management.v1.GetMyOrgResponse
	(*GetOrgByDomainGlobalRequest)(nil),                                     // 109: zitadel.management.v1.GetOrgByDomainGlobalRequest
	(*ListOrgChangesRequest)(nil),                                           // 110: zitadel.management.v1.ListOrgChangesRequest
	(*ListOrgChangesResponse)(nil),                                          // 111: zitadel.management.v1.ListOrgChangesResponse
	(*GetOrgByDomainGlobalResponse)(nil),                                    // 112: zitadel.management.v1.GetOrgByDomainGlobalResponse
	(*AddOrgRequest)(nil),                                                   // 113: zitadel.management.v1.AddOrgRequest
	(*AddOrgResponse)(nil),                                                  // 114: zitadel.management.v1.AddOrgResponse
	(*UpdateOrgRequest)(nil),                                                // 115: zitadel.management.v1.UpdateOrgRequest
	(*UpdateOrgResponse)(nil),                                               // 116: zitadel.management.v1.UpdateOrgResponse
	(*DeactivateOrgRequest)(nil),                                            // 117: zitadel.management.v1.DeactivateOrgRequest
	(*DeactivateOrgResponse)(nil),                                           // 118: zitadel.management.v1.DeactivateOrgResponse
	(*ReactivateOrgRequest)(nil),                                            // 119: zitadel.management.v1.ReactivateOrgRequest
	(*ReactivateOrgResponse)(nil),                                           // 120: zitadel.management.v1.ReactivateOrgResponse
	(*ListOrgDomainsRequest)(nil),                                           // 121: zitadel.management.v1.ListOrgDomainsRequest
	(*ListOrgDomainsResponse)(nil),                                          // 122: zitadel.management.v1.ListOrgDomainsResponse
	(*AddOrgDomainRequest)(nil),                                             // 123: zitadel.management.v1.AddOrgDomainRequest
	(*AddOrgDomainResponse)(nil),                                            // 124: zitadel.management.v1.AddOrgDomainResponse
	(*RemoveOrgDomainRequest)(nil),                                          // 125: zitadel.management.v1.RemoveOrgDomainRequest
	(*RemoveOrgDomainResponse)(nil),                                         // 126: zitadel.management.v1.RemoveOrgDomainResponse
	(*GenerateOrgDomainValidationRequest)(nil),                              // 127: zitadel.management.v1.GenerateOrgDomainValidationRequest
	(*GenerateOrgDomainValidationResponse)(nil),                             // 128: zitadel.management.v1.GenerateOrgDomainValidationResponse
	(*ValidateOrgDomainRequest)(nil),                                        // 129: zitadel.management.v1.ValidateOrgDomainRequest
	(*ValidateOrgDomainResponse)(nil),                                       // 130: zitadel.management.v1.ValidateOrgDomainResponse
	(*SetPrimaryOrgDomainRequest)(nil),                                      // 131: zitadel.management.v1.SetPrimaryOrgDomainRequest
	(*SetPrimaryOrgDomainResponse)(nil),                                     // 132: zitadel.management.v1.SetPrimaryOrgDomainResponse
	(*ListOrgMemberRolesRequest)(nil),                                       // 133: zitadel.management.v1.ListOrgMemberRolesRequest
	(*ListOrgMemberRolesResponse)(nil),                                      // 134: zitadel.management.v1.ListOrgMemberRolesResponse
	(*ListOrgMembersRequest)(nil),                                           // 135: zitadel.management.v1.ListOrgMembersRequest
	(*ListOrgMembersResponse)(nil),                                          // 136: zitadel.management.v1.ListOrgMembersResponse
	(*AddOrgMemberRequest)(nil),                                             // 137: zitadel.management.v1.AddOrgMemberRequest
	(*AddOrgMemberResponse)(nil),                                            // 138: zitadel.management.v1.AddOrgMemberResponse
	(*UpdateOrgMemberRequest)(nil),                                          // 139: zitadel.management.v1.UpdateOrgMemberRequest
	(*UpdateOrgMemberResponse)(nil),                                         // 140: zitadel.management.v1.UpdateOrgMemberResponse
	(*RemoveOrgMemberRequest)(nil),                                          // 141: zitadel.management.v1.RemoveOrgMemberRequest
	(*RemoveOrgMemberResponse)(nil),                                         // 142: zitadel.management.v1.RemoveOrgMemberResponse
	(*GetProjectByIDRequest)(nil),                                           // 143: zitadel.management.v1.GetProjectByIDRequest
	(*GetProjectByIDResponse)(nil),                                          // 144: zitadel.management.v1.GetProjectByIDResponse
	(*GetGrantedProjectByIDRequest)(nil),                                    // 145: zitadel.management.v1.GetGrantedProjectByIDRequest
	(*GetGrantedProjectByIDResponse)(nil),                                   // 146: zitadel.management.v1.GetGrantedProjectByIDResponse
	(*ListProjectsRequest)(nil),                                             // 147: zitadel.management.v1.ListProjectsRequest
	(*ListProjectsResponse)(nil),                                            // 148: zitadel.management.v1.ListProjectsResponse
	(*ListGrantedProjectsRequest)(nil),                                      // 149: zitadel.management.v1.ListGrantedProjectsRequest
	(*ListGrantedProjectsResponse)(nil),                                     // 150: zitadel.management.v1.ListGrantedProjectsResponse
	(*ListProjectChangesRequest)(nil),                                       // 151: zitadel.management.v1.ListProjectChangesRequest
	(*ListProjectChangesResponse)(nil),                                      // 152: zitadel.management.v1.ListProjectChangesResponse
	(*AddProjectRequest)(nil),                                               // 153: zitadel.management.v1.AddProjectRequest
	(*AddProjectResponse)(nil),                                              // 154: zitadel.management.v1.AddProjectResponse
	(*UpdateProjectRequest)(nil),                                            // 155: zitadel.management.v1.UpdateProjectRequest
	(*UpdateProjectResponse)(nil),                                           // 156: zitadel.management.v1.UpdateProjectResponse
	(*DeactivateProjectRequest)(nil),                                        // 157: zitadel.management.v1.DeactivateProjectRequest
	(*DeactivateProjectResponse)(nil),                                       // 158: zitadel.management.v1.DeactivateProjectResponse
	(*ReactivateProjectRequest)(nil),                                        // 159: zitadel.management.v1.ReactivateProjectRequest
	(*ReactivateProjectResponse)(nil),                                       // 160: zitadel.management.v1.ReactivateProjectResponse
	(*RemoveProjectRequest)(nil),                                            // 161: zitadel.management.v1.RemoveProjectRequest
	(*RemoveProjectResponse)(nil),                                           // 162: zitadel.management.v1.RemoveProjectResponse
	(*ListProjectMemberRolesRequest)(nil),                                   // 163: zitadel.management.v1.ListProjectMemberRolesRequest
	(*ListProjectMemberRolesResponse)(nil),                                  // 164: zitadel.management.v1.ListProjectMemberRolesResponse
	(*AddProjectRoleRequest)(nil),                                           // 165: zitadel.management.v1.AddProjectRoleRequest
	(*AddProjectRoleResponse)(nil),                                          // 166: zitadel.management.v1.AddProjectRoleResponse
	(*BulkAddProjectRolesRequest)(nil),                                      // 167: zitadel.management.v1.BulkAddProjectRolesRequest
	(*BulkAddProjectRolesResponse)(nil),                                     // 168: zitadel.management.v1.BulkAddProjectRolesResponse
	(*UpdateProjectRoleRequest)(nil),                                        // 169: zitadel.management.v1.UpdateProjectRoleRequest
	(*UpdateProjectRoleResponse)(nil),                                       // 170: zitadel.management.v1.UpdateProjectRoleResponse
	(*RemoveProjectRoleRequest)(nil),                                        // 171: zitadel.management.v1.RemoveProjectRoleRequest
	(*RemoveProjectRoleResponse)(nil),                                       // 172: zitadel.management.v1.RemoveProjectRoleResponse
	(*ListProjectRolesRequest)(nil),                                         // 173: zitadel.management.v1.ListProjectRolesRequest
	(*ListProjectRolesResponse)(nil),                                        // 174: zitadel.management.v1.ListProjectRolesResponse
	(*ListGrantedProjectRolesRequest)(nil),                                  // 175: zitadel.management.v1.ListGrantedProjectRolesRequest
	(*ListGrantedProjectRolesResponse)(nil),                                 // 176: zitadel.management.v1.ListGrantedProjectRolesResponse
	(*ListProjectMembersRequest)(nil),                                       // 177: zitadel.management.v1.ListProjectMembersRequest
	(*ListProjectMembersResponse)(nil),                                      // 178: zitadel.management.v1.ListProjectMembersResponse
	(*AddProjectMemberRequest)(nil),                                         // 179: zitadel.management.v1.AddProjectMemberRequest
	(*AddProjectMemberResponse)(nil),                                        // 180: zitadel.management.v1.AddProjectMemberResponse
	(*UpdateProjectMemberRequest)(nil),                                      // 181: zitadel.management.v1.UpdateProjectMemberRequest
	(*UpdateProjectMemberResponse)(nil),                                     // 182: zitadel.management.v1.UpdateProjectMemberResponse
	(*RemoveProjectMemberRequest)(nil),                                      // 183: zitadel.management.v1.RemoveProjectMemberRequest
	(*RemoveProjectMemberResponse)(nil),                                     // 184: zitadel.management.v1.RemoveProjectMemberResponse
	(*GetAppByIDRequest)(nil),                                               // 185: zitadel.management.v1.GetAppByIDRequest
	(*GetAppByIDResponse)(nil),                                              // 186: zitadel.management.v1.GetAppByIDResponse
	(*ListAppsRequest)(nil),                                                 // 187: zitadel.management.v1.ListAppsRequest
	(*ListAppsResponse)(nil),                                                // 188: zitadel.management.v1.ListAppsResponse
	(*ListAppChangesRequest)(nil),                                           // 189: zitadel.management.v1.ListAppChangesRequest
	(*ListAppChangesResponse)(nil),                                          // 190: zitadel.management.v1.ListAppChangesResponse
	(*AddOIDCAppRequest)(nil),                                               // 191: zitadel.management.v1.AddOIDCAppRequest
	(*AddOIDCAppResponse)(nil),                                              // 192: zitadel.management.v1.AddOIDCAppResponse
	(*AddAPIAppRequest)(nil),                                                // 193: zitadel.management.v1.AddAPIAppRequest
	(*AddAPIAppResponse)(nil),                                               // 194: zitadel.management.v1.AddAPIAppResponse
	(*UpdateAppRequest)(nil),                                                // 195: zitadel.management.v1.UpdateAppRequest
	(*UpdateAppResponse)(nil),                                               // 196: zitadel.management.v1.UpdateAppResponse
	(*UpdateOIDCAppConfigRequest)(nil),                                      // 197: zitadel.management.v1.UpdateOIDCAppConfigRequest
	(*UpdateOIDCAppConfigResponse)(nil),                                     // 198: zitadel.management.v1.UpdateOIDCAppConfigResponse
	(*UpdateAPIAppConfigRequest)(nil),                                       // 199: zitadel.management.v1.UpdateAPIAppConfigRequest
	(*UpdateAPIAppConfigResponse)(nil),                                      // 200: zitadel.management.v1.UpdateAPIAppConfigResponse
	(*DeactivateAppRequest)(nil),                                            // 201: zitadel.management.v1.DeactivateAppRequest
	(*DeactivateAppResponse)(nil),                                           // 202: zitadel.management.v1.DeactivateAppResponse
	(*ReactivateAppRequest)(nil),                                            // 203: zitadel.management.v1.ReactivateAppRequest
	(*ReactivateAppResponse)(nil),                                           // 204: zitadel.management.v1.ReactivateAppResponse
	(*RemoveAppRequest)(nil),                                                // 205: zitadel.management.v1.RemoveAppRequest
	(*RemoveAppResponse)(nil),                                               // 206: zitadel.management.v1.RemoveAppResponse
	(*RegenerateOIDCClientSecretRequest)(nil),                               // 207: zitadel.management.v1.RegenerateOIDCClientSecretRequest
	(*RegenerateOIDCClientSecretResponse)(nil),                              // 208: zitadel.management.v1.RegenerateOIDCClientSecretResponse
	(*RegenerateAPIClientSecretRequest)(nil),                                // 209: zitadel.management.v1.RegenerateAPIClientSecretRequest
	(*RegenerateAPIClientSecretResponse)(nil),                               // 210: zitadel.management.v1.RegenerateAPIClientSecretResponse
	(*GetAppKeyRequest)(nil),                                                // 211: zitadel.management.v1.GetAppKeyRequest
	(*GetAppKeyResponse)(nil),                                               // 212: zitadel.management.v1.GetAppKeyResponse
	(*ListAppKeysRequest)(nil),                                              // 213: zitadel.management.v1.ListAppKeysRequest
	(*ListAppKeysResponse)(nil),                                             // 214: zitadel.management.v1.ListAppKeysResponse
	(*AddAppKeyRequest)(nil),                                                // 215: zitadel.management.v1.AddAppKeyRequest
	(*AddAppKeyResponse)(nil),                                               // 216: zitadel.management.v1.AddAppKeyResponse
	(*RemoveAppKeyRequest)(nil),                                             // 217: zitadel.management.v1.RemoveAppKeyRequest
	(*RemoveAppKeyResponse)(nil),                                            // 218: zitadel.management.v1.RemoveAppKeyResponse
	(*GetProjectGrantByIDRequest)(nil),                                      // 219: zitadel.management.v1.GetProjectGrantByIDRequest
	(*GetProjectGrantByIDResponse)(nil),                                     // 220: zitadel.management.v1.GetProjectGrantByIDResponse
	(*ListProjectGrantsRequest)(nil),                                        // 221: zitadel.management.v1.ListProjectGrantsRequest
	(*ListProjectGrantsResponse)(nil),                                       // 222: zitadel.management.v1.ListProjectGrantsResponse
	(*ListAllProjectGrantsRequest)(nil),                                     // 223: zitadel.management.v1.ListAllProjectGrantsRequest
	(*ListAllProjectGrantsResponse)(nil),                                    // 224: zitadel.management.v1.ListAllProjectGrantsResponse
	(*AddProjectGrantRequest)(nil),                                          // 225: zitadel.management.v1.AddProjectGrantRequest
	(*AddProjectGrantResponse)(nil),                                         // 226: zitadel.management.v1.AddProjectGrantResponse
	(*UpdateProjectGrantRequest)(nil),                                       // 227: zitadel.management.v1.UpdateProjectGrantRequest
	(*UpdateProjectGrantResponse)(nil),                                      // 228: zitadel.management.v1.UpdateProjectGrantResponse
	(*DeactivateProjectGrantRequest)(nil),                                   // 229: zitadel.management.v1.DeactivateProjectGrantRequest
	(*DeactivateProjectGrantResponse)(nil),                                  // 230: zitadel.management.v1.DeactivateProjectGrantResponse
	(*ReactivateProjectGrantRequest)(nil),                                   // 231: zitadel.management.v1.ReactivateProjectGrantRequest
	(*ReactivateProjectGrantResponse)(nil),                                  // 232: zitadel.management.v1.ReactivateProjectGrantResponse
	(*RemoveProjectGrantRequest)(nil),                                       // 233: zitadel.management.v1.RemoveProjectGrantRequest
	(*RemoveProjectGrantResponse)(nil),                                      // 234: zitadel.management.v1.RemoveProjectGrantResponse
	(*ListProjectGrantMemberRolesRequest)(nil),                              // 235: zitadel.management.v1.ListProjectGrantMemberRolesRequest
	(*ListProjectGrantMemberRolesResponse)(nil),                             // 236: zitadel.management.v1.ListProjectGrantMemberRolesResponse
	(*ListProjectGrantMembersRequest)(nil),                                  // 237: zitadel.management.v1.ListProjectGrantMembersRequest
	(*ListProjectGrantMembersResponse)(nil),                                 // 238: zitadel.management.v1.ListProjectGrantMembersResponse
	(*AddProjectGrantMemberRequest)(nil),                                    // 239: zitadel.management.v1.AddProjectGrantMemberRequest
	(*AddProjectGrantMemberResponse)(nil),                                   // 240: zitadel.management.v1.AddProjectGrantMemberResponse
	(*UpdateProjectGrantMemberRequest)(nil),                                 // 241: zitadel.management.v1.UpdateProjectGrantMemberRequest
	(*UpdateProjectGrantMemberResponse)(nil),                                // 242: zitadel.management.v1.UpdateProjectGrantMemberResponse
	(*RemoveProjectGrantMemberRequest)(nil),                                 // 243: zitadel.management.v1.RemoveProjectGrantMemberRequest
	(*RemoveProjectGrantMemberResponse)(nil),                                // 244: zitadel.management.v1.RemoveProjectGrantMemberResponse
	(*GetUserGrantByIDRequest)(nil),                                         // 245: zitadel.management.v1.GetUserGrantByIDRequest
	(*GetUserGrantByIDResponse)(nil),                                        // 246: zitadel.management.v1.GetUserGrantByIDResponse
	(*ListUserGrantRequest)(nil),                                            // 247: zitadel.management.v1.ListUserGrantRequest
	(*ListUserGrantResponse)(nil),                                           // 248: zitadel.management.v1.ListUserGrantResponse
	(*AddUserGrantRequest)(nil),                                             // 249: zitadel.management.v1.AddUserGrantRequest
	(*AddUserGrantResponse)(nil),                                            // 250: zitadel.management.v1.AddUserGrantResponse
	(*UpdateUserGrantRequest)(nil),                                          // 251: zitadel.management.v1.UpdateUserGrantRequest
	(*UpdateUserGrantResponse)(nil),                                         // 252: zitadel.management.v1.UpdateUserGrantResponse
	(*DeactivateUserGrantRequest)(nil),                                      // 253: zitadel.management.v1.DeactivateUserGrantRequest
	(*DeactivateUserGrantResponse)(nil),                                     // 254: zitadel.management.v1.DeactivateUserGrantResponse
	(*ReactivateUserGrantRequest)(nil),                                      // 255: zitadel.management.v1.ReactivateUserGrantRequest
	(*ReactivateUserGrantResponse)(nil),                                     // 256: zitadel.management.v1.ReactivateUserGrantResponse
	(*RemoveUserGrantRequest)(nil),                                          // 257: zitadel.management.v1.RemoveUserGrantRequest
	(*RemoveUserGrantResponse)(nil),                                         // 258: zitadel.management.v1.RemoveUserGrantResponse
	(*BulkRemoveUserGrantRequest)(nil),                                      // 259: zitadel.management.v1.BulkRemoveUserGrantRequest
	(*BulkRemoveUserGrantResponse)(nil),                                     // 260: zitadel.management.v1.BulkRemoveUserGrantResponse
	(*GetFeaturesRequest)(nil),                                              // 261: zitadel.management.v1.GetFeaturesRequest
	(*GetFeaturesResponse)(nil),                                             // 262: zitadel.management.v1.GetFeaturesResponse
	(*GetOrgIAMPolicyRequest)(nil),                                          // 263: zitadel.management.v1.GetOrgIAMPolicyRequest
	(*GetOrgIAMPolicyResponse)(nil),                                         // 264: zitadel.management.v1.GetOrgIAMPolicyResponse
	(*GetLoginPolicyRequest)(nil),                                           // 265: zitadel.management.v1.GetLoginPolicyRequest
	(*GetLoginPolicyResponse)(nil),                                          // 266: zitadel.management.v1.GetLoginPolicyResponse
	(*GetDefaultLoginPolicyRequest)(nil),                                    // 267: zitadel.management.v1.GetDefaultLoginPolicyRequest
	(*GetDefaultLoginPolicyResponse)(nil),                                   // 268: zitadel.management.v1.GetDefaultLoginPolicyResponse
	(*AddCustomLoginPolicyRequest)(nil),                                     // 269: zitadel.management.v1.AddCustomLoginPolicyRequest
	(*AddCustomLoginPolicyResponse)(nil),                                    // 270: zitadel.management.v1.AddCustomLoginPolicyResponse
	(*UpdateCustomLoginPolicyRequest)(nil),                                  // 271: zitadel.management.v1.UpdateCustomLoginPolicyRequest
	(*UpdateCustomLoginPolicyResponse)(nil),                                 // 272: zitadel.management.v1.UpdateCustomLoginPolicyResponse
	(*ResetLoginPolicyToDefaultRequest)(nil),                                // 273: zitadel.management.v1.ResetLoginPolicyToDefaultRequest
	(*ResetLoginPolicyToDefaultResponse)(nil),                               // 274: zitadel.management.v1.ResetLoginPolicyToDefaultResponse
	(*ListLoginPolicyIDPsRequest)(nil),                                      // 275: zitadel.management.v1.ListLoginPolicyIDPsRequest
	(*ListLoginPolicyIDPsResponse)(nil),                                     // 276: zitadel.management.v1.ListLoginPolicyIDPsResponse
	(*AddIDPToLoginPolicyRequest)(nil),                                      // 277: zitadel.management.v1.AddIDPToLoginPolicyRequest
	(*AddIDPToLoginPolicyResponse)(nil),                                     // 278: zitadel.management.v1.AddIDPToLoginPolicyResponse
	(*RemoveIDPFromLoginPolicyRequest)(nil),                                 // 279: zitadel.management.v1.RemoveIDPFromLoginPolicyRequest
	(*RemoveIDPFromLoginPolicyResponse)(nil),                                // 280: zitadel.management.v1.RemoveIDPFromLoginPolicyResponse
	(*ListLoginPolicySecondFactorsRequest)(nil),                             // 281: zitadel.management.v1.ListLoginPolicySecondFactorsRequest
	(*ListLoginPolicySecondFactorsResponse)(nil),                            // 282: zitadel.management.v1.ListLoginPolicySecondFactorsResponse
	(*AddSecondFactorToLoginPolicyRequest)(nil),                             // 283: zitadel.management.v1.AddSecondFactorToLoginPolicyRequest
	(*AddSecondFactorToLoginPolicyResponse)(nil),                            // 284: zitadel.management.v1.AddSecondFactorToLoginPolicyResponse
	(*RemoveSecondFactorFromLoginPolicyRequest)(nil),                        // 285: zitadel.management.v1.RemoveSecondFactorFromLoginPolicyRequest
	(*RemoveSecondFactorFromLoginPolicyResponse)(nil),                       // 286: zitadel.management.v1.RemoveSecondFactorFromLoginPolicyResponse
	(*ListLoginPolicyMultiFactorsRequest)(nil),                              // 287: zitadel.management.v1.ListLoginPolicyMultiFactorsRequest
	(*ListLoginPolicyMultiFactorsResponse)(nil),                             // 288: zitadel.management.v1.ListLoginPolicyMultiFactorsResponse
	(*AddMultiFactorToLoginPolicyRequest)(nil),                              // 289: zitadel.management.v1.AddMultiFactorToLoginPolicyRequest
	(*AddMultiFactorToLoginPolicyResponse)(nil),                             // 290: zitadel.management.v1.AddMultiFactorToLoginPolicyResponse
	(*RemoveMultiFactorFromLoginPolicyRequest)(nil),                         // 291: zitadel.management.v1.RemoveMultiFactorFromLoginPolicyRequest
	(*RemoveMultiFactorFromLoginPolicyResponse)(nil),                        // 292: zitadel.management.v1.RemoveMultiFactorFromLoginPolicyResponse
	(*GetPasswordComplexityPolicyRequest)(nil),                              // 293: zitadel.management.v1.GetPasswordComplexityPolicyRequest
	(*GetPasswordComplexityPolicyResponse)(nil),                             // 294: zitadel.management.v1.GetPasswordComplexityPolicyResponse
	(*GetDefaultPasswordComplexityPolicyRequest)(nil),                       // 295: zitadel.management.v1.GetDefaultPasswordComplexityPolicyRequest
	(*GetDefaultPasswordComplexityPolicyResponse)(nil),                      // 296: zitadel.management.v1.GetDefaultPasswordComplexityPolicyResponse
	(*AddCustomPasswordComplexityPolicyRequest)(nil),                        // 297: zitadel.management.v1.AddCustomPasswordComplexityPolicyRequest
	(*AddCustomPasswordComplexityPolicyResponse)(nil),                       // 298: zitadel.management.v1.AddCustomPasswordComplexityPolicyResponse
	(*UpdateCustomPasswordComplexityPolicyRequest)(nil),                     // 299: zitadel.management.v1.UpdateCustomPasswordComplexityPolicyRequest
	(*UpdateCustomPasswordComplexityPolicyResponse)(nil),                    // 300: zitadel.management.v1.UpdateCustomPasswordComplexityPolicyResponse
	(*ResetPasswordComplexityPolicyToDefaultRequest)(nil),                   // 301: zitadel.management.v1.ResetPasswordComplexityPolicyToDefaultRequest
	(*ResetPasswordComplexityPolicyToDefaultResponse)(nil),                  // 302: zitadel.management.v1.ResetPasswordComplexityPolicyToDefaultResponse
	(*GetPasswordAgePolicyRequest)(nil),                                     // 303: zitadel.management.v1.GetPasswordAgePolicyRequest
	(*GetPasswordAgePolicyResponse)(nil),                                    // 304: zitadel.management.v1.GetPasswordAgePolicyResponse
	(*GetDefaultPasswordAgePolicyRequest)(nil),                              // 305: zitadel.management.v1.GetDefaultPasswordAgePolicyRequest
	(*GetDefaultPasswordAgePolicyResponse)(nil),                             // 306: zitadel.management.v1.GetDefaultPasswordAgePolicyResponse
	(*AddCustomPasswordAgePolicyRequest)(nil),                               // 307: zitadel.management.v1.AddCustomPasswordAgePolicyRequest
	(*AddCustomPasswordAgePolicyResponse)(nil),                              // 308: zitadel.management.v1.AddCustomPasswordAgePolicyResponse
	(*UpdateCustomPasswordAgePolicyRequest)(nil),                            // 309: zitadel.management.v1.UpdateCustomPasswordAgePolicyRequest
	(*UpdateCustomPasswordAgePolicyResponse)(nil),                           // 310: zitadel.management.v1.UpdateCustomPasswordAgePolicyResponse
	(*ResetPasswordAgePolicyToDefaultRequest)(nil),                          // 311: zitadel.management.v1.ResetPasswordAgePolicyToDefaultRequest
	(*ResetPasswordAgePolicyToDefaultResponse)(nil),                         // 312: zitadel.management.v1.ResetPasswordAgePolicyToDefaultResponse
	(*GetLockoutPolicyRequest)(nil),                                         // 313: zitadel.management.v1.GetLockoutPolicyRequest
	(*GetLockoutPolicyResponse)(nil),                                        // 314: zitadel.management.v1.GetLockoutPolicyResponse
	(*GetDefaultLockoutPolicyRequest)(nil),                                  // 315: zitadel.management.v1.GetDefaultLockoutPolicyRequest
	(*GetDefaultLockoutPolicyResponse)(nil),                                 // 316: zitadel.management.v1.GetDefaultLockoutPolicyResponse
	(*AddCustomLockoutPolicyRequest)(nil),                                   // 317: zitadel.management.v1.AddCustomLockoutPolicyRequest
	(*AddCustomLockoutPolicyResponse)(nil),                                  // 318: zitadel.management.v1.AddCustomLockoutPolicyResponse
	(*UpdateCustomLockoutPolicyRequest)(nil),                                // 319: zitadel.management.v1.UpdateCustomLockoutPolicyRequest
	(*UpdateCustomLockoutPolicyResponse)(nil),                               // 320: zitadel.management.v1.UpdateCustomLockoutPolicyResponse
	(*ResetLockoutPolicyToDefaultRequest)(nil),                              // 321: zitadel.management.v1.ResetLockoutPolicyToDefaultRequest
	(*ResetLockoutPolicyToDefaultResponse)(nil),                             // 322: zitadel.management.v1.ResetLockoutPolicyToDefaultResponse
	(*GetPrivacyPolicyRequest)(nil),                                         // 323: zitadel.management.v1.GetPrivacyPolicyRequest
	(*GetPrivacyPolicyResponse)(nil),                                        // 324: zitadel.management.v1.GetPrivacyPolicyResponse
	(*GetDefaultPrivacyPolicyRequest)(nil),                                  // 325: zitadel.management.v1.GetDefaultPrivacyPolicyRequest
	(*GetDefaultPrivacyPolicyResponse)(nil),                                 // 326: zitadel.management.v1.GetDefaultPrivacyPolicyResponse
	(*AddCustomPrivacyPolicyRequest)(nil),                                   // 327: zitadel.management.v1.AddCustomPrivacyPolicyRequest
	(*AddCustomPrivacyPolicyResponse)(nil),                                  // 328: zitadel.management.v1.AddCustomPrivacyPolicyResponse
	(*UpdateCustomPrivacyPolicyRequest)(nil),                                // 329: zitadel.management.v1.UpdateCustomPrivacyPolicyRequest
	(*UpdateCustomPrivacyPolicyResponse)(nil),                               // 330: zitadel.management.v1.UpdateCustomPrivacyPolicyResponse
	(*ResetPrivacyPolicyToDefaultRequest)(nil),                              // 331: zitadel.management.v1.ResetPrivacyPolicyToDefaultRequest
	(*ResetPrivacyPolicyToDefaultResponse)(nil),                             // 332: zitadel.management.v1.ResetPrivacyPolicyToDefaultResponse
	(*GetLabelPolicyRequest)(nil),                                           // 333: zitadel.management.v1.GetLabelPolicyRequest
	(*GetLabelPolicyResponse)(nil),                                          // 334: zitadel.management.v1.GetLabelPolicyResponse
	(*GetPreviewLabelPolicyRequest)(nil),                                    // 335: zitadel.management.v1.GetPreviewLabelPolicyRequest
	(*GetPreviewLabelPolicyResponse)(nil),                                   // 336: zitadel.management.v1.GetPreviewLabelPolicyResponse
	(*GetDefaultLabelPolicyRequest)(nil),                                    // 337: zitadel.management.v1.GetDefaultLabelPolicyRequest
	(*GetDefaultLabelPolicyResponse)(nil),                                   // 338: zitadel.management.v1.GetDefaultLabelPolicyResponse
	(*AddCustomLabelPolicyRequest)(nil),                                     // 339: zitadel.management.v1.AddCustomLabelPolicyRequest
	(*AddCustomLabelPolicyResponse)(nil),                                    // 340: zitadel.management.v1.AddCustomLabelPolicyResponse
	(*UpdateCustomLabelPolicyRequest)(nil),                                  // 341: zitadel.management.v1.UpdateCustomLabelPolicyRequest
	(*UpdateCustomLabelPolicyResponse)(nil),                                 // 342: zitadel.management.v1.UpdateCustomLabelPolicyResponse
	(*ActivateCustomLabelPolicyRequest)(nil),                                // 343: zitadel.management.v1.ActivateCustomLabelPolicyRequest
	(*ActivateCustomLabelPolicyResponse)(nil),                               // 344: zitadel.management.v1.ActivateCustomLabelPolicyResponse
	(*RemoveCustomLabelPolicyLogoRequest)(nil),                              // 345: zitadel.management.v1.RemoveCustomLabelPolicyLogoRequest
	(*RemoveCustomLabelPolicyLogoResponse)(nil),                             // 346: zitadel.management.v1.RemoveCustomLabelPolicyLogoResponse
	(*RemoveCustomLabelPolicyLogoDarkRequest)(nil),                          // 347: zitadel.management.v1.RemoveCustomLabelPolicyLogoDarkRequest
	(*RemoveCustomLabelPolicyLogoDarkResponse)(nil),                         // 348: zitadel.management.v1.RemoveCustomLabelPolicyLogoDarkResponse
	(*RemoveCustomLabelPolicyIconRequest)(nil),                              // 349: zitadel.management.v1.RemoveCustomLabelPolicyIconRequest
	(*RemoveCustomLabelPolicyIconResponse)(nil),                             // 350: zitadel.management.v1.RemoveCustomLabelPolicyIconResponse
	(*RemoveCustomLabelPolicyIconDarkRequest)(nil),                          // 351: zitadel.management.v1.RemoveCustomLabelPolicyIconDarkRequest
	(*RemoveCustomLabelPolicyIconDarkResponse)(nil),                         // 352: zitadel.management.v1.RemoveCustomLabelPolicyIconDarkResponse
	(*RemoveCustomLabelPolicyFontRequest)(nil),                              // 353: zitadel.management.v1.RemoveCustomLabelPolicyFontRequest
	(*RemoveCustomLabelPolicyFontResponse)(nil),                             // 354: zitadel.management.v1.RemoveCustomLabelPolicyFontResponse
	(*ResetLabelPolicyToDefaultRequest)(nil),                                // 355: zitadel.management.v1.ResetLabelPolicyToDefaultRequest
	(*ResetLabelPolicyToDefaultResponse)(nil),                               // 356: zitadel.management.v1.ResetLabelPolicyToDefaultResponse
	(*GetCustomInitMessageTextRequest)(nil),                                 // 357: zitadel.management.v1.GetCustomInitMessageTextRequest
	(*GetCustomInitMessageTextResponse)(nil),                                // 358: zitadel.management.v1.GetCustomInitMessageTextResponse
	(*GetDefaultInitMessageTextRequest)(nil),                                // 359: zitadel.management.v1.GetDefaultInitMessageTextRequest
	(*GetDefaultInitMessageTextResponse)(nil),                               // 360: zitadel.management.v1.GetDefaultInitMessageTextResponse
	(*SetCustomInitMessageTextRequest)(nil),                                 // 361: zitadel.management.v1.SetCustomInitMessageTextRequest
	(*SetCustomInitMessageTextResponse)(nil),                                // 362: zitadel.management.v1.SetCustomInitMessageTextResponse
	(*ResetCustomInitMessageTextToDefaultRequest)(nil),                      // 363: zitadel.management.v1.ResetCustomInitMessageTextToDefaultRequest
	(*ResetCustomInitMessageTextToDefaultResponse)(nil),                     // 364: zitadel.management.v1.ResetCustomInitMessageTextToDefaultResponse
	(*GetDefaultLoginTextsRequest)(nil),                                     // 365: zitadel.management.v1.GetDefaultLoginTextsRequest
	(*GetDefaultLoginTextsResponse)(nil),                                    // 366: zitadel.management.v1.GetDefaultLoginTextsResponse
	(*GetCustomLoginTextsRequest)(nil),                                      // 367: zitadel.management.v1.GetCustomLoginTextsRequest
	(*GetCustomLoginTextsResponse)(nil),                                     // 368: zitadel.management.v1.GetCustomLoginTextsResponse
	(*SetCustomLoginTextsRequest)(nil),                                      // 369: zitadel.management.v1.SetCustomLoginTextsRequest
	(*SetCustomLoginTextsResponse)(nil),                                     // 370: zitadel.management.v1.SetCustomLoginTextsResponse
	(*ResetCustomLoginTextsToDefaultRequest)(nil),                           // 371: zitadel.management.v1.ResetCustomLoginTextsToDefaultRequest
	(*ResetCustomLoginTextsToDefaultResponse)(nil),                          // 372: zitadel.management.v1.ResetCustomLoginTextsToDefaultResponse
	(*GetCustomPasswordResetMessageTextRequest)(nil),                        // 373: zitadel.management.v1.GetCustomPasswordResetMessageTextRequest
	(*GetCustomPasswordResetMessageTextResponse)(nil),                       // 374: zitadel.management.v1.GetCustomPasswordResetMessageTextResponse
	(*GetDefaultPasswordResetMessageTextRequest)(nil),                       // 375: zitadel.management.v1.GetDefaultPasswordResetMessageTextRequest
	(*GetDefaultPasswordResetMessageTextResponse)(nil),                      // 376: zitadel.management.v1.GetDefaultPasswordResetMessageTextResponse
	(*SetCustomPasswordResetMessageTextRequest)(nil),                        // 377: zitadel.management.v1.SetCustomPasswordResetMessageTextRequest
	(*SetCustomPasswordResetMessageTextResponse)(nil),                       // 378: zitadel.management.v1.SetCustomPasswordResetMessageTextResponse
	(*ResetCustomPasswordResetMessageTextToDefaultRequest)(nil),             // 379: zitadel.management.v1.ResetCustomPasswordResetMessageTextToDefaultRequest
	(*ResetCustomPasswordResetMessageTextToDefaultResponse)(nil),            // 380: zitadel.management.v1.ResetCustomPasswordResetMessageTextToDefaultResponse
	(*GetCustomVerifyEmailMessageTextRequest)(nil),                          // 381: zitadel.management.v1.GetCustomVerifyEmailMessageTextRequest
	(*GetCustomVerifyEmailMessageTextResponse)(nil),                         // 382: zitadel.management.v1.GetCustomVerifyEmailMessageTextResponse
	(*GetDefaultVerifyEmailMessageTextRequest)(nil),                         // 383: zitadel.management.v1.GetDefaultVerifyEmailMessageTextRequest
	(*GetDefaultVerifyEmailMessageTextResponse)(nil),                        // 384: zitadel.management.v1.GetDefaultVerifyEmailMessageTextResponse
	(*SetCustomVerifyEmailMessageTextRequest)(nil),                          // 385: zitadel.management.v1.SetCustomVerifyEmailMessageTextRequest
	(*SetCustomVerifyEmailMessageTextResponse)(nil),                         // 386: zitadel.management.v1.SetCustomVerifyEmailMessageTextResponse
	(*ResetCustomVerifyEmailMessageTextToDefaultRequest)(nil),               // 387: zitadel.management.v1.ResetCustomVerifyEmailMessageTextToDefaultRequest
	(*ResetCustomVerifyEmailMessageTextToDefaultResponse)(nil),              // 388: zitadel.management.v1.ResetCustomVerifyEmailMessageTextToDefaultResponse
	(*GetCustomVerifyPhoneMessageTextRequest)(nil),                          // 389: zitadel.management.v1.GetCustomVerifyPhoneMessageTextRequest
	(*GetCustomVerifyPhoneMessageTextResponse)(nil),                         // 390: zitadel.management.v1.GetCustomVerifyPhoneMessageTextResponse
	(*GetDefaultVerifyPhoneMessageTextRequest)(nil),                         // 391: zitadel.management.v1.GetDefaultVerifyPhoneMessageTextRequest
	(*GetDefaultVerifyPhoneMessageTextResponse)(nil),                        // 392: zitadel.management.v1.GetDefaultVerifyPhoneMessageTextResponse
	(*SetCustomVerifyPhoneMessageTextRequest)(nil),                          // 393: zitadel.management.v1.SetCustomVerifyPhoneMessageTextRequest
	(*SetCustomVerifyPhoneMessageTextResponse)(nil),                         // 394: zitadel.management.v1.SetCustomVerifyPhoneMessageTextResponse
	(*ResetCustomVerifyPhoneMessageTextToDefaultRequest)(nil),               // 395: zitadel.management.v1.ResetCustomVerifyPhoneMessageTextToDefaultRequest
	(*ResetCustomVerifyPhoneMessageTextToDefaultResponse)(nil),              // 396: zitadel.management.v1.ResetCustomVerifyPhoneMessageTextToDefaultResponse
	(*GetCustomDomainClaimedMessageTextRequest)(nil),                        // 397: zitadel.management.v1.GetCustomDomainClaimedMessageTextRequest
	(*GetCustomDomainClaimedMessageTextResponse)(nil),                       // 398: zitadel.management.v1.GetCustomDomainClaimedMessageTextResponse
	(*GetDefaultDomainClaimedMessageTextRequest)(nil),                       // 399: zitadel.management.v1.GetDefaultDomainClaimedMessageTextRequest
	(*GetDefaultDomainClaimedMessageTextResponse)(nil),                      // 400: zitadel.management.v1.GetDefaultDomainClaimedMessageTextResponse
	(*SetCustomDomainClaimedMessageTextRequest)(nil),                        // 401: zitadel.management.v1.SetCustomDomainClaimedMessageTextRequest
	(*SetCustomDomainClaimedMessageTextResponse)(nil),                       // 402: zitadel.management.v1.SetCustomDomainClaimedMessageTextResponse
	(*ResetCustomDomainClaimedMessageTextToDefaultRequest)(nil),             // 403: zitadel.management.v1.ResetCustomDomainClaimedMessageTextToDefaultRequest
	(*ResetCustomDomainClaimedMessageTextToDefaultResponse)(nil),            // 404: zitadel.management.v1.ResetCustomDomainClaimedMessageTextToDefaultResponse
	(*GetCustomPasswordlessRegistrationMessageTextRequest)(nil),             // 405: zitadel.management.v1.GetCustomPasswordlessRegistrationMessageTextRequest
	(*GetCustomPasswordlessRegistrationMessageTextResponse)(nil),            // 406: zitadel.management.v1.GetCustomPasswordlessRegistrationMessageTextResponse
	(*GetDefaultPasswordlessRegistrationMessageTextRequest)(nil),            // 407: zitadel.management.v1.GetDefaultPasswordlessRegistrationMessageTextRequest
	(*GetDefaultPasswordlessRegistrationMessageTextResponse)(nil),           // 408: zitadel.management.v1.GetDefaultPasswordlessRegistrationMessageTextResponse
	(*SetCustomPasswordlessRegistrationMessageTextRequest)(nil),             // 409: zitadel.management.v1.SetCustomPasswordlessRegistrationMessageTextRequest
	(*SetCustomPasswordlessRegistrationMessageTextResponse)(nil),            // 410: zitadel.management.v1.SetCustomPasswordlessRegistrationMessageTextResponse
	(*ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest)(nil),  // 411: zitadel.management.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest
	(*ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse)(nil), // 412: zitadel.management.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse
	(*GetOrgIDPByIDRequest)(nil),                                            // 413: zitadel.management.v1.GetOrgIDPByIDRequest
	(*GetOrgIDPByIDResponse)(nil),                                           // 414: zitadel.management.v1.GetOrgIDPByIDResponse
	(*ListOrgIDPsRequest)(nil),                                              // 415: zitadel.management.v1.ListOrgIDPsRequest
	(*IDPQuery)(nil),                                                        // 416: zitadel.management.v1.IDPQuery
	(*ListOrgIDPsResponse)(nil),                                             // 417: zitadel.management.v1.ListOrgIDPsResponse
	(*AddOrgOIDCIDPRequest)(nil),                                            // 418: zitadel.management.v1.AddOrgOIDCIDPRequest
	(*AddOrgOIDCIDPResponse)(nil),                                           // 419: zitadel.management.v1.AddOrgOIDCIDPResponse
	(*AddOrgJWTIDPRequest)(nil),                                             // 420: zitadel.management.v1.AddOrgJWTIDPRequest
	(*AddOrgJWTIDPResponse)(nil),                                            // 421: zitadel.management.v1.AddOrgJWTIDPResponse
	(*DeactivateOrgIDPRequest)(nil),                                         // 422: zitadel.management.v1.DeactivateOrgIDPRequest
	(*DeactivateOrgIDPResponse)(nil),                                        // 423: zitadel.management.v1.DeactivateOrgIDPResponse
	(*ReactivateOrgIDPRequest)(nil),                                         // 424: zitadel.management.v1.ReactivateOrgIDPRequest
	(*ReactivateOrgIDPResponse)(nil),                                        // 425: zitadel.management.v1.ReactivateOrgIDPResponse
	(*RemoveOrgIDPRequest)(nil),                                             // 426: zitadel.management.v1.RemoveOrgIDPRequest
	(*RemoveOrgIDPResponse)(nil),                                            // 427: zitadel.management.v1.RemoveOrgIDPResponse
	(*UpdateOrgIDPRequest)(nil),                                             // 428: zitadel.management.v1.UpdateOrgIDPRequest
	(*UpdateOrgIDPResponse)(nil),                                            // 429: zitadel.management.v1.UpdateOrgIDPResponse
	(*UpdateOrgIDPOIDCConfigRequest)(nil),                                   // 430: zitadel.management.v1.UpdateOrgIDPOIDCConfigRequest
	(*UpdateOrgIDPOIDCConfigResponse)(nil),                                  // 431: zitadel.management.v1.UpdateOrgIDPOIDCConfigResponse
	(*UpdateOrgIDPJWTConfigRequest)(nil),                                    // 432: zitadel.management.v1.UpdateOrgIDPJWTConfigRequest
	(*UpdateOrgIDPJWTConfigResponse)(nil),                                   // 433: zitadel.management.v1.UpdateOrgIDPJWTConfigResponse
	(*ListActionsRequest)(nil),                                              // 434: zitadel.management.v1.ListActionsRequest
	(*ActionQuery)(nil),                                                     // 435: zitadel.management.v1.ActionQuery
	(*ListActionsResponse)(nil),                                             // 436: zitadel.management.v1.ListActionsResponse
	(*CreateActionRequest)(nil),                                             // 437: zitadel.management.v1.CreateActionRequest
	(*CreateActionResponse)(nil),                                            // 438: zitadel.management.v1.CreateActionResponse
	(*GetActionRequest)(nil),                                                // 439: zitadel.management.v1.GetActionRequest
	(*GetActionResponse)(nil),                                               // 440: zitadel.management.v1.GetActionResponse
	(*UpdateActionRequest)(nil),                                             // 441: zitadel.management.v1.UpdateActionRequest
	(*UpdateActionResponse)(nil),                                            // 442: zitadel.management.v1.UpdateActionResponse
	(*DeleteActionRequest)(nil),                                             // 443: zitadel.management.v1.DeleteActionRequest
	(*DeleteActionResponse)(nil),                                            // 444: zitadel.management.v1.DeleteActionResponse
	(*DeactivateActionRequest)(nil),                                         // 445: zitadel.management.v1.DeactivateActionRequest
	(*DeactivateActionResponse)(nil),                                        // 446: zitadel.management.v1.DeactivateActionResponse
	(*ReactivateActionRequest)(nil),                                         // 447: zitadel.management.v1.ReactivateActionRequest
	(*ReactivateActionResponse)(nil),                                        // 448: zitadel.management.v1.ReactivateActionResponse
	(*GetFlowRequest)(nil),                                                  // 449: zitadel.management.v1.GetFlowRequest
	(*GetFlowResponse)(nil),                                                 // 450: zitadel.management.v1.GetFlowResponse
	(*ClearFlowRequest)(nil),                                                // 451: zitadel.management.v1.ClearFlowRequest
	(*ClearFlowResponse)(nil),                                               // 452: zitadel.management.v1.ClearFlowResponse
	(*SetTriggerActionsRequest)(nil),                                        // 453: zitadel.management.v1.SetTriggerActionsRequest
	(*SetTriggerActionsResponse)(nil),                                       // 454: zitadel.management.v1.SetTriggerActionsResponse
	(*AddHumanUserRequest_Profile)(nil),                                     // 455: zitadel.management.v1.AddHumanUserRequest.Profile
	(*AddHumanUserRequest_Email)(nil),                                       // 456: zitadel.management.v1.AddHumanUserRequest.Email
	(*AddHumanUserRequest_Phone)(nil),                                       // 457: zitadel.management.v1.AddHumanUserRequest.Phone
	(*ImportHumanUserRequest_Profile)(nil),                                  // 458: zitadel.management.v1.ImportHumanUserRequest.Profile
	(*ImportHumanUserRequest_Email)(nil),                                    // 459: zitadel.management.v1.ImportHumanUserRequest.Email
	(*ImportHumanUserRequest_Phone)(nil),                                    // 460: zitadel.management.v1.ImportHumanUserRequest.Phone
	(*ImportHumanUserResponse_PasswordlessRegistration)(nil),                // 461: zitadel.management.v1.ImportHumanUserResponse.PasswordlessRegistration
	(*BulkSetUserMetadataRequest_Metadata)(nil),                             // 462: zitadel.management.v1.BulkSetUserMetadataRequest.Metadata
	(*BulkAddProjectRolesRequest_Role)(nil),                                 // 463: zitadel.management.v1.BulkAddProjectRolesRequest.Role
	(*user.User)(nil),                                                       // 464: zitadel.user.v1.User
	(*object.ListQuery)(nil),                                                // 465: zitadel.v1.ListQuery
	(user.UserFieldName)(0),                                                 // 466: zitadel.user.v1.UserFieldName
	(*user.SearchQuery)(nil),                                                // 467: zitadel.user.v1.SearchQuery
	(*object.ListDetails)(nil),                                              // 468: zitadel.v1.ListDetails
	(*change.ChangeQuery)(nil),                                              // 469: zitadel.change.v1.ChangeQuery
	(*change.Change)(nil),                                                   // 470: zitadel.change.v1.Change
	(*object.ObjectDetails)(nil),                                            // 471: zitadel.v1.ObjectDetails
	(*metadata.MetadataQuery)(nil),                                          // 472: zitadel.metadata.v1.MetadataQuery
	(*metadata.Metadata)(nil),                                               // 473: zitadel.metadata.v1.Metadata
	(*user.Profile)(nil),                                                    // 474: zitadel.user.v1.Profile
	(user.Gender)(0),                                                        // 475: zitadel.user.v1.Gender
	(*user.Email)(nil),                                                      // 476: zitadel.user.v1.Email
	(*user.Phone)(nil),                                                      // 477: zitadel.user.v1.Phone
	(*user.AuthFactor)(nil),                                                 // 478: zitadel.user.v1.AuthFactor
	(*user.WebAuthNToken)(nil),                                              // 479: zitadel.user.v1.WebAuthNToken
	(*durationpb.Duration)(nil),                                             // 480: google.protobuf.Duration
	(*authn.Key)(nil),                                                       // 481: zitadel.authn.v1.Key
	(authn.KeyType)(0),                                                      // 482: zitadel.authn.v1.KeyType
	(*timestamppb.Timestamp)(nil),                                           // 483: google.protobuf.Timestamp
	(*idp.IDPUserLink)(nil),                                                 // 484: zitadel.idp.v1.IDPUserLink
	(*user.MembershipQuery)(nil),                                            // 485: zitadel.user.v1.MembershipQuery
	(*user.Membership)(nil),                                                 // 486: zitadel.user.v1.Membership
	(*org.Org)(nil),                                                         // 487: zitadel.org.v1.Org
	(*org.DomainSearchQuery)(nil),                                           // 488: zitadel.org.v1.DomainSearchQuery
	(*org.Domain)(nil),                                                      // 489: zitadel.org.v1.Domain
	(org.DomainValidationType)(0),                                           // 490: zitadel.org.v1.DomainValidationType
	(*member.SearchQuery)(nil),                                              // 491: zitadel.member.v1.SearchQuery
	(*member.Member)(nil),                                                   // 492: zitadel.member.v1.Member
	(*project.Project)(nil),                                                 // 493: zitadel.project.v1.Project
	(*project.GrantedProject)(nil),                                          // 494: zitadel.project.v1.GrantedProject
	(*project.ProjectQuery)(nil),                                            // 495: zitadel.project.v1.ProjectQuery
	(project.PrivateLabelingSetting)(0),                                     // 496: zitadel.project.v1.PrivateLabelingSetting
	(*project.RoleQuery)(nil),                                               // 497: zitadel.project.v1.RoleQuery
	(*project.Role)(nil),                                                    // 498: zitadel.project.v1.Role
	(*app.App)(nil),                                                         // 499: zitadel.app.v1.App
	(*app.AppQuery)(nil),                                                    // 500: zitadel.app.v1.AppQuery
	(app.OIDCResponseType)(0),                                               // 501: zitadel.app.v1.OIDCResponseType
	(app.OIDCGrantType)(0),                                                  // 502: zitadel.app.v1.OIDCGrantType
	(app.OIDCAppType)(0),                                                    // 503: zitadel.app.v1.OIDCAppType
	(app.OIDCAuthMethodType)(0),                                             // 504: zitadel.app.v1.OIDCAuthMethodType
	(app.OIDCVersion)(0),                                                    // 505: zitadel.app.v1.OIDCVersion
	(app.OIDCTokenType)(0),                                                  // 506: zitadel.app.v1.OIDCTokenType
	(*message.LocalizedMessage)(nil),                                        // 507: zitadel.v1.LocalizedMessage
	(app.APIAuthMethodType)(0),                                              // 508: zitadel.app.v1.APIAuthMethodType
	(*project.ProjectGrantQuery)(nil),                                       // 509: zitadel.project.v1.ProjectGrantQuery
	(*project.AllProjectGrantQuery)(nil),                                    // 510: zitadel.project.v1.AllProjectGrantQuery
	(*user.UserGrant)(nil),                                                  // 511: zitadel.user.v1.UserGrant
	(*user.UserGrantQuery)(nil),                                             // 512: zitadel.user.v1.UserGrantQuery
	(*features.Features)(nil),                                               // 513: zitadel.features.v1.Features
	(*policy.OrgIAMPolicy)(nil),                                             // 514: zitadel.policy.v1.OrgIAMPolicy
	(*policy.LoginPolicy)(nil),                                              // 515: zitadel.policy.v1.LoginPolicy
	(policy.PasswordlessType)(0),                                            // 516: zitadel.policy.v1.PasswordlessType
	(*idp.IDPLoginPolicyLink)(nil),                                          // 517: zitadel.idp.v1.IDPLoginPolicyLink
	(idp.IDPOwnerType)(0),                                                   // 518: zitadel.idp.v1.IDPOwnerType
	(policy.SecondFactorType)(0),                                            // 519: zitadel.policy.v1.SecondFactorType
	(policy.MultiFactorType)(0),                                             // 520: zitadel.policy.v1.MultiFactorType
	(*policy.PasswordComplexityPolicy)(nil),                                 // 521: zitadel.policy.v1.PasswordComplexityPolicy
	(*policy.PasswordAgePolicy)(nil),                                        // 522: zitadel.policy.v1.PasswordAgePolicy
	(*policy.LockoutPolicy)(nil),                                            // 523: zitadel.policy.v1.LockoutPolicy
	(*policy.PrivacyPolicy)(nil),                                            // 524: zitadel.policy.v1.PrivacyPolicy
	(*policy.LabelPolicy)(nil),                                              // 525: zitadel.policy.v1.LabelPolicy
	(*text.MessageCustomText)(nil),                                          // 526: zitadel.text.v1.MessageCustomText
	(*text.LoginCustomText)(nil),                                            // 527: zitadel.text.v1.LoginCustomText
	(*text.SelectAccountScreenText)(nil),                                    // 528: zitadel.text.v1.SelectAccountScreenText
	(*text.LoginScreenText)(nil),                                            // 529: zitadel.text.v1.LoginScreenText
	(*text.PasswordScreenText)(nil),                                         // 530: zitadel.text.v1.PasswordScreenText
	(*text.UsernameChangeScreenText)(nil),                                   // 531: zitadel.text.v1.UsernameChangeScreenText
	(*text.UsernameChangeDoneScreenText)(nil),                               // 532: zitadel.text.v1.UsernameChangeDoneScreenText
	(*text.InitPasswordScreenText)(nil),                                     // 533: zitadel.text.v1.InitPasswordScreenText
	(*text.InitPasswordDoneScreenText)(nil),                                 // 534: zitadel.text.v1.InitPasswordDoneScreenText
	(*text.EmailVerificationScreenText)(nil),                                // 535: zitadel.text.v1.EmailVerificationScreenText
	(*text.EmailVerificationDoneScreenText)(nil),                            // 536: zitadel.text.v1.EmailVerificationDoneScreenText
	(*text.InitializeUserScreenText)(nil),                                   // 537: zitadel.text.v1.InitializeUserScreenText
	(*text.InitializeUserDoneScreenText)(nil),                               // 538: zitadel.text.v1.InitializeUserDoneScreenText
	(*text.InitMFAPromptScreenText)(nil),                                    // 539: zitadel.text.v1.InitMFAPromptScreenText
	(*text.InitMFAOTPScreenText)(nil),                                       // 540: zitadel.text.v1.InitMFAOTPScreenText
	(*text.InitMFAU2FScreenText)(nil),                                       // 541: zitadel.text.v1.InitMFAU2FScreenText
	(*text.InitMFADoneScreenText)(nil),                                      // 542: zitadel.text.v1.InitMFADoneScreenText
	(*text.MFAProvidersText)(nil),                                           // 543: zitadel.text.v1.MFAProvidersText
	(*text.VerifyMFAOTPScreenText)(nil),                                     // 544: zitadel.text.v1.VerifyMFAOTPScreenText
	(*text.VerifyMFAU2FScreenText)(nil),                                     // 545: zitadel.text.v1.VerifyMFAU2FScreenText
	(*text.PasswordlessScreenText)(nil),                                     // 546: zitadel.text.v1.PasswordlessScreenText
	(*text.PasswordChangeScreenText)(nil),                                   // 547: zitadel.text.v1.PasswordChangeScreenText
	(*text.PasswordChangeDoneScreenText)(nil),                               // 548: zitadel.text.v1.PasswordChangeDoneScreenText
	(*text.PasswordResetDoneScreenText)(nil),                                // 549: zitadel.text.v1.PasswordResetDoneScreenText
	(*text.RegistrationOptionScreenText)(nil),                               // 550: zitadel.text.v1.RegistrationOptionScreenText
	(*text.RegistrationUserScreenText)(nil),                                 // 551: zitadel.text.v1.RegistrationUserScreenText
	(*text.RegistrationOrgScreenText)(nil),                                  // 552: zitadel.text.v1.RegistrationOrgScreenText
	(*text.LinkingUserDoneScreenText)(nil),                                  // 553: zitadel.text.v1.LinkingUserDoneScreenText
	(*text.ExternalUserNotFoundScreenText)(nil),                             // 554: zitadel.text.v1.ExternalUserNotFoundScreenText
	(*text.SuccessLoginScreenText)(nil),                                     // 555: zitadel.text.v1.SuccessLoginScreenText
	(*text.LogoutDoneScreenText)(nil),                                       // 556: zitadel.text.v1.LogoutDoneScreenText
	(*text.FooterText)(nil),                                                 // 557: zitadel.text.v1.FooterText
	(*text.PasswordlessPromptScreenText)(nil),                               // 558: zitadel.text.v1.PasswordlessPromptScreenText
	(*text.PasswordlessRegistrationScreenText)(nil),                         // 559: zitadel.text.v1.PasswordlessRegistrationScreenText
	(*text.PasswordlessRegistrationDoneScreenText)(nil),                     // 560: zitadel.text.v1.PasswordlessRegistrationDoneScreenText
	(*text.ExternalRegistrationUserOverviewScreenText)(nil),                 // 561: zitadel.text.v1.ExternalRegistrationUserOverviewScreenText
	(*idp.IDP)(nil),                                                         // 562: zitadel.idp.v1.IDP
	(idp.IDPFieldName)(0),                                                   // 563: zitadel.idp.v1.IDPFieldName
	(*idp.IDPIDQuery)(nil),                                                  // 564: zitadel.idp.v1.IDPIDQuery
	(*idp.IDPNameQuery)(nil),                                                // 565: zitadel.idp.v1.IDPNameQuery
	(*idp.IDPOwnerTypeQuery)(nil),                                           // 566: zitadel.idp.v1.IDPOwnerTypeQuery
	(idp.IDPStylingType)(0),                                                 // 567: zitadel.idp.v1.IDPStylingType
	(idp.OIDCMappingField)(0),                                               // 568: zitadel.idp.v1.OIDCMappingField
	(action.ActionFieldName)(0),                                             // 569: zitadel.action.v1.ActionFieldName
	(*action.ActionIDQuery)(nil),                                            // 570: zitadel.action.v1.ActionIDQuery
	(*action.ActionNameQuery)(nil),                                          // 571: zitadel.action.v1.ActionNameQuery
	(*action.ActionStateQuery)(nil),                                         // 572: zitadel.action.v1.ActionStateQuery
	(*action.Action)(nil),                                                   // 573: zitadel.action.v1.Action
	(action.FlowType)(0),                                                    // 574: zitadel.action.v1.FlowType
	(*action.Flow)(nil),                                                     // 575: zitadel.action.v1.Flow
	(action.TriggerType)(0),                                                 // 576: zitadel.action.v1.TriggerType
}
var file_zitadel_management_proto_depIdxs = []int32{
	464, // 0: zitadel.management.v1.GetUserByIDResponse.user:type_name -> zitadel.user.v1.User
	464, // 1: zitadel.management.v1.GetUserByLoginNameGlobalResponse.user:type_name -> zitadel.user.v1.User
	465, // 2: zitadel.management.v1.ListUsersRequest.query:type_name -> zitadel.v1.ListQuery
	466, // 3: zitadel.management.v1.ListUsersRequest.sorting_column:type_name -> zitadel.user.v1.UserFieldName
	467, // 4: zitadel.management.v1.ListUsersRequest.queries:type_name -> zitadel.user.v1.SearchQuery
	468, // 5: zitadel.management.v1.ListUsersResponse.details:type_name -> zitadel.v1.ListDetails
	466, // 6: zitadel.management.v1.ListUsersResponse.sorting_column:type_name -> zitadel.user.v1.UserFieldName
	464, // 7: zitadel.management.v1.ListUsersResponse.result:type_name -> zitadel.user.v1.User
	469, // 8: zitadel.management.v1.ListUserChangesRequest.query:type_name -> zitadel.change.v1.ChangeQuery
	470, // 9: zitadel.management.v1.ListUserChangesResponse.result:type_name -> zitadel.change.v1.Change
	455, // 10: zitadel.management.v1.AddHumanUserRequest.profile:type_name -> zitadel.management.v1.AddHumanUserRequest.Profile
	456, // 11: zitadel.management.v1.AddHumanUserRequest.email:type_name -> zitadel.management.v1.AddHumanUserRequest.Email
	457, // 12: zitadel.management.v1.AddHumanUserRequest.phone:type_name -> zitadel.management.v1.AddHumanUserRequest.Phone
	471, // 13: zitadel.management.v1.AddHumanUserResponse.details:type_name -> zitadel.v1.ObjectDetails
	458, // 14: zitadel.management.v1.ImportHumanUserRequest.profile:type_name -> zitadel.management.v1.ImportHumanUserRequest.Profile
	459, // 15: zitadel.management.v1.ImportHumanUserRequest.email:type_name -> zitadel.management.v1.ImportHumanUserRequest.Email
	460, // 16: zitadel.management.v1.ImportHumanUserRequest.phone:type_name -> zitadel.management.v1.ImportHumanUserRequest.Phone
	471, // 17: zitadel.management.v1.ImportHumanUserResponse.details:type_name -> zitadel.v1.ObjectDetails
	461, // 18: zitadel.management.v1.ImportHumanUserResponse.passwordless_registration:type_name -> zitadel.management.v1.ImportHumanUserResponse.PasswordlessRegistration
	471, // 19: zitadel.management.v1.AddMachineUserResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 20: zitadel.management.v1.DeactivateUserResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 21: zitadel.management.v1.ReactivateUserResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 22: zitadel.management.v1.LockUserResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 23: zitadel.management.v1.UnlockUserResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 24: zitadel.management.v1.RemoveUserResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 25: zitadel.management.v1.UpdateUserNameResponse.details:type_name -> zitadel.v1.ObjectDetails
	465, // 26: zitadel.management.v1.ListUserMetadataRequest.query:type_name -> zitadel.v1.ListQuery
	472, // 27: zitadel.management.v1.ListUserMetadataRequest.queries:type_name -> zitadel.metadata.v1.MetadataQuery
	468, // 28: zitadel.management.v1.ListUserMetadataResponse.details:type_name -> zitadel.v1.ListDetails
	473, // 29: zitadel.management.v1.ListUserMetadataResponse.result:type_name -> zitadel.metadata.v1.Metadata
	473, // 30: zitadel.management.v1.GetUserMetadataResponse.metadata:type_name -> zitadel.metadata.v1.Metadata
	471, // 31: zitadel.management.v1.SetUserMetadataResponse.details:type_name -> zitadel.v1.ObjectDetails
	462, // 32: zitadel.management.v1.BulkSetUserMetadataRequest.metadata:type_name -> zitadel.management.v1.BulkSetUserMetadataRequest.Metadata
	471, // 33: zitadel.management.v1.BulkSetUserMetadataResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 34: zitadel.management.v1.RemoveUserMetadataResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 35: zitadel.management.v1.BulkRemoveUserMetadataResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 36: zitadel.management.v1.GetHumanProfileResponse.details:type_name -> zitadel.v1.ObjectDetails
	474, // 37: zitadel.management.v1.GetHumanProfileResponse.profile:type_name -> zitadel.user.v1.Profile
	475, // 38: zitadel.management.v1.UpdateHumanProfileRequest.gender:type_name -> zitadel.user.v1.Gender
	471, // 39: zitadel.management.v1.UpdateHumanProfileResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 40: zitadel.management.v1.GetHumanEmailResponse.details:type_name -> zitadel.v1.ObjectDetails
	476, // 41: zitadel.management.v1.GetHumanEmailResponse.email:type_name -> zitadel.user.v1.Email
	471, // 42: zitadel.management.v1.UpdateHumanEmailResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 43: zitadel.management.v1.ResendHumanInitializationResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 44: zitadel.management.v1.ResendHumanEmailVerificationResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 45: zitadel.management.v1.GetHumanPhoneResponse.details:type_name -> zitadel.v1.ObjectDetails
	477, // 46: zitadel.management.v1.GetHumanPhoneResponse.phone:type_name -> zitadel.user.v1.Phone
	471, // 47: zitadel.management.v1.UpdateHumanPhoneResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 48: zitadel.management.v1.RemoveHumanPhoneResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 49: zitadel.management.v1.ResendHumanPhoneVerificationResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 50: zitadel.management.v1.RemoveHumanAvatarResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 51: zitadel.management.v1.SetHumanInitialPasswordResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 52: zitadel.management.v1.SetHumanPasswordResponse.details:type_name -> zitadel.v1.ObjectDetails
	0,   // 53: zitadel.management.v1.SendHumanResetPasswordNotificationRequest.type:type_name -> zitadel.management.v1.SendHumanResetPasswordNotificationRequest.Type
	471, // 54: zitadel.management.v1.SendHumanResetPasswordNotificationResponse.details:type_name -> zitadel.v1.ObjectDetails
	478, // 55: zitadel.management.v1.ListHumanAuthFactorsResponse.result:type_name -> zitadel.user.v1.AuthFactor
	471, // 56: zitadel.management.v1.RemoveHumanAuthFactorOTPResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 57: zitadel.management.v1.RemoveHumanAuthFactorU2FResponse.details:type_name -> zitadel.v1.ObjectDetails
	479, // 58: zitadel.management.v1.ListHumanPasswordlessResponse.result:type_name -> zitadel.user.v1.WebAuthNToken
	471, // 59: zitadel.management.v1.AddPasswordlessRegistrationResponse.details:type_name -> zitadel.v1.ObjectDetails
	480, // 60: zitadel.management.v1.AddPasswordlessRegistrationResponse.expiration:type_name -> google.protobuf.Duration
	471, // 61: zitadel.management.v1.SendPasswordlessRegistrationResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 62: zitadel.management.v1.RemoveHumanPasswordlessResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 63: zitadel.management.v1.UpdateMachineResponse.details:type_name -> zitadel.v1.ObjectDetails
	481, // 64: zitadel.management.v1.GetMachineKeyByIDsResponse.key:type_name -> zitadel.authn.v1.Key
	465, // 65: zitadel.management.v1.ListMachineKeysRequest.query:type_name -> zitadel.v1.ListQuery
	468, // 66: zitadel.management.v1.ListMachineKeysResponse.details:type_name -> zitadel.v1.ListDetails
	481, // 67: zitadel.management.v1.ListMachineKeysResponse.result:type_name -> zitadel.authn.v1.Key
	482, // 68: zitadel.management.v1.AddMachineKeyRequest.type:type_name -> zitadel.authn.v1.KeyType
	483, // 69: zitadel.management.v1.AddMachineKeyRequest.expiration_date:type_name -> google.protobuf.Timestamp
	471, // 70: zitadel.management.v1.AddMachineKeyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 71: zitadel.management.v1.RemoveMachineKeyResponse.details:type_name -> zitadel.v1.ObjectDetails
	465, // 72: zitadel.management.v1.ListHumanLinkedIDPsRequest.query:type_name -> zitadel.v1.ListQuery
	468, // 73: zitadel.management.v1.ListHumanLinkedIDPsResponse.details:type_name -> zitadel.v1.ListDetails
	484, // 74: zitadel.management.v1.ListHumanLinkedIDPsResponse.result:type_name -> zitadel.idp.v1.IDPUserLink
	471, // 75: zitadel.management.v1.RemoveHumanLinkedIDPResponse.details:type_name -> zitadel.v1.ObjectDetails
	465, // 76: zitadel.management.v1.ListUserMembershipsRequest.query:type_name -> zitadel.v1.ListQuery
	485, // 77: zitadel.management.v1.ListUserMembershipsRequest.queries:type_name -> zitadel.user.v1.MembershipQuery
	468, // 78: zitadel.management.v1.ListUserMembershipsResponse.details:type_name -> zitadel.v1.ListDetails
	486, // 79: zitadel.management.v1.ListUserMembershipsResponse.result:type_name -> zitadel.user.v1.Membership
	487, // 80: zitadel.management.v1.GetMyOrgResponse.org:type_name -> zitadel.org.v1.Org
	469, // 81: zitadel.management.v1.ListOrgChangesRequest.query:type_name -> zitadel.change.v1.ChangeQuery
	470, // 82: zitadel.management.v1.ListOrgChangesResponse.result:type_name -> zitadel.change.v1.Change
	487, // 83: zitadel.management.v1.GetOrgByDomainGlobalResponse.org:type_name -> zitadel.org.v1.Org
	471, // 84: zitadel.management.v1.AddOrgResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 85: zitadel.management.v1.UpdateOrgResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 86: zitadel.management.v1.DeactivateOrgResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 87: zitadel.management.v1.ReactivateOrgResponse.details:type_name -> zitadel.v1.ObjectDetails
	465, // 88: zitadel.management.v1.ListOrgDomainsRequest.query:type_name -> zitadel.v1.ListQuery
	488, // 89: zitadel.management.v1.ListOrgDomainsRequest.queries:type_name -> zitadel.org.v1.DomainSearchQuery
	468, // 90: zitadel.management.v1.ListOrgDomainsResponse.details:type_name -> zitadel.v1.ListDetails
	489, // 91: zitadel.management.v1.ListOrgDomainsResponse.result:type_name -> zitadel.org.v1.Domain
	471, // 92: zitadel.management.v1.AddOrgDomainResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 93: zitadel.management.v1.RemoveOrgDomainResponse.details:type_name -> zitadel.v1.ObjectDetails
	490, // 94: zitadel.management.v1.GenerateOrgDomainValidationRequest.type:type_name -> zitadel.org.v1.DomainValidationType
	471, // 95: zitadel.management.v1.ValidateOrgDomainResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 96: zitadel.management.v1.SetPrimaryOrgDomainResponse.details:type_name -> zitadel.v1.ObjectDetails
	465, // 97: zitadel.management.v1.ListOrgMembersRequest.query:type_name -> zitadel.v1.ListQuery
	491, // 98: zitadel.management.v1.ListOrgMembersRequest.queries:type_name -> zitadel.member.v1.SearchQuery
	468, // 99: zitadel.management.v1.ListOrgMembersResponse.details:type_name -> zitadel.v1.ListDetails
	492, // 100: zitadel.management.v1.ListOrgMembersResponse.result:type_name -> zitadel.member.v1.Member
	471, // 101: zitadel.management.v1.AddOrgMemberResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 102: zitadel.management.v1.UpdateOrgMemberResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 103: zitadel.management.v1.RemoveOrgMemberResponse.details:type_name -> zitadel.v1.ObjectDetails
	493, // 104: zitadel.management.v1.GetProjectByIDResponse.project:type_name -> zitadel.project.v1.Project
	494, // 105: zitadel.management.v1.GetGrantedProjectByIDResponse.granted_project:type_name -> zitadel.project.v1.GrantedProject
	465, // 106: zitadel.management.v1.ListProjectsRequest.query:type_name -> zitadel.v1.ListQuery
	495, // 107: zitadel.management.v1.ListProjectsRequest.queries:type_name -> zitadel.project.v1.ProjectQuery
	468, // 108: zitadel.management.v1.ListProjectsResponse.details:type_name -> zitadel.v1.ListDetails
	493, // 109: zitadel.management.v1.ListProjectsResponse.result:type_name -> zitadel.project.v1.Project
	465, // 110: zitadel.management.v1.ListGrantedProjectsRequest.query:type_name -> zitadel.v1.ListQuery
	495, // 111: zitadel.management.v1.ListGrantedProjectsRequest.queries:type_name -> zitadel.project.v1.ProjectQuery
	468, // 112: zitadel.management.v1.ListGrantedProjectsResponse.details:type_name -> zitadel.v1.ListDetails
	494, // 113: zitadel.management.v1.ListGrantedProjectsResponse.result:type_name -> zitadel.project.v1.GrantedProject
	469, // 114: zitadel.management.v1.ListProjectChangesRequest.query:type_name -> zitadel.change.v1.ChangeQuery
	470, // 115: zitadel.management.v1.ListProjectChangesResponse.result:type_name -> zitadel.change.v1.Change
	496, // 116: zitadel.management.v1.AddProjectRequest.private_labeling_setting:type_name -> zitadel.project.v1.PrivateLabelingSetting
	471, // 117: zitadel.management.v1.AddProjectResponse.details:type_name -> zitadel.v1.ObjectDetails
	496, // 118: zitadel.management.v1.UpdateProjectRequest.private_labeling_setting:type_name -> zitadel.project.v1.PrivateLabelingSetting
	471, // 119: zitadel.management.v1.UpdateProjectResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 120: zitadel.management.v1.DeactivateProjectResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 121: zitadel.management.v1.ReactivateProjectResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 122: zitadel.management.v1.RemoveProjectResponse.details:type_name -> zitadel.v1.ObjectDetails
	468, // 123: zitadel.management.v1.ListProjectMemberRolesResponse.details:type_name -> zitadel.v1.ListDetails
	471, // 124: zitadel.management.v1.AddProjectRoleResponse.details:type_name -> zitadel.v1.ObjectDetails
	463, // 125: zitadel.management.v1.BulkAddProjectRolesRequest.roles:type_name -> zitadel.management.v1.BulkAddProjectRolesRequest.Role
	471, // 126: zitadel.management.v1.BulkAddProjectRolesResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 127: zitadel.management.v1.UpdateProjectRoleResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 128: zitadel.management.v1.RemoveProjectRoleResponse.details:type_name -> zitadel.v1.ObjectDetails
	465, // 129: zitadel.management.v1.ListProjectRolesRequest.query:type_name -> zitadel.v1.ListQuery
	497, // 130: zitadel.management.v1.ListProjectRolesRequest.queries:type_name -> zitadel.project.v1.RoleQuery
	468, // 131: zitadel.management.v1.ListProjectRolesResponse.details:type_name -> zitadel.v1.ListDetails
	498, // 132: zitadel.management.v1.ListProjectRolesResponse.result:type_name -> zitadel.project.v1.Role
	465, // 133: zitadel.management.v1.ListGrantedProjectRolesRequest.query:type_name -> zitadel.v1.ListQuery
	497, // 134: zitadel.management.v1.ListGrantedProjectRolesRequest.queries:type_name -> zitadel.project.v1.RoleQuery
	468, // 135: zitadel.management.v1.ListGrantedProjectRolesResponse.details:type_name -> zitadel.v1.ListDetails
	498, // 136: zitadel.management.v1.ListGrantedProjectRolesResponse.result:type_name -> zitadel.project.v1.Role
	465, // 137: zitadel.management.v1.ListProjectMembersRequest.query:type_name -> zitadel.v1.ListQuery
	491, // 138: zitadel.management.v1.ListProjectMembersRequest.queries:type_name -> zitadel.member.v1.SearchQuery
	468, // 139: zitadel.management.v1.ListProjectMembersResponse.details:type_name -> zitadel.v1.ListDetails
	492, // 140: zitadel.management.v1.ListProjectMembersResponse.result:type_name -> zitadel.member.v1.Member
	471, // 141: zitadel.management.v1.AddProjectMemberResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 142: zitadel.management.v1.UpdateProjectMemberResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 143: zitadel.management.v1.RemoveProjectMemberResponse.details:type_name -> zitadel.v1.ObjectDetails
	499, // 144: zitadel.management.v1.GetAppByIDResponse.app:type_name -> zitadel.app.v1.App
	465, // 145: zitadel.management.v1.ListAppsRequest.query:type_name -> zitadel.v1.ListQuery
	500, // 146: zitadel.management.v1.ListAppsRequest.queries:type_name -> zitadel.app.v1.AppQuery
	468, // 147: zitadel.management.v1.ListAppsResponse.details:type_name -> zitadel.v1.ListDetails
	499, // 148: zitadel.management.v1.ListAppsResponse.result:type_name -> zitadel.app.v1.App
	469, // 149: zitadel.management.v1.ListAppChangesRequest.query:type_name -> zitadel.change.v1.ChangeQuery
	470, // 150: zitadel.management.v1.ListAppChangesResponse.result:type_name -> zitadel.change.v1.Change
	501, // 151: zitadel.management.v1.AddOIDCAppRequest.response_types:type_name -> zitadel.app.v1.OIDCResponseType
	502, // 152: zitadel.management.v1.AddOIDCAppRequest.grant_types:type_name -> zitadel.app.v1.OIDCGrantType
	503, // 153: zitadel.management.v1.AddOIDCAppRequest.app_type:type_name -> zitadel.app.v1.OIDCAppType
	504, // 154: zitadel.management.v1.AddOIDCAppRequest.auth_method_type:type_name -> zitadel.app.v1.OIDCAuthMethodType
	505, // 155: zitadel.management.v1.AddOIDCAppRequest.version:type_name -> zitadel.app.v1.OIDCVersion
	506, // 156: zitadel.management.v1.AddOIDCAppRequest.access_token_type:type_name -> zitadel.app.v1.OIDCTokenType
	480, // 157: zitadel.management.v1.AddOIDCAppRequest.clock_skew:type_name -> google.protobuf.Duration
	471, // 158: zitadel.management.v1.AddOIDCAppResponse.details:type_name -> zitadel.v1.ObjectDetails
	507, // 159: zitadel.management.v1.AddOIDCAppResponse.compliance_problems:type_name -> zitadel.v1.LocalizedMessage
	508, // 160: zitadel.management.v1.AddAPIAppRequest.auth_method_type:type_name -> zitadel.app.v1.APIAuthMethodType
	471, // 161: zitadel.management.v1.AddAPIAppResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 162: zitadel.management.v1.UpdateAppResponse.details:type_name -> zitadel.v1.ObjectDetails
	501, // 163: zitadel.management.v1.UpdateOIDCAppConfigRequest.response_types:type_name -> zitadel.app.v1.OIDCResponseType
	502, // 164: zitadel.management.v1.UpdateOIDCAppConfigRequest.grant_types:type_name -> zitadel.app.v1.OIDCGrantType
	503, // 165: zitadel.management.v1.UpdateOIDCAppConfigRequest.app_type:type_name -> zitadel.app.v1.OIDCAppType
	504, // 166: zitadel.management.v1.UpdateOIDCAppConfigRequest.auth_method_type:type_name -> zitadel.app.v1.OIDCAuthMethodType
	506, // 167: zitadel.management.v1.UpdateOIDCAppConfigRequest.access_token_type:type_name -> zitadel.app.v1.OIDCTokenType
	480, // 168: zitadel.management.v1.UpdateOIDCAppConfigRequest.clock_skew:type_name -> google.protobuf.Duration
	471, // 169: zitadel.management.v1.UpdateOIDCAppConfigResponse.details:type_name -> zitadel.v1.ObjectDetails
	508, // 170: zitadel.management.v1.UpdateAPIAppConfigRequest.auth_method_type:type_name -> zitadel.app.v1.APIAuthMethodType
	471, // 171: zitadel.management.v1.UpdateAPIAppConfigResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 172: zitadel.management.v1.DeactivateAppResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 173: zitadel.management.v1.ReactivateAppResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 174: zitadel.management.v1.RemoveAppResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 175: zitadel.management.v1.RegenerateOIDCClientSecretResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 176: zitadel.management.v1.RegenerateAPIClientSecretResponse.details:type_name -> zitadel.v1.ObjectDetails
	481, // 177: zitadel.management.v1.GetAppKeyResponse.key:type_name -> zitadel.authn.v1.Key
	465, // 178: zitadel.management.v1.ListAppKeysRequest.query:type_name -> zitadel.v1.ListQuery
	468, // 179: zitadel.management.v1.ListAppKeysResponse.details:type_name -> zitadel.v1.ListDetails
	481, // 180: zitadel.management.v1.ListAppKeysResponse.result:type_name -> zitadel.authn.v1.Key
	482, // 181: zitadel.management.v1.AddAppKeyRequest.type:type_name -> zitadel.authn.v1.KeyType
	483, // 182: zitadel.management.v1.AddAppKeyRequest.expiration_date:type_name -> google.protobuf.Timestamp
	471, // 183: zitadel.management.v1.AddAppKeyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 184: zitadel.management.v1.RemoveAppKeyResponse.details:type_name -> zitadel.v1.ObjectDetails
	494, // 185: zitadel.management.v1.GetProjectGrantByIDResponse.project_grant:type_name -> zitadel.project.v1.GrantedProject
	465, // 186: zitadel.management.v1.ListProjectGrantsRequest.query:type_name -> zitadel.v1.ListQuery
	509, // 187: zitadel.management.v1.ListProjectGrantsRequest.queries:type_name -> zitadel.project.v1.ProjectGrantQuery
	468, // 188: zitadel.management.v1.ListProjectGrantsResponse.details:type_name -> zitadel.v1.ListDetails
	494, // 189: zitadel.management.v1.ListProjectGrantsResponse.result:type_name -> zitadel.project.v1.GrantedProject
	465, // 190: zitadel.management.v1.ListAllProjectGrantsRequest.query:type_name -> zitadel.v1.ListQuery
	510, // 191: zitadel.management.v1.ListAllProjectGrantsRequest.queries:type_name -> zitadel.project.v1.AllProjectGrantQuery
	468, // 192: zitadel.management.v1.ListAllProjectGrantsResponse.details:type_name -> zitadel.v1.ListDetails
	494, // 193: zitadel.management.v1.ListAllProjectGrantsResponse.result:type_name -> zitadel.project.v1.GrantedProject
	471, // 194: zitadel.management.v1.AddProjectGrantResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 195: zitadel.management.v1.UpdateProjectGrantResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 196: zitadel.management.v1.DeactivateProjectGrantResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 197: zitadel.management.v1.ReactivateProjectGrantResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 198: zitadel.management.v1.RemoveProjectGrantResponse.details:type_name -> zitadel.v1.ObjectDetails
	465, // 199: zitadel.management.v1.ListProjectGrantMemberRolesRequest.query:type_name -> zitadel.v1.ListQuery
	468, // 200: zitadel.management.v1.ListProjectGrantMemberRolesResponse.details:type_name -> zitadel.v1.ListDetails
	465, // 201: zitadel.management.v1.ListProjectGrantMembersRequest.query:type_name -> zitadel.v1.ListQuery
	491, // 202: zitadel.management.v1.ListProjectGrantMembersRequest.queries:type_name -> zitadel.member.v1.SearchQuery
	468, // 203: zitadel.management.v1.ListProjectGrantMembersResponse.details:type_name -> zitadel.v1.ListDetails
	492, // 204: zitadel.management.v1.ListProjectGrantMembersResponse.result:type_name -> zitadel.member.v1.Member
	471, // 205: zitadel.management.v1.AddProjectGrantMemberResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 206: zitadel.management.v1.UpdateProjectGrantMemberResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 207: zitadel.management.v1.RemoveProjectGrantMemberResponse.details:type_name -> zitadel.v1.ObjectDetails
	511, // 208: zitadel.management.v1.GetUserGrantByIDResponse.user_grant:type_name -> zitadel.user.v1.UserGrant
	465, // 209: zitadel.management.v1.ListUserGrantRequest.query:type_name -> zitadel.v1.ListQuery
	512, // 210: zitadel.management.v1.ListUserGrantRequest.queries:type_name -> zitadel.user.v1.UserGrantQuery
	468, // 211: zitadel.management.v1.ListUserGrantResponse.details:type_name -> zitadel.v1.ListDetails
	511, // 212: zitadel.management.v1.ListUserGrantResponse.result:type_name -> zitadel.user.v1.UserGrant
	471, // 213: zitadel.management.v1.AddUserGrantResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 214: zitadel.management.v1.UpdateUserGrantResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 215: zitadel.management.v1.DeactivateUserGrantResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 216: zitadel.management.v1.ReactivateUserGrantResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 217: zitadel.management.v1.RemoveUserGrantResponse.details:type_name -> zitadel.v1.ObjectDetails
	513, // 218: zitadel.management.v1.GetFeaturesResponse.features:type_name -> zitadel.features.v1.Features
	514, // 219: zitadel.management.v1.GetOrgIAMPolicyResponse.policy:type_name -> zitadel.policy.v1.OrgIAMPolicy
	515, // 220: zitadel.management.v1.GetLoginPolicyResponse.policy:type_name -> zitadel.policy.v1.LoginPolicy
	515, // 221: zitadel.management.v1.GetDefaultLoginPolicyResponse.policy:type_name -> zitadel.policy.v1.LoginPolicy
	516, // 222: zitadel.management.v1.AddCustomLoginPolicyRequest.passwordless_type:type_name -> zitadel.policy.v1.PasswordlessType
	471, // 223: zitadel.management.v1.AddCustomLoginPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	516, // 224: zitadel.management.v1.UpdateCustomLoginPolicyRequest.passwordless_type:type_name -> zitadel.policy.v1.PasswordlessType
	471, // 225: zitadel.management.v1.UpdateCustomLoginPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 226: zitadel.management.v1.ResetLoginPolicyToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	465, // 227: zitadel.management.v1.ListLoginPolicyIDPsRequest.query:type_name -> zitadel.v1.ListQuery
	468, // 228: zitadel.management.v1.ListLoginPolicyIDPsResponse.details:type_name -> zitadel.v1.ListDetails
	517, // 229: zitadel.management.v1.ListLoginPolicyIDPsResponse.result:type_name -> zitadel.idp.v1.IDPLoginPolicyLink
	518, // 230: zitadel.management.v1.AddIDPToLoginPolicyRequest.ownerType:type_name -> zitadel.idp.v1.IDPOwnerType
	471, // 231: zitadel.management.v1.AddIDPToLoginPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 232: zitadel.management.v1.RemoveIDPFromLoginPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	468, // 233: zitadel.management.v1.ListLoginPolicySecondFactorsResponse.details:type_name -> zitadel.v1.ListDetails
	519, // 234: zitadel.management.v1.ListLoginPolicySecondFactorsResponse.result:type_name -> zitadel.policy.v1.SecondFactorType
	519, // 235: zitadel.management.v1.AddSecondFactorToLoginPolicyRequest.type:type_name -> zitadel.policy.v1.SecondFactorType
	471, // 236: zitadel.management.v1.AddSecondFactorToLoginPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	519, // 237: zitadel.management.v1.RemoveSecondFactorFromLoginPolicyRequest.type:type_name -> zitadel.policy.v1.SecondFactorType
	471, // 238: zitadel.management.v1.RemoveSecondFactorFromLoginPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	468, // 239: zitadel.management.v1.ListLoginPolicyMultiFactorsResponse.details:type_name -> zitadel.v1.ListDetails
	520, // 240: zitadel.management.v1.ListLoginPolicyMultiFactorsResponse.result:type_name -> zitadel.policy.v1.MultiFactorType
	520, // 241: zitadel.management.v1.AddMultiFactorToLoginPolicyRequest.type:type_name -> zitadel.policy.v1.MultiFactorType
	471, // 242: zitadel.management.v1.AddMultiFactorToLoginPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	520, // 243: zitadel.management.v1.RemoveMultiFactorFromLoginPolicyRequest.type:type_name -> zitadel.policy.v1.MultiFactorType
	471, // 244: zitadel.management.v1.RemoveMultiFactorFromLoginPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	521, // 245: zitadel.management.v1.GetPasswordComplexityPolicyResponse.policy:type_name -> zitadel.policy.v1.PasswordComplexityPolicy
	521, // 246: zitadel.management.v1.GetDefaultPasswordComplexityPolicyResponse.policy:type_name -> zitadel.policy.v1.PasswordComplexityPolicy
	471, // 247: zitadel.management.v1.AddCustomPasswordComplexityPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 248: zitadel.management.v1.UpdateCustomPasswordComplexityPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 249: zitadel.management.v1.ResetPasswordComplexityPolicyToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	522, // 250: zitadel.management.v1.GetPasswordAgePolicyResponse.policy:type_name -> zitadel.policy.v1.PasswordAgePolicy
	522, // 251: zitadel.management.v1.GetDefaultPasswordAgePolicyResponse.policy:type_name -> zitadel.policy.v1.PasswordAgePolicy
	471, // 252: zitadel.management.v1.AddCustomPasswordAgePolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 253: zitadel.management.v1.UpdateCustomPasswordAgePolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 254: zitadel.management.v1.ResetPasswordAgePolicyToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	523, // 255: zitadel.management.v1.GetLockoutPolicyResponse.policy:type_name -> zitadel.policy.v1.LockoutPolicy
	523, // 256: zitadel.management.v1.GetDefaultLockoutPolicyResponse.policy:type_name -> zitadel.policy.v1.LockoutPolicy
	471, // 257: zitadel.management.v1.AddCustomLockoutPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 258: zitadel.management.v1.UpdateCustomLockoutPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 259: zitadel.management.v1.ResetLockoutPolicyToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	524, // 260: zitadel.management.v1.GetPrivacyPolicyResponse.policy:type_name -> zitadel.policy.v1.PrivacyPolicy
	524, // 261: zitadel.management.v1.GetDefaultPrivacyPolicyResponse.policy:type_name -> zitadel.policy.v1.PrivacyPolicy
	471, // 262: zitadel.management.v1.AddCustomPrivacyPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 263: zitadel.management.v1.UpdateCustomPrivacyPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 264: zitadel.management.v1.ResetPrivacyPolicyToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	525, // 265: zitadel.management.v1.GetLabelPolicyResponse.policy:type_name -> zitadel.policy.v1.LabelPolicy
	525, // 266: zitadel.management.v1.GetPreviewLabelPolicyResponse.policy:type_name -> zitadel.policy.v1.LabelPolicy
	525, // 267: zitadel.management.v1.GetDefaultLabelPolicyResponse.policy:type_name -> zitadel.policy.v1.LabelPolicy
	471, // 268: zitadel.management.v1.AddCustomLabelPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 269: zitadel.management.v1.UpdateCustomLabelPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 270: zitadel.management.v1.ActivateCustomLabelPolicyResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 271: zitadel.management.v1.RemoveCustomLabelPolicyLogoResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 272: zitadel.management.v1.RemoveCustomLabelPolicyLogoDarkResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 273: zitadel.management.v1.RemoveCustomLabelPolicyIconResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 274: zitadel.management.v1.RemoveCustomLabelPolicyIconDarkResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 275: zitadel.management.v1.RemoveCustomLabelPolicyFontResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 276: zitadel.management.v1.ResetLabelPolicyToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	526, // 277: zitadel.management.v1.GetCustomInitMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	526, // 278: zitadel.management.v1.GetDefaultInitMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	471, // 279: zitadel.management.v1.SetCustomInitMessageTextResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 280: zitadel.management.v1.ResetCustomInitMessageTextToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	527, // 281: zitadel.management.v1.GetDefaultLoginTextsResponse.custom_text:type_name -> zitadel.text.v1.LoginCustomText
	527, // 282: zitadel.management.v1.GetCustomLoginTextsResponse.custom_text:type_name -> zitadel.text.v1.LoginCustomText
	528, // 283: zitadel.management.v1.SetCustomLoginTextsRequest.select_account_text:type_name -> zitadel.text.v1.SelectAccountScreenText
	529, // 284: zitadel.management.v1.SetCustomLoginTextsRequest.login_text:type_name -> zitadel.text.v1.LoginScreenText
	530, // 285: zitadel.management.v1.SetCustomLoginTextsRequest.password_text:type_name -> zitadel.text.v1.PasswordScreenText
	531, // 286: zitadel.management.v1.SetCustomLoginTextsRequest.username_change_text:type_name -> zitadel.text.v1.UsernameChangeScreenText
	532, // 287: zitadel.management.v1.SetCustomLoginTextsRequest.username_change_done_text:type_name -> zitadel.text.v1.UsernameChangeDoneScreenText
	533, // 288: zitadel.management.v1.SetCustomLoginTextsRequest.init_password_text:type_name -> zitadel.text.v1.InitPasswordScreenText
	534, // 289: zitadel.management.v1.SetCustomLoginTextsRequest.init_password_done_text:type_name -> zitadel.text.v1.InitPasswordDoneScreenText
	535, // 290: zitadel.management.v1.SetCustomLoginTextsRequest.email_verification_text:type_name -> zitadel.text.v1.EmailVerificationScreenText
	536, // 291: zitadel.management.v1.SetCustomLoginTextsRequest.email_verification_done_text:type_name -> zitadel.text.v1.EmailVerificationDoneScreenText
	537, // 292: zitadel.management.v1.SetCustomLoginTextsRequest.initialize_user_text:type_name -> zitadel.text.v1.InitializeUserScreenText
	538, // 293: zitadel.management.v1.SetCustomLoginTextsRequest.initialize_done_text:type_name -> zitadel.text.v1.InitializeUserDoneScreenText
	539, // 294: zitadel.management.v1.SetCustomLoginTextsRequest.init_mfa_prompt_text:type_name -> zitadel.text.v1.InitMFAPromptScreenText
	540, // 295: zitadel.management.v1.SetCustomLoginTextsRequest.init_mfa_otp_text:type_name -> zitadel.text.v1.InitMFAOTPScreenText
	541, // 296: zitadel.management.v1.SetCustomLoginTextsRequest.init_mfa_u2f_text:type_name -> zitadel.text.v1.InitMFAU2FScreenText
	542, // 297: zitadel.management.v1.SetCustomLoginTextsRequest.init_mfa_done_text:type_name -> zitadel.text.v1.InitMFADoneScreenText
	543, // 298: zitadel.management.v1.SetCustomLoginTextsRequest.mfa_providers_text:type_name -> zitadel.text.v1.MFAProvidersText
	544, // 299: zitadel.management.v1.SetCustomLoginTextsRequest.verify_mfa_otp_text:type_name -> zitadel.text.v1.VerifyMFAOTPScreenText
	545, // 300: zitadel.management.v1.SetCustomLoginTextsRequest.verify_mfa_u2f_text:type_name -> zitadel.text.v1.VerifyMFAU2FScreenText
	546, // 301: zitadel.management.v1.SetCustomLoginTextsRequest.passwordless_text:type_name -> zitadel.text.v1.PasswordlessScreenText
	547, // 302: zitadel.management.v1.SetCustomLoginTextsRequest.password_change_text:type_name -> zitadel.text.v1.PasswordChangeScreenText
	548, // 303: zitadel.management.v1.SetCustomLoginTextsRequest.password_change_done_text:type_name -> zitadel.text.v1.PasswordChangeDoneScreenText
	549, // 304: zitadel.management.v1.SetCustomLoginTextsRequest.password_reset_done_text:type_name -> zitadel.text.v1.PasswordResetDoneScreenText
	550, // 305: zitadel.management.v1.SetCustomLoginTextsRequest.registration_option_text:type_name -> zitadel.text.v1.RegistrationOptionScreenText
	551, // 306: zitadel.management.v1.SetCustomLoginTextsRequest.registration_user_text:type_name -> zitadel.text.v1.RegistrationUserScreenText
	552, // 307: zitadel.management.v1.SetCustomLoginTextsRequest.registration_org_text:type_name -> zitadel.text.v1.RegistrationOrgScreenText
	553, // 308: zitadel.management.v1.SetCustomLoginTextsRequest.linking_user_done_text:type_name -> zitadel.text.v1.LinkingUserDoneScreenText
	554, // 309: zitadel.management.v1.SetCustomLoginTextsRequest.external_user_not_found_text:type_name -> zitadel.text.v1.ExternalUserNotFoundScreenText
	555, // 310: zitadel.management.v1.SetCustomLoginTextsRequest.success_login_text:type_name -> zitadel.text.v1.SuccessLoginScreenText
	556, // 311: zitadel.management.v1.SetCustomLoginTextsRequest.logout_text:type_name -> zitadel.text.v1.LogoutDoneScreenText
	557, // 312: zitadel.management.v1.SetCustomLoginTextsRequest.footer_text:type_name -> zitadel.text.v1.FooterText
	558, // 313: zitadel.management.v1.SetCustomLoginTextsRequest.passwordless_prompt_text:type_name -> zitadel.text.v1.PasswordlessPromptScreenText
	559, // 314: zitadel.management.v1.SetCustomLoginTextsRequest.passwordless_registration_text:type_name -> zitadel.text.v1.PasswordlessRegistrationScreenText
	560, // 315: zitadel.management.v1.SetCustomLoginTextsRequest.passwordless_registration_done_text:type_name -> zitadel.text.v1.PasswordlessRegistrationDoneScreenText
	561, // 316: zitadel.management.v1.SetCustomLoginTextsRequest.external_registration_user_overview_text:type_name -> zitadel.text.v1.ExternalRegistrationUserOverviewScreenText
	471, // 317: zitadel.management.v1.SetCustomLoginTextsResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 318: zitadel.management.v1.ResetCustomLoginTextsToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	526, // 319: zitadel.management.v1.GetCustomPasswordResetMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	526, // 320: zitadel.management.v1.GetDefaultPasswordResetMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	471, // 321: zitadel.management.v1.SetCustomPasswordResetMessageTextResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 322: zitadel.management.v1.ResetCustomPasswordResetMessageTextToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	526, // 323: zitadel.management.v1.GetCustomVerifyEmailMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	526, // 324: zitadel.management.v1.GetDefaultVerifyEmailMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	471, // 325: zitadel.management.v1.SetCustomVerifyEmailMessageTextResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 326: zitadel.management.v1.ResetCustomVerifyEmailMessageTextToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	526, // 327: zitadel.management.v1.GetCustomVerifyPhoneMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	526, // 328: zitadel.management.v1.GetDefaultVerifyPhoneMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	471, // 329: zitadel.management.v1.SetCustomVerifyPhoneMessageTextResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 330: zitadel.management.v1.ResetCustomVerifyPhoneMessageTextToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	526, // 331: zitadel.management.v1.GetCustomDomainClaimedMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	526, // 332: zitadel.management.v1.GetDefaultDomainClaimedMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	471, // 333: zitadel.management.v1.SetCustomDomainClaimedMessageTextResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 334: zitadel.management.v1.ResetCustomDomainClaimedMessageTextToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	526, // 335: zitadel.management.v1.GetCustomPasswordlessRegistrationMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	526, // 336: zitadel.management.v1.GetDefaultPasswordlessRegistrationMessageTextResponse.custom_text:type_name -> zitadel.text.v1.MessageCustomText
	471, // 337: zitadel.management.v1.SetCustomPasswordlessRegistrationMessageTextResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 338: zitadel.management.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse.details:type_name -> zitadel.v1.ObjectDetails
	562, // 339: zitadel.management.v1.GetOrgIDPByIDResponse.idp:type_name -> zitadel.idp.v1.IDP
	465, // 340: zitadel.management.v1.ListOrgIDPsRequest.query:type_name -> zitadel.v1.ListQuery
	563, // 341: zitadel.management.v1.ListOrgIDPsRequest.sorting_column:type_name -> zitadel.idp.v1.IDPFieldName
	416, // 342: zitadel.management.v1.ListOrgIDPsRequest.queries:type_name -> zitadel.management.v1.IDPQuery
	564, // 343: zitadel.management.v1.IDPQuery.idp_id_query:type_name -> zitadel.idp.v1.IDPIDQuery
	565, // 344: zitadel.management.v1.IDPQuery.idp_name_query:type_name -> zitadel.idp.v1.IDPNameQuery
	566, // 345: zitadel.management.v1.IDPQuery.owner_type_query:type_name -> zitadel.idp.v1.IDPOwnerTypeQuery
	468, // 346: zitadel.management.v1.ListOrgIDPsResponse.details:type_name -> zitadel.v1.ListDetails
	563, // 347: zitadel.management.v1.ListOrgIDPsResponse.sorting_column:type_name -> zitadel.idp.v1.IDPFieldName
	562, // 348: zitadel.management.v1.ListOrgIDPsResponse.result:type_name -> zitadel.idp.v1.IDP
	567, // 349: zitadel.management.v1.AddOrgOIDCIDPRequest.styling_type:type_name -> zitadel.idp.v1.IDPStylingType
	568, // 350: zitadel.management.v1.AddOrgOIDCIDPRequest.display_name_mapping:type_name -> zitadel.idp.v1.OIDCMappingField
	568, // 351: zitadel.management.v1.AddOrgOIDCIDPRequest.username_mapping:type_name -> zitadel.idp.v1.OIDCMappingField
	471, // 352: zitadel.management.v1.AddOrgOIDCIDPResponse.details:type_name -> zitadel.v1.ObjectDetails
	567, // 353: zitadel.management.v1.AddOrgJWTIDPRequest.styling_type:type_name -> zitadel.idp.v1.IDPStylingType
	471, // 354: zitadel.management.v1.AddOrgJWTIDPResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 355: zitadel.management.v1.DeactivateOrgIDPResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 356: zitadel.management.v1.ReactivateOrgIDPResponse.details:type_name -> zitadel.v1.ObjectDetails
	567, // 357: zitadel.management.v1.UpdateOrgIDPRequest.styling_type:type_name -> zitadel.idp.v1.IDPStylingType
	471, // 358: zitadel.management.v1.UpdateOrgIDPResponse.details:type_name -> zitadel.v1.ObjectDetails
	568, // 359: zitadel.management.v1.UpdateOrgIDPOIDCConfigRequest.display_name_mapping:type_name -> zitadel.idp.v1.OIDCMappingField
	568, // 360: zitadel.management.v1.UpdateOrgIDPOIDCConfigRequest.username_mapping:type_name -> zitadel.idp.v1.OIDCMappingField
	471, // 361: zitadel.management.v1.UpdateOrgIDPOIDCConfigResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 362: zitadel.management.v1.UpdateOrgIDPJWTConfigResponse.details:type_name -> zitadel.v1.ObjectDetails
	465, // 363: zitadel.management.v1.ListActionsRequest.query:type_name -> zitadel.v1.ListQuery
	569, // 364: zitadel.management.v1.ListActionsRequest.sorting_column:type_name -> zitadel.action.v1.ActionFieldName
	435, // 365: zitadel.management.v1.ListActionsRequest.queries:type_name -> zitadel.management.v1.ActionQuery
	570, // 366: zitadel.management.v1.ActionQuery.action_id_query:type_name -> zitadel.action.v1.ActionIDQuery
	571, // 367: zitadel.management.v1.ActionQuery.action_name_query:type_name -> zitadel.action.v1.ActionNameQuery
	572, // 368: zitadel.management.v1.ActionQuery.action_state_query:type_name -> zitadel.action.v1.ActionStateQuery
	468, // 369: zitadel.management.v1.ListActionsResponse.details:type_name -> zitadel.v1.ListDetails
	569, // 370: zitadel.management.v1.ListActionsResponse.sorting_column:type_name -> zitadel.action.v1.ActionFieldName
	573, // 371: zitadel.management.v1.ListActionsResponse.result:type_name -> zitadel.action.v1.Action
	480, // 372: zitadel.management.v1.CreateActionRequest.timeout:type_name -> google.protobuf.Duration
	471, // 373: zitadel.management.v1.CreateActionResponse.details:type_name -> zitadel.v1.ObjectDetails
	573, // 374: zitadel.management.v1.GetActionResponse.action:type_name -> zitadel.action.v1.Action
	480, // 375: zitadel.management.v1.UpdateActionRequest.timeout:type_name -> google.protobuf.Duration
	471, // 376: zitadel.management.v1.UpdateActionResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 377: zitadel.management.v1.DeactivateActionResponse.details:type_name -> zitadel.v1.ObjectDetails
	471, // 378: zitadel.management.v1.ReactivateActionResponse.details:type_name -> zitadel.v1.ObjectDetails
	574, // 379: zitadel.management.v1.GetFlowRequest.type:type_name -> zitadel.action.v1.FlowType
	575, // 380: zitadel.management.v1.GetFlowResponse.flow:type_name -> zitadel.action.v1.Flow
	574, // 381: zitadel.management.v1.ClearFlowRequest.type:type_name -> zitadel.action.v1.FlowType
	471, // 382: zitadel.management.v1.ClearFlowResponse.details:type_name -> zitadel.v1.ObjectDetails
	574, // 383: zitadel.management.v1.SetTriggerActionsRequest.flow_type:type_name -> zitadel.action.v1.FlowType
	576, // 384: zitadel.management.v1.SetTriggerActionsRequest.trigger_type:type_name -> zitadel.action.v1.TriggerType
	471, // 385: zitadel.management.v1.SetTriggerActionsResponse.details:type_name -> zitadel.v1.ObjectDetails
	475, // 386: zitadel.management.v1.AddHumanUserRequest.Profile.gender:type_name -> zitadel.user.v1.Gender
	475, // 387: zitadel.management.v1.ImportHumanUserRequest.Profile.gender:type_name -> zitadel.user.v1.Gender
	480, // 388: zitadel.management.v1.ImportHumanUserResponse.PasswordlessRegistration.lifetime:type_name -> google.protobuf.Duration
	480, // 389: zitadel.management.v1.ImportHumanUserResponse.PasswordlessRegistration.expiration:type_name -> google.protobuf.Duration
	1,   // 390: zitadel.management.v1.ManagementService.Healthz:input_type -> zitadel.management.v1.HealthzRequest
	3,   // 391: zitadel.management.v1.ManagementService.GetOIDCInformation:input_type -> zitadel.management.v1.GetOIDCInformationRequest
	5,   // 392: zitadel.management.v1.ManagementService.GetIAM:input_type -> zitadel.management.v1.GetIAMRequest
	7,   // 393: zitadel.management.v1.ManagementService.GetSupportedLanguages:input_type -> zitadel.management.v1.GetSupportedLanguagesRequest
	9,   // 394: zitadel.management.v1.ManagementService.GetUserByID:input_type -> zitadel.management.v1.GetUserByIDRequest
	11,  // 395: zitadel.management.v1.ManagementService.GetUserByLoginNameGlobal:input_type -> zitadel.management.v1.GetUserByLoginNameGlobalRequest
	13,  // 396: zitadel.management.v1.ManagementService.ListUsers:input_type -> zitadel.management.v1.ListUsersRequest
	15,  // 397: zitadel.management.v1.ManagementService.ListUserChanges:input_type -> zitadel.management.v1.ListUserChangesRequest
	17,  // 398: zitadel.management.v1.ManagementService.IsUserUnique:input_type -> zitadel.management.v1.IsUserUniqueRequest
	19,  // 399: zitadel.management.v1.ManagementService.AddHumanUser:input_type -> zitadel.management.v1.AddHumanUserRequest
	21,  // 400: zitadel.management.v1.ManagementService.ImportHumanUser:input_type -> zitadel.management.v1.ImportHumanUserRequest
	23,  // 401: zitadel.management.v1.ManagementService.AddMachineUser:input_type -> zitadel.management.v1.AddMachineUserRequest
	25,  // 402: zitadel.management.v1.ManagementService.DeactivateUser:input_type -> zitadel.management.v1.DeactivateUserRequest
	27,  // 403: zitadel.management.v1.ManagementService.ReactivateUser:input_type -> zitadel.management.v1.ReactivateUserRequest
	29,  // 404: zitadel.management.v1.ManagementService.LockUser:input_type -> zitadel.management.v1.LockUserRequest
	31,  // 405: zitadel.management.v1.ManagementService.UnlockUser:input_type -> zitadel.management.v1.UnlockUserRequest
	33,  // 406: zitadel.management.v1.ManagementService.RemoveUser:input_type -> zitadel.management.v1.RemoveUserRequest
	35,  // 407: zitadel.management.v1.ManagementService.UpdateUserName:input_type -> zitadel.management.v1.UpdateUserNameRequest
	41,  // 408: zitadel.management.v1.ManagementService.SetUserMetadata:input_type -> zitadel.management.v1.SetUserMetadataRequest
	43,  // 409: zitadel.management.v1.ManagementService.BulkSetUserMetadata:input_type -> zitadel.management.v1.BulkSetUserMetadataRequest
	37,  // 410: zitadel.management.v1.ManagementService.ListUserMetadata:input_type -> zitadel.management.v1.ListUserMetadataRequest
	39,  // 411: zitadel.management.v1.ManagementService.GetUserMetadata:input_type -> zitadel.management.v1.GetUserMetadataRequest
	45,  // 412: zitadel.management.v1.ManagementService.RemoveUserMetadata:input_type -> zitadel.management.v1.RemoveUserMetadataRequest
	47,  // 413: zitadel.management.v1.ManagementService.BulkRemoveUserMetadata:input_type -> zitadel.management.v1.BulkRemoveUserMetadataRequest
	49,  // 414: zitadel.management.v1.ManagementService.GetHumanProfile:input_type -> zitadel.management.v1.GetHumanProfileRequest
	51,  // 415: zitadel.management.v1.ManagementService.UpdateHumanProfile:input_type -> zitadel.management.v1.UpdateHumanProfileRequest
	53,  // 416: zitadel.management.v1.ManagementService.GetHumanEmail:input_type -> zitadel.management.v1.GetHumanEmailRequest
	55,  // 417: zitadel.management.v1.ManagementService.UpdateHumanEmail:input_type -> zitadel.management.v1.UpdateHumanEmailRequest
	57,  // 418: zitadel.management.v1.ManagementService.ResendHumanInitialization:input_type -> zitadel.management.v1.ResendHumanInitializationRequest
	59,  // 419: zitadel.management.v1.ManagementService.ResendHumanEmailVerification:input_type -> zitadel.management.v1.ResendHumanEmailVerificationRequest
	61,  // 420: zitadel.management.v1.ManagementService.GetHumanPhone:input_type -> zitadel.management.v1.GetHumanPhoneRequest
	63,  // 421: zitadel.management.v1.ManagementService.UpdateHumanPhone:input_type -> zitadel.management.v1.UpdateHumanPhoneRequest
	65,  // 422: zitadel.management.v1.ManagementService.RemoveHumanPhone:input_type -> zitadel.management.v1.RemoveHumanPhoneRequest
	67,  // 423: zitadel.management.v1.ManagementService.ResendHumanPhoneVerification:input_type -> zitadel.management.v1.ResendHumanPhoneVerificationRequest
	69,  // 424: zitadel.management.v1.ManagementService.RemoveHumanAvatar:input_type -> zitadel.management.v1.RemoveHumanAvatarRequest
	71,  // 425: zitadel.management.v1.ManagementService.SetHumanInitialPassword:input_type -> zitadel.management.v1.SetHumanInitialPasswordRequest
	73,  // 426: zitadel.management.v1.ManagementService.SetHumanPassword:input_type -> zitadel.management.v1.SetHumanPasswordRequest
	75,  // 427: zitadel.management.v1.ManagementService.SendHumanResetPasswordNotification:input_type -> zitadel.management.v1.SendHumanResetPasswordNotificationRequest
	77,  // 428: zitadel.management.v1.ManagementService.ListHumanAuthFactors:input_type -> zitadel.management.v1.ListHumanAuthFactorsRequest
	79,  // 429: zitadel.management.v1.ManagementService.RemoveHumanAuthFactorOTP:input_type -> zitadel.management.v1.RemoveHumanAuthFactorOTPRequest
	81,  // 430: zitadel.management.v1.ManagementService.RemoveHumanAuthFactorU2F:input_type -> zitadel.management.v1.RemoveHumanAuthFactorU2FRequest
	83,  // 431: zitadel.management.v1.ManagementService.ListHumanPasswordless:input_type -> zitadel.management.v1.ListHumanPasswordlessRequest
	85,  // 432: zitadel.management.v1.ManagementService.AddPasswordlessRegistration:input_type -> zitadel.management.v1.AddPasswordlessRegistrationRequest
	87,  // 433: zitadel.management.v1.ManagementService.SendPasswordlessRegistration:input_type -> zitadel.management.v1.SendPasswordlessRegistrationRequest
	89,  // 434: zitadel.management.v1.ManagementService.RemoveHumanPasswordless:input_type -> zitadel.management.v1.RemoveHumanPasswordlessRequest
	91,  // 435: zitadel.management.v1.ManagementService.UpdateMachine:input_type -> zitadel.management.v1.UpdateMachineRequest
	93,  // 436: zitadel.management.v1.ManagementService.GetMachineKeyByIDs:input_type -> zitadel.management.v1.GetMachineKeyByIDsRequest
	95,  // 437: zitadel.management.v1.ManagementService.ListMachineKeys:input_type -> zitadel.management.v1.ListMachineKeysRequest
	97,  // 438: zitadel.management.v1.ManagementService.AddMachineKey:input_type -> zitadel.management.v1.AddMachineKeyRequest
	99,  // 439: zitadel.management.v1.ManagementService.RemoveMachineKey:input_type -> zitadel.management.v1.RemoveMachineKeyRequest
	101, // 440: zitadel.management.v1.ManagementService.ListHumanLinkedIDPs:input_type -> zitadel.management.v1.ListHumanLinkedIDPsRequest
	103, // 441: zitadel.management.v1.ManagementService.RemoveHumanLinkedIDP:input_type -> zitadel.management.v1.RemoveHumanLinkedIDPRequest
	105, // 442: zitadel.management.v1.ManagementService.ListUserMemberships:input_type -> zitadel.management.v1.ListUserMembershipsRequest
	107, // 443: zitadel.management.v1.ManagementService.GetMyOrg:input_type -> zitadel.management.v1.GetMyOrgRequest
	109, // 444: zitadel.management.v1.ManagementService.GetOrgByDomainGlobal:input_type -> zitadel.management.v1.GetOrgByDomainGlobalRequest
	110, // 445: zitadel.management.v1.ManagementService.ListOrgChanges:input_type -> zitadel.management.v1.ListOrgChangesRequest
	113, // 446: zitadel.management.v1.ManagementService.AddOrg:input_type -> zitadel.management.v1.AddOrgRequest
	115, // 447: zitadel.management.v1.ManagementService.UpdateOrg:input_type -> zitadel.management.v1.UpdateOrgRequest
	117, // 448: zitadel.management.v1.ManagementService.DeactivateOrg:input_type -> zitadel.management.v1.DeactivateOrgRequest
	119, // 449: zitadel.management.v1.ManagementService.ReactivateOrg:input_type -> zitadel.management.v1.ReactivateOrgRequest
	121, // 450: zitadel.management.v1.ManagementService.ListOrgDomains:input_type -> zitadel.management.v1.ListOrgDomainsRequest
	123, // 451: zitadel.management.v1.ManagementService.AddOrgDomain:input_type -> zitadel.management.v1.AddOrgDomainRequest
	125, // 452: zitadel.management.v1.ManagementService.RemoveOrgDomain:input_type -> zitadel.management.v1.RemoveOrgDomainRequest
	127, // 453: zitadel.management.v1.ManagementService.GenerateOrgDomainValidation:input_type -> zitadel.management.v1.GenerateOrgDomainValidationRequest
	129, // 454: zitadel.management.v1.ManagementService.ValidateOrgDomain:input_type -> zitadel.management.v1.ValidateOrgDomainRequest
	131, // 455: zitadel.management.v1.ManagementService.SetPrimaryOrgDomain:input_type -> zitadel.management.v1.SetPrimaryOrgDomainRequest
	133, // 456: zitadel.management.v1.ManagementService.ListOrgMemberRoles:input_type -> zitadel.management.v1.ListOrgMemberRolesRequest
	135, // 457: zitadel.management.v1.ManagementService.ListOrgMembers:input_type -> zitadel.management.v1.ListOrgMembersRequest
	137, // 458: zitadel.management.v1.ManagementService.AddOrgMember:input_type -> zitadel.management.v1.AddOrgMemberRequest
	139, // 459: zitadel.management.v1.ManagementService.UpdateOrgMember:input_type -> zitadel.management.v1.UpdateOrgMemberRequest
	141, // 460: zitadel.management.v1.ManagementService.RemoveOrgMember:input_type -> zitadel.management.v1.RemoveOrgMemberRequest
	143, // 461: zitadel.management.v1.ManagementService.GetProjectByID:input_type -> zitadel.management.v1.GetProjectByIDRequest
	145, // 462: zitadel.management.v1.ManagementService.GetGrantedProjectByID:input_type -> zitadel.management.v1.GetGrantedProjectByIDRequest
	147, // 463: zitadel.management.v1.ManagementService.ListProjects:input_type -> zitadel.management.v1.ListProjectsRequest
	149, // 464: zitadel.management.v1.ManagementService.ListGrantedProjects:input_type -> zitadel.management.v1.ListGrantedProjectsRequest
	175, // 465: zitadel.management.v1.ManagementService.ListGrantedProjectRoles:input_type -> zitadel.management.v1.ListGrantedProjectRolesRequest
	151, // 466: zitadel.management.v1.ManagementService.ListProjectChanges:input_type -> zitadel.management.v1.ListProjectChangesRequest
	153, // 467: zitadel.management.v1.ManagementService.AddProject:input_type -> zitadel.management.v1.AddProjectRequest
	155, // 468: zitadel.management.v1.ManagementService.UpdateProject:input_type -> zitadel.management.v1.UpdateProjectRequest
	157, // 469: zitadel.management.v1.ManagementService.DeactivateProject:input_type -> zitadel.management.v1.DeactivateProjectRequest
	159, // 470: zitadel.management.v1.ManagementService.ReactivateProject:input_type -> zitadel.management.v1.ReactivateProjectRequest
	161, // 471: zitadel.management.v1.ManagementService.RemoveProject:input_type -> zitadel.management.v1.RemoveProjectRequest
	173, // 472: zitadel.management.v1.ManagementService.ListProjectRoles:input_type -> zitadel.management.v1.ListProjectRolesRequest
	165, // 473: zitadel.management.v1.ManagementService.AddProjectRole:input_type -> zitadel.management.v1.AddProjectRoleRequest
	167, // 474: zitadel.management.v1.ManagementService.BulkAddProjectRoles:input_type -> zitadel.management.v1.BulkAddProjectRolesRequest
	169, // 475: zitadel.management.v1.ManagementService.UpdateProjectRole:input_type -> zitadel.management.v1.UpdateProjectRoleRequest
	171, // 476: zitadel.management.v1.ManagementService.RemoveProjectRole:input_type -> zitadel.management.v1.RemoveProjectRoleRequest
	163, // 477: zitadel.management.v1.ManagementService.ListProjectMemberRoles:input_type -> zitadel.management.v1.ListProjectMemberRolesRequest
	177, // 478: zitadel.management.v1.ManagementService.ListProjectMembers:input_type -> zitadel.management.v1.ListProjectMembersRequest
	179, // 479: zitadel.management.v1.ManagementService.AddProjectMember:input_type -> zitadel.management.v1.AddProjectMemberRequest
	181, // 480: zitadel.management.v1.ManagementService.UpdateProjectMember:input_type -> zitadel.management.v1.UpdateProjectMemberRequest
	183, // 481: zitadel.management.v1.ManagementService.RemoveProjectMember:input_type -> zitadel.management.v1.RemoveProjectMemberRequest
	185, // 482: zitadel.management.v1.ManagementService.GetAppByID:input_type -> zitadel.management.v1.GetAppByIDRequest
	187, // 483: zitadel.management.v1.ManagementService.ListApps:input_type -> zitadel.management.v1.ListAppsRequest
	189, // 484: zitadel.management.v1.ManagementService.ListAppChanges:input_type -> zitadel.management.v1.ListAppChangesRequest
	191, // 485: zitadel.management.v1.ManagementService.AddOIDCApp:input_type -> zitadel.management.v1.AddOIDCAppRequest
	193, // 486: zitadel.management.v1.ManagementService.AddAPIApp:input_type -> zitadel.management.v1.AddAPIAppRequest
	195, // 487: zitadel.management.v1.ManagementService.UpdateApp:input_type -> zitadel.management.v1.UpdateAppRequest
	197, // 488: zitadel.management.v1.ManagementService.UpdateOIDCAppConfig:input_type -> zitadel.management.v1.UpdateOIDCAppConfigRequest
	199, // 489: zitadel.management.v1.ManagementService.UpdateAPIAppConfig:input_type -> zitadel.management.v1.UpdateAPIAppConfigRequest
	201, // 490: zitadel.management.v1.ManagementService.DeactivateApp:input_type -> zitadel.management.v1.DeactivateAppRequest
	203, // 491: zitadel.management.v1.ManagementService.ReactivateApp:input_type -> zitadel.management.v1.ReactivateAppRequest
	205, // 492: zitadel.management.v1.ManagementService.RemoveApp:input_type -> zitadel.management.v1.RemoveAppRequest
	207, // 493: zitadel.management.v1.ManagementService.RegenerateOIDCClientSecret:input_type -> zitadel.management.v1.RegenerateOIDCClientSecretRequest
	209, // 494: zitadel.management.v1.ManagementService.RegenerateAPIClientSecret:input_type -> zitadel.management.v1.RegenerateAPIClientSecretRequest
	211, // 495: zitadel.management.v1.ManagementService.GetAppKey:input_type -> zitadel.management.v1.GetAppKeyRequest
	213, // 496: zitadel.management.v1.ManagementService.ListAppKeys:input_type -> zitadel.management.v1.ListAppKeysRequest
	215, // 497: zitadel.management.v1.ManagementService.AddAppKey:input_type -> zitadel.management.v1.AddAppKeyRequest
	217, // 498: zitadel.management.v1.ManagementService.RemoveAppKey:input_type -> zitadel.management.v1.RemoveAppKeyRequest
	219, // 499: zitadel.management.v1.ManagementService.GetProjectGrantByID:input_type -> zitadel.management.v1.GetProjectGrantByIDRequest
	221, // 500: zitadel.management.v1.ManagementService.ListProjectGrants:input_type -> zitadel.management.v1.ListProjectGrantsRequest
	223, // 501: zitadel.management.v1.ManagementService.ListAllProjectGrants:input_type -> zitadel.management.v1.ListAllProjectGrantsRequest
	225, // 502: zitadel.management.v1.ManagementService.AddProjectGrant:input_type -> zitadel.management.v1.AddProjectGrantRequest
	227, // 503: zitadel.management.v1.ManagementService.UpdateProjectGrant:input_type -> zitadel.management.v1.UpdateProjectGrantRequest
	229, // 504: zitadel.management.v1.ManagementService.DeactivateProjectGrant:input_type -> zitadel.management.v1.DeactivateProjectGrantRequest
	231, // 505: zitadel.management.v1.ManagementService.ReactivateProjectGrant:input_type -> zitadel.management.v1.ReactivateProjectGrantRequest
	233, // 506: zitadel.management.v1.ManagementService.RemoveProjectGrant:input_type -> zitadel.management.v1.RemoveProjectGrantRequest
	235, // 507: zitadel.management.v1.ManagementService.ListProjectGrantMemberRoles:input_type -> zitadel.management.v1.ListProjectGrantMemberRolesRequest
	237, // 508: zitadel.management.v1.ManagementService.ListProjectGrantMembers:input_type -> zitadel.management.v1.ListProjectGrantMembersRequest
	239, // 509: zitadel.management.v1.ManagementService.AddProjectGrantMember:input_type -> zitadel.management.v1.AddProjectGrantMemberRequest
	241, // 510: zitadel.management.v1.ManagementService.UpdateProjectGrantMember:input_type -> zitadel.management.v1.UpdateProjectGrantMemberRequest
	243, // 511: zitadel.management.v1.ManagementService.RemoveProjectGrantMember:input_type -> zitadel.management.v1.RemoveProjectGrantMemberRequest
	245, // 512: zitadel.management.v1.ManagementService.GetUserGrantByID:input_type -> zitadel.management.v1.GetUserGrantByIDRequest
	247, // 513: zitadel.management.v1.ManagementService.ListUserGrants:input_type -> zitadel.management.v1.ListUserGrantRequest
	249, // 514: zitadel.management.v1.ManagementService.AddUserGrant:input_type -> zitadel.management.v1.AddUserGrantRequest
	251, // 515: zitadel.management.v1.ManagementService.UpdateUserGrant:input_type -> zitadel.management.v1.UpdateUserGrantRequest
	253, // 516: zitadel.management.v1.ManagementService.DeactivateUserGrant:input_type -> zitadel.management.v1.DeactivateUserGrantRequest
	255, // 517: zitadel.management.v1.ManagementService.ReactivateUserGrant:input_type -> zitadel.management.v1.ReactivateUserGrantRequest
	257, // 518: zitadel.management.v1.ManagementService.RemoveUserGrant:input_type -> zitadel.management.v1.RemoveUserGrantRequest
	259, // 519: zitadel.management.v1.ManagementService.BulkRemoveUserGrant:input_type -> zitadel.management.v1.BulkRemoveUserGrantRequest
	261, // 520: zitadel.management.v1.ManagementService.GetFeatures:input_type -> zitadel.management.v1.GetFeaturesRequest
	263, // 521: zitadel.management.v1.ManagementService.GetOrgIAMPolicy:input_type -> zitadel.management.v1.GetOrgIAMPolicyRequest
	265, // 522: zitadel.management.v1.ManagementService.GetLoginPolicy:input_type -> zitadel.management.v1.GetLoginPolicyRequest
	267, // 523: zitadel.management.v1.ManagementService.GetDefaultLoginPolicy:input_type -> zitadel.management.v1.GetDefaultLoginPolicyRequest
	269, // 524: zitadel.management.v1.ManagementService.AddCustomLoginPolicy:input_type -> zitadel.management.v1.AddCustomLoginPolicyRequest
	271, // 525: zitadel.management.v1.ManagementService.UpdateCustomLoginPolicy:input_type -> zitadel.management.v1.UpdateCustomLoginPolicyRequest
	273, // 526: zitadel.management.v1.ManagementService.ResetLoginPolicyToDefault:input_type -> zitadel.management.v1.ResetLoginPolicyToDefaultRequest
	275, // 527: zitadel.management.v1.ManagementService.ListLoginPolicyIDPs:input_type -> zitadel.management.v1.ListLoginPolicyIDPsRequest
	277, // 528: zitadel.management.v1.ManagementService.AddIDPToLoginPolicy:input_type -> zitadel.management.v1.AddIDPToLoginPolicyRequest
	279, // 529: zitadel.management.v1.ManagementService.RemoveIDPFromLoginPolicy:input_type -> zitadel.management.v1.RemoveIDPFromLoginPolicyRequest
	281, // 530: zitadel.management.v1.ManagementService.ListLoginPolicySecondFactors:input_type -> zitadel.management.v1.ListLoginPolicySecondFactorsRequest
	283, // 531: zitadel.management.v1.ManagementService.AddSecondFactorToLoginPolicy:input_type -> zitadel.management.v1.AddSecondFactorToLoginPolicyRequest
	285, // 532: zitadel.management.v1.ManagementService.RemoveSecondFactorFromLoginPolicy:input_type -> zitadel.management.v1.RemoveSecondFactorFromLoginPolicyRequest
	287, // 533: zitadel.management.v1.ManagementService.ListLoginPolicyMultiFactors:input_type -> zitadel.management.v1.ListLoginPolicyMultiFactorsRequest
	289, // 534: zitadel.management.v1.ManagementService.AddMultiFactorToLoginPolicy:input_type -> zitadel.management.v1.AddMultiFactorToLoginPolicyRequest
	291, // 535: zitadel.management.v1.ManagementService.RemoveMultiFactorFromLoginPolicy:input_type -> zitadel.management.v1.RemoveMultiFactorFromLoginPolicyRequest
	293, // 536: zitadel.management.v1.ManagementService.GetPasswordComplexityPolicy:input_type -> zitadel.management.v1.GetPasswordComplexityPolicyRequest
	295, // 537: zitadel.management.v1.ManagementService.GetDefaultPasswordComplexityPolicy:input_type -> zitadel.management.v1.GetDefaultPasswordComplexityPolicyRequest
	297, // 538: zitadel.management.v1.ManagementService.AddCustomPasswordComplexityPolicy:input_type -> zitadel.management.v1.AddCustomPasswordComplexityPolicyRequest
	299, // 539: zitadel.management.v1.ManagementService.UpdateCustomPasswordComplexityPolicy:input_type -> zitadel.management.v1.UpdateCustomPasswordComplexityPolicyRequest
	301, // 540: zitadel.management.v1.ManagementService.ResetPasswordComplexityPolicyToDefault:input_type -> zitadel.management.v1.ResetPasswordComplexityPolicyToDefaultRequest
	303, // 541: zitadel.management.v1.ManagementService.GetPasswordAgePolicy:input_type -> zitadel.management.v1.GetPasswordAgePolicyRequest
	305, // 542: zitadel.management.v1.ManagementService.GetDefaultPasswordAgePolicy:input_type -> zitadel.management.v1.GetDefaultPasswordAgePolicyRequest
	307, // 543: zitadel.management.v1.ManagementService.AddCustomPasswordAgePolicy:input_type -> zitadel.management.v1.AddCustomPasswordAgePolicyRequest
	309, // 544: zitadel.management.v1.ManagementService.UpdateCustomPasswordAgePolicy:input_type -> zitadel.management.v1.UpdateCustomPasswordAgePolicyRequest
	311, // 545: zitadel.management.v1.ManagementService.ResetPasswordAgePolicyToDefault:input_type -> zitadel.management.v1.ResetPasswordAgePolicyToDefaultRequest
	313, // 546: zitadel.management.v1.ManagementService.GetLockoutPolicy:input_type -> zitadel.management.v1.GetLockoutPolicyRequest
	315, // 547: zitadel.management.v1.ManagementService.GetDefaultLockoutPolicy:input_type -> zitadel.management.v1.GetDefaultLockoutPolicyRequest
	317, // 548: zitadel.management.v1.ManagementService.AddCustomLockoutPolicy:input_type -> zitadel.management.v1.AddCustomLockoutPolicyRequest
	319, // 549: zitadel.management.v1.ManagementService.UpdateCustomLockoutPolicy:input_type -> zitadel.management.v1.UpdateCustomLockoutPolicyRequest
	321, // 550: zitadel.management.v1.ManagementService.ResetLockoutPolicyToDefault:input_type -> zitadel.management.v1.ResetLockoutPolicyToDefaultRequest
	323, // 551: zitadel.management.v1.ManagementService.GetPrivacyPolicy:input_type -> zitadel.management.v1.GetPrivacyPolicyRequest
	325, // 552: zitadel.management.v1.ManagementService.GetDefaultPrivacyPolicy:input_type -> zitadel.management.v1.GetDefaultPrivacyPolicyRequest
	327, // 553: zitadel.management.v1.ManagementService.AddCustomPrivacyPolicy:input_type -> zitadel.management.v1.AddCustomPrivacyPolicyRequest
	329, // 554: zitadel.management.v1.ManagementService.UpdateCustomPrivacyPolicy:input_type -> zitadel.management.v1.UpdateCustomPrivacyPolicyRequest
	331, // 555: zitadel.management.v1.ManagementService.ResetPrivacyPolicyToDefault:input_type -> zitadel.management.v1.ResetPrivacyPolicyToDefaultRequest
	333, // 556: zitadel.management.v1.ManagementService.GetLabelPolicy:input_type -> zitadel.management.v1.GetLabelPolicyRequest
	335, // 557: zitadel.management.v1.ManagementService.GetPreviewLabelPolicy:input_type -> zitadel.management.v1.GetPreviewLabelPolicyRequest
	337, // 558: zitadel.management.v1.ManagementService.GetDefaultLabelPolicy:input_type -> zitadel.management.v1.GetDefaultLabelPolicyRequest
	339, // 559: zitadel.management.v1.ManagementService.AddCustomLabelPolicy:input_type -> zitadel.management.v1.AddCustomLabelPolicyRequest
	341, // 560: zitadel.management.v1.ManagementService.UpdateCustomLabelPolicy:input_type -> zitadel.management.v1.UpdateCustomLabelPolicyRequest
	343, // 561: zitadel.management.v1.ManagementService.ActivateCustomLabelPolicy:input_type -> zitadel.management.v1.ActivateCustomLabelPolicyRequest
	345, // 562: zitadel.management.v1.ManagementService.RemoveCustomLabelPolicyLogo:input_type -> zitadel.management.v1.RemoveCustomLabelPolicyLogoRequest
	347, // 563: zitadel.management.v1.ManagementService.RemoveCustomLabelPolicyLogoDark:input_type -> zitadel.management.v1.RemoveCustomLabelPolicyLogoDarkRequest
	349, // 564: zitadel.management.v1.ManagementService.RemoveCustomLabelPolicyIcon:input_type -> zitadel.management.v1.RemoveCustomLabelPolicyIconRequest
	351, // 565: zitadel.management.v1.ManagementService.RemoveCustomLabelPolicyIconDark:input_type -> zitadel.management.v1.RemoveCustomLabelPolicyIconDarkRequest
	353, // 566: zitadel.management.v1.ManagementService.RemoveCustomLabelPolicyFont:input_type -> zitadel.management.v1.RemoveCustomLabelPolicyFontRequest
	355, // 567: zitadel.management.v1.ManagementService.ResetLabelPolicyToDefault:input_type -> zitadel.management.v1.ResetLabelPolicyToDefaultRequest
	357, // 568: zitadel.management.v1.ManagementService.GetCustomInitMessageText:input_type -> zitadel.management.v1.GetCustomInitMessageTextRequest
	359, // 569: zitadel.management.v1.ManagementService.GetDefaultInitMessageText:input_type -> zitadel.management.v1.GetDefaultInitMessageTextRequest
	361, // 570: zitadel.management.v1.ManagementService.SetCustomInitMessageText:input_type -> zitadel.management.v1.SetCustomInitMessageTextRequest
	363, // 571: zitadel.management.v1.ManagementService.ResetCustomInitMessageTextToDefault:input_type -> zitadel.management.v1.ResetCustomInitMessageTextToDefaultRequest
	373, // 572: zitadel.management.v1.ManagementService.GetCustomPasswordResetMessageText:input_type -> zitadel.management.v1.GetCustomPasswordResetMessageTextRequest
	375, // 573: zitadel.management.v1.ManagementService.GetDefaultPasswordResetMessageText:input_type -> zitadel.management.v1.GetDefaultPasswordResetMessageTextRequest
	377, // 574: zitadel.management.v1.ManagementService.SetCustomPasswordResetMessageText:input_type -> zitadel.management.v1.SetCustomPasswordResetMessageTextRequest
	379, // 575: zitadel.management.v1.ManagementService.ResetCustomPasswordResetMessageTextToDefault:input_type -> zitadel.management.v1.ResetCustomPasswordResetMessageTextToDefaultRequest
	381, // 576: zitadel.management.v1.ManagementService.GetCustomVerifyEmailMessageText:input_type -> zitadel.management.v1.GetCustomVerifyEmailMessageTextRequest
	383, // 577: zitadel.management.v1.ManagementService.GetDefaultVerifyEmailMessageText:input_type -> zitadel.management.v1.GetDefaultVerifyEmailMessageTextRequest
	385, // 578: zitadel.management.v1.ManagementService.SetCustomVerifyEmailMessageText:input_type -> zitadel.management.v1.SetCustomVerifyEmailMessageTextRequest
	387, // 579: zitadel.management.v1.ManagementService.ResetCustomVerifyEmailMessageTextToDefault:input_type -> zitadel.management.v1.ResetCustomVerifyEmailMessageTextToDefaultRequest
	389, // 580: zitadel.management.v1.ManagementService.GetCustomVerifyPhoneMessageText:input_type -> zitadel.management.v1.GetCustomVerifyPhoneMessageTextRequest
	391, // 581: zitadel.management.v1.ManagementService.GetDefaultVerifyPhoneMessageText:input_type -> zitadel.management.v1.GetDefaultVerifyPhoneMessageTextRequest
	393, // 582: zitadel.management.v1.ManagementService.SetCustomVerifyPhoneMessageText:input_type -> zitadel.management.v1.SetCustomVerifyPhoneMessageTextRequest
	395, // 583: zitadel.management.v1.ManagementService.ResetCustomVerifyPhoneMessageTextToDefault:input_type -> zitadel.management.v1.ResetCustomVerifyPhoneMessageTextToDefaultRequest
	397, // 584: zitadel.management.v1.ManagementService.GetCustomDomainClaimedMessageText:input_type -> zitadel.management.v1.GetCustomDomainClaimedMessageTextRequest
	399, // 585: zitadel.management.v1.ManagementService.GetDefaultDomainClaimedMessageText:input_type -> zitadel.management.v1.GetDefaultDomainClaimedMessageTextRequest
	401, // 586: zitadel.management.v1.ManagementService.SetCustomDomainClaimedMessageCustomText:input_type -> zitadel.management.v1.SetCustomDomainClaimedMessageTextRequest
	403, // 587: zitadel.management.v1.ManagementService.ResetCustomDomainClaimedMessageTextToDefault:input_type -> zitadel.management.v1.ResetCustomDomainClaimedMessageTextToDefaultRequest
	405, // 588: zitadel.management.v1.ManagementService.GetCustomPasswordlessRegistrationMessageText:input_type -> zitadel.management.v1.GetCustomPasswordlessRegistrationMessageTextRequest
	407, // 589: zitadel.management.v1.ManagementService.GetDefaultPasswordlessRegistrationMessageText:input_type -> zitadel.management.v1.GetDefaultPasswordlessRegistrationMessageTextRequest
	409, // 590: zitadel.management.v1.ManagementService.SetCustomPasswordlessRegistrationMessageCustomText:input_type -> zitadel.management.v1.SetCustomPasswordlessRegistrationMessageTextRequest
	411, // 591: zitadel.management.v1.ManagementService.ResetCustomPasswordlessRegistrationMessageTextToDefault:input_type -> zitadel.management.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest
	367, // 592: zitadel.management.v1.ManagementService.GetCustomLoginTexts:input_type -> zitadel.management.v1.GetCustomLoginTextsRequest
	365, // 593: zitadel.management.v1.ManagementService.GetDefaultLoginTexts:input_type -> zitadel.management.v1.GetDefaultLoginTextsRequest
	369, // 594: zitadel.management.v1.ManagementService.SetCustomLoginText:input_type -> zitadel.management.v1.SetCustomLoginTextsRequest
	371, // 595: zitadel.management.v1.ManagementService.ResetCustomLoginTextToDefault:input_type -> zitadel.management.v1.ResetCustomLoginTextsToDefaultRequest
	413, // 596: zitadel.management.v1.ManagementService.GetOrgIDPByID:input_type -> zitadel.management.v1.GetOrgIDPByIDRequest
	415, // 597: zitadel.management.v1.ManagementService.ListOrgIDPs:input_type -> zitadel.management.v1.ListOrgIDPsRequest
	418, // 598: zitadel.management.v1.ManagementService.AddOrgOIDCIDP:input_type -> zitadel.management.v1.AddOrgOIDCIDPRequest
	420, // 599: zitadel.management.v1.ManagementService.AddOrgJWTIDP:input_type -> zitadel.management.v1.AddOrgJWTIDPRequest
	422, // 600: zitadel.management.v1.ManagementService.DeactivateOrgIDP:input_type -> zitadel.management.v1.DeactivateOrgIDPRequest
	424, // 601: zitadel.management.v1.ManagementService.ReactivateOrgIDP:input_type -> zitadel.management.v1.ReactivateOrgIDPRequest
	426, // 602: zitadel.management.v1.ManagementService.RemoveOrgIDP:input_type -> zitadel.management.v1.RemoveOrgIDPRequest
	428, // 603: zitadel.management.v1.ManagementService.UpdateOrgIDP:input_type -> zitadel.management.v1.UpdateOrgIDPRequest
	430, // 604: zitadel.management.v1.ManagementService.UpdateOrgIDPOIDCConfig:input_type -> zitadel.management.v1.UpdateOrgIDPOIDCConfigRequest
	432, // 605: zitadel.management.v1.ManagementService.UpdateOrgIDPJWTConfig:input_type -> zitadel.management.v1.UpdateOrgIDPJWTConfigRequest
	434, // 606: zitadel.management.v1.ManagementService.ListActions:input_type -> zitadel.management.v1.ListActionsRequest
	439, // 607: zitadel.management.v1.ManagementService.GetAction:input_type -> zitadel.management.v1.GetActionRequest
	437, // 608: zitadel.management.v1.ManagementService.CreateAction:input_type -> zitadel.management.v1.CreateActionRequest
	441, // 609: zitadel.management.v1.ManagementService.UpdateAction:input_type -> zitadel.management.v1.UpdateActionRequest
	445, // 610: zitadel.management.v1.ManagementService.DeactivateAction:input_type -> zitadel.management.v1.DeactivateActionRequest
	447, // 611: zitadel.management.v1.ManagementService.ReactivateAction:input_type -> zitadel.management.v1.ReactivateActionRequest
	443, // 612: zitadel.management.v1.ManagementService.DeleteAction:input_type -> zitadel.management.v1.DeleteActionRequest
	449, // 613: zitadel.management.v1.ManagementService.GetFlow:input_type -> zitadel.management.v1.GetFlowRequest
	451, // 614: zitadel.management.v1.ManagementService.ClearFlow:input_type -> zitadel.management.v1.ClearFlowRequest
	453, // 615: zitadel.management.v1.ManagementService.SetTriggerActions:input_type -> zitadel.management.v1.SetTriggerActionsRequest
	2,   // 616: zitadel.management.v1.ManagementService.Healthz:output_type -> zitadel.management.v1.HealthzResponse
	4,   // 617: zitadel.management.v1.ManagementService.GetOIDCInformation:output_type -> zitadel.management.v1.GetOIDCInformationResponse
	6,   // 618: zitadel.management.v1.ManagementService.GetIAM:output_type -> zitadel.management.v1.GetIAMResponse
	8,   // 619: zitadel.management.v1.ManagementService.GetSupportedLanguages:output_type -> zitadel.management.v1.GetSupportedLanguagesResponse
	10,  // 620: zitadel.management.v1.ManagementService.GetUserByID:output_type -> zitadel.management.v1.GetUserByIDResponse
	12,  // 621: zitadel.management.v1.ManagementService.GetUserByLoginNameGlobal:output_type -> zitadel.management.v1.GetUserByLoginNameGlobalResponse
	14,  // 622: zitadel.management.v1.ManagementService.ListUsers:output_type -> zitadel.management.v1.ListUsersResponse
	16,  // 623: zitadel.management.v1.ManagementService.ListUserChanges:output_type -> zitadel.management.v1.ListUserChangesResponse
	18,  // 624: zitadel.management.v1.ManagementService.IsUserUnique:output_type -> zitadel.management.v1.IsUserUniqueResponse
	20,  // 625: zitadel.management.v1.ManagementService.AddHumanUser:output_type -> zitadel.management.v1.AddHumanUserResponse
	22,  // 626: zitadel.management.v1.ManagementService.ImportHumanUser:output_type -> zitadel.management.v1.ImportHumanUserResponse
	24,  // 627: zitadel.management.v1.ManagementService.AddMachineUser:output_type -> zitadel.management.v1.AddMachineUserResponse
	26,  // 628: zitadel.management.v1.ManagementService.DeactivateUser:output_type -> zitadel.management.v1.DeactivateUserResponse
	28,  // 629: zitadel.management.v1.ManagementService.ReactivateUser:output_type -> zitadel.management.v1.ReactivateUserResponse
	30,  // 630: zitadel.management.v1.ManagementService.LockUser:output_type -> zitadel.management.v1.LockUserResponse
	32,  // 631: zitadel.management.v1.ManagementService.UnlockUser:output_type -> zitadel.management.v1.UnlockUserResponse
	34,  // 632: zitadel.management.v1.ManagementService.RemoveUser:output_type -> zitadel.management.v1.RemoveUserResponse
	36,  // 633: zitadel.management.v1.ManagementService.UpdateUserName:output_type -> zitadel.management.v1.UpdateUserNameResponse
	42,  // 634: zitadel.management.v1.ManagementService.SetUserMetadata:output_type -> zitadel.management.v1.SetUserMetadataResponse
	44,  // 635: zitadel.management.v1.ManagementService.BulkSetUserMetadata:output_type -> zitadel.management.v1.BulkSetUserMetadataResponse
	38,  // 636: zitadel.management.v1.ManagementService.ListUserMetadata:output_type -> zitadel.management.v1.ListUserMetadataResponse
	40,  // 637: zitadel.management.v1.ManagementService.GetUserMetadata:output_type -> zitadel.management.v1.GetUserMetadataResponse
	46,  // 638: zitadel.management.v1.ManagementService.RemoveUserMetadata:output_type -> zitadel.management.v1.RemoveUserMetadataResponse
	48,  // 639: zitadel.management.v1.ManagementService.BulkRemoveUserMetadata:output_type -> zitadel.management.v1.BulkRemoveUserMetadataResponse
	50,  // 640: zitadel.management.v1.ManagementService.GetHumanProfile:output_type -> zitadel.management.v1.GetHumanProfileResponse
	52,  // 641: zitadel.management.v1.ManagementService.UpdateHumanProfile:output_type -> zitadel.management.v1.UpdateHumanProfileResponse
	54,  // 642: zitadel.management.v1.ManagementService.GetHumanEmail:output_type -> zitadel.management.v1.GetHumanEmailResponse
	56,  // 643: zitadel.management.v1.ManagementService.UpdateHumanEmail:output_type -> zitadel.management.v1.UpdateHumanEmailResponse
	58,  // 644: zitadel.management.v1.ManagementService.ResendHumanInitialization:output_type -> zitadel.management.v1.ResendHumanInitializationResponse
	60,  // 645: zitadel.management.v1.ManagementService.ResendHumanEmailVerification:output_type -> zitadel.management.v1.ResendHumanEmailVerificationResponse
	62,  // 646: zitadel.management.v1.ManagementService.GetHumanPhone:output_type -> zitadel.management.v1.GetHumanPhoneResponse
	64,  // 647: zitadel.management.v1.ManagementService.UpdateHumanPhone:output_type -> zitadel.management.v1.UpdateHumanPhoneResponse
	66,  // 648: zitadel.management.v1.ManagementService.RemoveHumanPhone:output_type -> zitadel.management.v1.RemoveHumanPhoneResponse
	68,  // 649: zitadel.management.v1.ManagementService.ResendHumanPhoneVerification:output_type -> zitadel.management.v1.ResendHumanPhoneVerificationResponse
	70,  // 650: zitadel.management.v1.ManagementService.RemoveHumanAvatar:output_type -> zitadel.management.v1.RemoveHumanAvatarResponse
	72,  // 651: zitadel.management.v1.ManagementService.SetHumanInitialPassword:output_type -> zitadel.management.v1.SetHumanInitialPasswordResponse
	74,  // 652: zitadel.management.v1.ManagementService.SetHumanPassword:output_type -> zitadel.management.v1.SetHumanPasswordResponse
	76,  // 653: zitadel.management.v1.ManagementService.SendHumanResetPasswordNotification:output_type -> zitadel.management.v1.SendHumanResetPasswordNotificationResponse
	78,  // 654: zitadel.management.v1.ManagementService.ListHumanAuthFactors:output_type -> zitadel.management.v1.ListHumanAuthFactorsResponse
	80,  // 655: zitadel.management.v1.ManagementService.RemoveHumanAuthFactorOTP:output_type -> zitadel.management.v1.RemoveHumanAuthFactorOTPResponse
	82,  // 656: zitadel.management.v1.ManagementService.RemoveHumanAuthFactorU2F:output_type -> zitadel.management.v1.RemoveHumanAuthFactorU2FResponse
	84,  // 657: zitadel.management.v1.ManagementService.ListHumanPasswordless:output_type -> zitadel.management.v1.ListHumanPasswordlessResponse
	86,  // 658: zitadel.management.v1.ManagementService.AddPasswordlessRegistration:output_type -> zitadel.management.v1.AddPasswordlessRegistrationResponse
	88,  // 659: zitadel.management.v1.ManagementService.SendPasswordlessRegistration:output_type -> zitadel.management.v1.SendPasswordlessRegistrationResponse
	90,  // 660: zitadel.management.v1.ManagementService.RemoveHumanPasswordless:output_type -> zitadel.management.v1.RemoveHumanPasswordlessResponse
	92,  // 661: zitadel.management.v1.ManagementService.UpdateMachine:output_type -> zitadel.management.v1.UpdateMachineResponse
	94,  // 662: zitadel.management.v1.ManagementService.GetMachineKeyByIDs:output_type -> zitadel.management.v1.GetMachineKeyByIDsResponse
	96,  // 663: zitadel.management.v1.ManagementService.ListMachineKeys:output_type -> zitadel.management.v1.ListMachineKeysResponse
	98,  // 664: zitadel.management.v1.ManagementService.AddMachineKey:output_type -> zitadel.management.v1.AddMachineKeyResponse
	100, // 665: zitadel.management.v1.ManagementService.RemoveMachineKey:output_type -> zitadel.management.v1.RemoveMachineKeyResponse
	102, // 666: zitadel.management.v1.ManagementService.ListHumanLinkedIDPs:output_type -> zitadel.management.v1.ListHumanLinkedIDPsResponse
	104, // 667: zitadel.management.v1.ManagementService.RemoveHumanLinkedIDP:output_type -> zitadel.management.v1.RemoveHumanLinkedIDPResponse
	106, // 668: zitadel.management.v1.ManagementService.ListUserMemberships:output_type -> zitadel.management.v1.ListUserMembershipsResponse
	108, // 669: zitadel.management.v1.ManagementService.GetMyOrg:output_type -> zitadel.management.v1.GetMyOrgResponse
	112, // 670: zitadel.management.v1.ManagementService.GetOrgByDomainGlobal:output_type -> zitadel.management.v1.GetOrgByDomainGlobalResponse
	111, // 671: zitadel.management.v1.ManagementService.ListOrgChanges:output_type -> zitadel.management.v1.ListOrgChangesResponse
	114, // 672: zitadel.management.v1.ManagementService.AddOrg:output_type -> zitadel.management.v1.AddOrgResponse
	116, // 673: zitadel.management.v1.ManagementService.UpdateOrg:output_type -> zitadel.management.v1.UpdateOrgResponse
	118, // 674: zitadel.management.v1.ManagementService.DeactivateOrg:output_type -> zitadel.management.v1.DeactivateOrgResponse
	120, // 675: zitadel.management.v1.ManagementService.ReactivateOrg:output_type -> zitadel.management.v1.ReactivateOrgResponse
	122, // 676: zitadel.management.v1.ManagementService.ListOrgDomains:output_type -> zitadel.management.v1.ListOrgDomainsResponse
	124, // 677: zitadel.management.v1.ManagementService.AddOrgDomain:output_type -> zitadel.management.v1.AddOrgDomainResponse
	126, // 678: zitadel.management.v1.ManagementService.RemoveOrgDomain:output_type -> zitadel.management.v1.RemoveOrgDomainResponse
	128, // 679: zitadel.management.v1.ManagementService.GenerateOrgDomainValidation:output_type -> zitadel.management.v1.GenerateOrgDomainValidationResponse
	130, // 680: zitadel.management.v1.ManagementService.ValidateOrgDomain:output_type -> zitadel.management.v1.ValidateOrgDomainResponse
	132, // 681: zitadel.management.v1.ManagementService.SetPrimaryOrgDomain:output_type -> zitadel.management.v1.SetPrimaryOrgDomainResponse
	134, // 682: zitadel.management.v1.ManagementService.ListOrgMemberRoles:output_type -> zitadel.management.v1.ListOrgMemberRolesResponse
	136, // 683: zitadel.management.v1.ManagementService.ListOrgMembers:output_type -> zitadel.management.v1.ListOrgMembersResponse
	138, // 684: zitadel.management.v1.ManagementService.AddOrgMember:output_type -> zitadel.management.v1.AddOrgMemberResponse
	140, // 685: zitadel.management.v1.ManagementService.UpdateOrgMember:output_type -> zitadel.management.v1.UpdateOrgMemberResponse
	142, // 686: zitadel.management.v1.ManagementService.RemoveOrgMember:output_type -> zitadel.management.v1.RemoveOrgMemberResponse
	144, // 687: zitadel.management.v1.ManagementService.GetProjectByID:output_type -> zitadel.management.v1.GetProjectByIDResponse
	146, // 688: zitadel.management.v1.ManagementService.GetGrantedProjectByID:output_type -> zitadel.management.v1.GetGrantedProjectByIDResponse
	148, // 689: zitadel.management.v1.ManagementService.ListProjects:output_type -> zitadel.management.v1.ListProjectsResponse
	150, // 690: zitadel.management.v1.ManagementService.ListGrantedProjects:output_type -> zitadel.management.v1.ListGrantedProjectsResponse
	176, // 691: zitadel.management.v1.ManagementService.ListGrantedProjectRoles:output_type -> zitadel.management.v1.ListGrantedProjectRolesResponse
	152, // 692: zitadel.management.v1.ManagementService.ListProjectChanges:output_type -> zitadel.management.v1.ListProjectChangesResponse
	154, // 693: zitadel.management.v1.ManagementService.AddProject:output_type -> zitadel.management.v1.AddProjectResponse
	156, // 694: zitadel.management.v1.ManagementService.UpdateProject:output_type -> zitadel.management.v1.UpdateProjectResponse
	158, // 695: zitadel.management.v1.ManagementService.DeactivateProject:output_type -> zitadel.management.v1.DeactivateProjectResponse
	160, // 696: zitadel.management.v1.ManagementService.ReactivateProject:output_type -> zitadel.management.v1.ReactivateProjectResponse
	162, // 697: zitadel.management.v1.ManagementService.RemoveProject:output_type -> zitadel.management.v1.RemoveProjectResponse
	174, // 698: zitadel.management.v1.ManagementService.ListProjectRoles:output_type -> zitadel.management.v1.ListProjectRolesResponse
	166, // 699: zitadel.management.v1.ManagementService.AddProjectRole:output_type -> zitadel.management.v1.AddProjectRoleResponse
	168, // 700: zitadel.management.v1.ManagementService.BulkAddProjectRoles:output_type -> zitadel.management.v1.BulkAddProjectRolesResponse
	170, // 701: zitadel.management.v1.ManagementService.UpdateProjectRole:output_type -> zitadel.management.v1.UpdateProjectRoleResponse
	172, // 702: zitadel.management.v1.ManagementService.RemoveProjectRole:output_type -> zitadel.management.v1.RemoveProjectRoleResponse
	164, // 703: zitadel.management.v1.ManagementService.ListProjectMemberRoles:output_type -> zitadel.management.v1.ListProjectMemberRolesResponse
	178, // 704: zitadel.management.v1.ManagementService.ListProjectMembers:output_type -> zitadel.management.v1.ListProjectMembersResponse
	180, // 705: zitadel.management.v1.ManagementService.AddProjectMember:output_type -> zitadel.management.v1.AddProjectMemberResponse
	182, // 706: zitadel.management.v1.ManagementService.UpdateProjectMember:output_type -> zitadel.management.v1.UpdateProjectMemberResponse
	184, // 707: zitadel.management.v1.ManagementService.RemoveProjectMember:output_type -> zitadel.management.v1.RemoveProjectMemberResponse
	186, // 708: zitadel.management.v1.ManagementService.GetAppByID:output_type -> zitadel.management.v1.GetAppByIDResponse
	188, // 709: zitadel.management.v1.ManagementService.ListApps:output_type -> zitadel.management.v1.ListAppsResponse
	190, // 710: zitadel.management.v1.ManagementService.ListAppChanges:output_type -> zitadel.management.v1.ListAppChangesResponse
	192, // 711: zitadel.management.v1.ManagementService.AddOIDCApp:output_type -> zitadel.management.v1.AddOIDCAppResponse
	194, // 712: zitadel.management.v1.ManagementService.AddAPIApp:output_type -> zitadel.management.v1.AddAPIAppResponse
	196, // 713: zitadel.management.v1.ManagementService.UpdateApp:output_type -> zitadel.management.v1.UpdateAppResponse
	198, // 714: zitadel.management.v1.ManagementService.UpdateOIDCAppConfig:output_type -> zitadel.management.v1.UpdateOIDCAppConfigResponse
	200, // 715: zitadel.management.v1.ManagementService.UpdateAPIAppConfig:output_type -> zitadel.management.v1.UpdateAPIAppConfigResponse
	202, // 716: zitadel.management.v1.ManagementService.DeactivateApp:output_type -> zitadel.management.v1.DeactivateAppResponse
	204, // 717: zitadel.management.v1.ManagementService.ReactivateApp:output_type -> zitadel.management.v1.ReactivateAppResponse
	206, // 718: zitadel.management.v1.ManagementService.RemoveApp:output_type -> zitadel.management.v1.RemoveAppResponse
	208, // 719: zitadel.management.v1.ManagementService.RegenerateOIDCClientSecret:output_type -> zitadel.management.v1.RegenerateOIDCClientSecretResponse
	210, // 720: zitadel.management.v1.ManagementService.RegenerateAPIClientSecret:output_type -> zitadel.management.v1.RegenerateAPIClientSecretResponse
	212, // 721: zitadel.management.v1.ManagementService.GetAppKey:output_type -> zitadel.management.v1.GetAppKeyResponse
	214, // 722: zitadel.management.v1.ManagementService.ListAppKeys:output_type -> zitadel.management.v1.ListAppKeysResponse
	216, // 723: zitadel.management.v1.ManagementService.AddAppKey:output_type -> zitadel.management.v1.AddAppKeyResponse
	218, // 724: zitadel.management.v1.ManagementService.RemoveAppKey:output_type -> zitadel.management.v1.RemoveAppKeyResponse
	220, // 725: zitadel.management.v1.ManagementService.GetProjectGrantByID:output_type -> zitadel.management.v1.GetProjectGrantByIDResponse
	222, // 726: zitadel.management.v1.ManagementService.ListProjectGrants:output_type -> zitadel.management.v1.ListProjectGrantsResponse
	224, // 727: zitadel.management.v1.ManagementService.ListAllProjectGrants:output_type -> zitadel.management.v1.ListAllProjectGrantsResponse
	226, // 728: zitadel.management.v1.ManagementService.AddProjectGrant:output_type -> zitadel.management.v1.AddProjectGrantResponse
	228, // 729: zitadel.management.v1.ManagementService.UpdateProjectGrant:output_type -> zitadel.management.v1.UpdateProjectGrantResponse
	230, // 730: zitadel.management.v1.ManagementService.DeactivateProjectGrant:output_type -> zitadel.management.v1.DeactivateProjectGrantResponse
	232, // 731: zitadel.management.v1.ManagementService.ReactivateProjectGrant:output_type -> zitadel.management.v1.ReactivateProjectGrantResponse
	234, // 732: zitadel.management.v1.ManagementService.RemoveProjectGrant:output_type -> zitadel.management.v1.RemoveProjectGrantResponse
	236, // 733: zitadel.management.v1.ManagementService.ListProjectGrantMemberRoles:output_type -> zitadel.management.v1.ListProjectGrantMemberRolesResponse
	238, // 734: zitadel.management.v1.ManagementService.ListProjectGrantMembers:output_type -> zitadel.management.v1.ListProjectGrantMembersResponse
	240, // 735: zitadel.management.v1.ManagementService.AddProjectGrantMember:output_type -> zitadel.management.v1.AddProjectGrantMemberResponse
	242, // 736: zitadel.management.v1.ManagementService.UpdateProjectGrantMember:output_type -> zitadel.management.v1.UpdateProjectGrantMemberResponse
	244, // 737: zitadel.management.v1.ManagementService.RemoveProjectGrantMember:output_type -> zitadel.management.v1.RemoveProjectGrantMemberResponse
	246, // 738: zitadel.management.v1.ManagementService.GetUserGrantByID:output_type -> zitadel.management.v1.GetUserGrantByIDResponse
	248, // 739: zitadel.management.v1.ManagementService.ListUserGrants:output_type -> zitadel.management.v1.ListUserGrantResponse
	250, // 740: zitadel.management.v1.ManagementService.AddUserGrant:output_type -> zitadel.management.v1.AddUserGrantResponse
	252, // 741: zitadel.management.v1.ManagementService.UpdateUserGrant:output_type -> zitadel.management.v1.UpdateUserGrantResponse
	254, // 742: zitadel.management.v1.ManagementService.DeactivateUserGrant:output_type -> zitadel.management.v1.DeactivateUserGrantResponse
	256, // 743: zitadel.management.v1.ManagementService.ReactivateUserGrant:output_type -> zitadel.management.v1.ReactivateUserGrantResponse
	258, // 744: zitadel.management.v1.ManagementService.RemoveUserGrant:output_type -> zitadel.management.v1.RemoveUserGrantResponse
	260, // 745: zitadel.management.v1.ManagementService.BulkRemoveUserGrant:output_type -> zitadel.management.v1.BulkRemoveUserGrantResponse
	262, // 746: zitadel.management.v1.ManagementService.GetFeatures:output_type -> zitadel.management.v1.GetFeaturesResponse
	264, // 747: zitadel.management.v1.ManagementService.GetOrgIAMPolicy:output_type -> zitadel.management.v1.GetOrgIAMPolicyResponse
	266, // 748: zitadel.management.v1.ManagementService.GetLoginPolicy:output_type -> zitadel.management.v1.GetLoginPolicyResponse
	268, // 749: zitadel.management.v1.ManagementService.GetDefaultLoginPolicy:output_type -> zitadel.management.v1.GetDefaultLoginPolicyResponse
	270, // 750: zitadel.management.v1.ManagementService.AddCustomLoginPolicy:output_type -> zitadel.management.v1.AddCustomLoginPolicyResponse
	272, // 751: zitadel.management.v1.ManagementService.UpdateCustomLoginPolicy:output_type -> zitadel.management.v1.UpdateCustomLoginPolicyResponse
	274, // 752: zitadel.management.v1.ManagementService.ResetLoginPolicyToDefault:output_type -> zitadel.management.v1.ResetLoginPolicyToDefaultResponse
	276, // 753: zitadel.management.v1.ManagementService.ListLoginPolicyIDPs:output_type -> zitadel.management.v1.ListLoginPolicyIDPsResponse
	278, // 754: zitadel.management.v1.ManagementService.AddIDPToLoginPolicy:output_type -> zitadel.management.v1.AddIDPToLoginPolicyResponse
	280, // 755: zitadel.management.v1.ManagementService.RemoveIDPFromLoginPolicy:output_type -> zitadel.management.v1.RemoveIDPFromLoginPolicyResponse
	282, // 756: zitadel.management.v1.ManagementService.ListLoginPolicySecondFactors:output_type -> zitadel.management.v1.ListLoginPolicySecondFactorsResponse
	284, // 757: zitadel.management.v1.ManagementService.AddSecondFactorToLoginPolicy:output_type -> zitadel.management.v1.AddSecondFactorToLoginPolicyResponse
	286, // 758: zitadel.management.v1.ManagementService.RemoveSecondFactorFromLoginPolicy:output_type -> zitadel.management.v1.RemoveSecondFactorFromLoginPolicyResponse
	288, // 759: zitadel.management.v1.ManagementService.ListLoginPolicyMultiFactors:output_type -> zitadel.management.v1.ListLoginPolicyMultiFactorsResponse
	290, // 760: zitadel.management.v1.ManagementService.AddMultiFactorToLoginPolicy:output_type -> zitadel.management.v1.AddMultiFactorToLoginPolicyResponse
	292, // 761: zitadel.management.v1.ManagementService.RemoveMultiFactorFromLoginPolicy:output_type -> zitadel.management.v1.RemoveMultiFactorFromLoginPolicyResponse
	294, // 762: zitadel.management.v1.ManagementService.GetPasswordComplexityPolicy:output_type -> zitadel.management.v1.GetPasswordComplexityPolicyResponse
	296, // 763: zitadel.management.v1.ManagementService.GetDefaultPasswordComplexityPolicy:output_type -> zitadel.management.v1.GetDefaultPasswordComplexityPolicyResponse
	298, // 764: zitadel.management.v1.ManagementService.AddCustomPasswordComplexityPolicy:output_type -> zitadel.management.v1.AddCustomPasswordComplexityPolicyResponse
	300, // 765: zitadel.management.v1.ManagementService.UpdateCustomPasswordComplexityPolicy:output_type -> zitadel.management.v1.UpdateCustomPasswordComplexityPolicyResponse
	302, // 766: zitadel.management.v1.ManagementService.ResetPasswordComplexityPolicyToDefault:output_type -> zitadel.management.v1.ResetPasswordComplexityPolicyToDefaultResponse
	304, // 767: zitadel.management.v1.ManagementService.GetPasswordAgePolicy:output_type -> zitadel.management.v1.GetPasswordAgePolicyResponse
	306, // 768: zitadel.management.v1.ManagementService.GetDefaultPasswordAgePolicy:output_type -> zitadel.management.v1.GetDefaultPasswordAgePolicyResponse
	308, // 769: zitadel.management.v1.ManagementService.AddCustomPasswordAgePolicy:output_type -> zitadel.management.v1.AddCustomPasswordAgePolicyResponse
	310, // 770: zitadel.management.v1.ManagementService.UpdateCustomPasswordAgePolicy:output_type -> zitadel.management.v1.UpdateCustomPasswordAgePolicyResponse
	312, // 771: zitadel.management.v1.ManagementService.ResetPasswordAgePolicyToDefault:output_type -> zitadel.management.v1.ResetPasswordAgePolicyToDefaultResponse
	314, // 772: zitadel.management.v1.ManagementService.GetLockoutPolicy:output_type -> zitadel.management.v1.GetLockoutPolicyResponse
	316, // 773: zitadel.management.v1.ManagementService.GetDefaultLockoutPolicy:output_type -> zitadel.management.v1.GetDefaultLockoutPolicyResponse
	318, // 774: zitadel.management.v1.ManagementService.AddCustomLockoutPolicy:output_type -> zitadel.management.v1.AddCustomLockoutPolicyResponse
	320, // 775: zitadel.management.v1.ManagementService.UpdateCustomLockoutPolicy:output_type -> zitadel.management.v1.UpdateCustomLockoutPolicyResponse
	322, // 776: zitadel.management.v1.ManagementService.ResetLockoutPolicyToDefault:output_type -> zitadel.management.v1.ResetLockoutPolicyToDefaultResponse
	324, // 777: zitadel.management.v1.ManagementService.GetPrivacyPolicy:output_type -> zitadel.management.v1.GetPrivacyPolicyResponse
	326, // 778: zitadel.management.v1.ManagementService.GetDefaultPrivacyPolicy:output_type -> zitadel.management.v1.GetDefaultPrivacyPolicyResponse
	328, // 779: zitadel.management.v1.ManagementService.AddCustomPrivacyPolicy:output_type -> zitadel.management.v1.AddCustomPrivacyPolicyResponse
	330, // 780: zitadel.management.v1.ManagementService.UpdateCustomPrivacyPolicy:output_type -> zitadel.management.v1.UpdateCustomPrivacyPolicyResponse
	332, // 781: zitadel.management.v1.ManagementService.ResetPrivacyPolicyToDefault:output_type -> zitadel.management.v1.ResetPrivacyPolicyToDefaultResponse
	334, // 782: zitadel.management.v1.ManagementService.GetLabelPolicy:output_type -> zitadel.management.v1.GetLabelPolicyResponse
	336, // 783: zitadel.management.v1.ManagementService.GetPreviewLabelPolicy:output_type -> zitadel.management.v1.GetPreviewLabelPolicyResponse
	338, // 784: zitadel.management.v1.ManagementService.GetDefaultLabelPolicy:output_type -> zitadel.management.v1.GetDefaultLabelPolicyResponse
	340, // 785: zitadel.management.v1.ManagementService.AddCustomLabelPolicy:output_type -> zitadel.management.v1.AddCustomLabelPolicyResponse
	342, // 786: zitadel.management.v1.ManagementService.UpdateCustomLabelPolicy:output_type -> zitadel.management.v1.UpdateCustomLabelPolicyResponse
	344, // 787: zitadel.management.v1.ManagementService.ActivateCustomLabelPolicy:output_type -> zitadel.management.v1.ActivateCustomLabelPolicyResponse
	346, // 788: zitadel.management.v1.ManagementService.RemoveCustomLabelPolicyLogo:output_type -> zitadel.management.v1.RemoveCustomLabelPolicyLogoResponse
	348, // 789: zitadel.management.v1.ManagementService.RemoveCustomLabelPolicyLogoDark:output_type -> zitadel.management.v1.RemoveCustomLabelPolicyLogoDarkResponse
	350, // 790: zitadel.management.v1.ManagementService.RemoveCustomLabelPolicyIcon:output_type -> zitadel.management.v1.RemoveCustomLabelPolicyIconResponse
	352, // 791: zitadel.management.v1.ManagementService.RemoveCustomLabelPolicyIconDark:output_type -> zitadel.management.v1.RemoveCustomLabelPolicyIconDarkResponse
	354, // 792: zitadel.management.v1.ManagementService.RemoveCustomLabelPolicyFont:output_type -> zitadel.management.v1.RemoveCustomLabelPolicyFontResponse
	356, // 793: zitadel.management.v1.ManagementService.ResetLabelPolicyToDefault:output_type -> zitadel.management.v1.ResetLabelPolicyToDefaultResponse
	358, // 794: zitadel.management.v1.ManagementService.GetCustomInitMessageText:output_type -> zitadel.management.v1.GetCustomInitMessageTextResponse
	360, // 795: zitadel.management.v1.ManagementService.GetDefaultInitMessageText:output_type -> zitadel.management.v1.GetDefaultInitMessageTextResponse
	362, // 796: zitadel.management.v1.ManagementService.SetCustomInitMessageText:output_type -> zitadel.management.v1.SetCustomInitMessageTextResponse
	364, // 797: zitadel.management.v1.ManagementService.ResetCustomInitMessageTextToDefault:output_type -> zitadel.management.v1.ResetCustomInitMessageTextToDefaultResponse
	374, // 798: zitadel.management.v1.ManagementService.GetCustomPasswordResetMessageText:output_type -> zitadel.management.v1.GetCustomPasswordResetMessageTextResponse
	376, // 799: zitadel.management.v1.ManagementService.GetDefaultPasswordResetMessageText:output_type -> zitadel.management.v1.GetDefaultPasswordResetMessageTextResponse
	378, // 800: zitadel.management.v1.ManagementService.SetCustomPasswordResetMessageText:output_type -> zitadel.management.v1.SetCustomPasswordResetMessageTextResponse
	380, // 801: zitadel.management.v1.ManagementService.ResetCustomPasswordResetMessageTextToDefault:output_type -> zitadel.management.v1.ResetCustomPasswordResetMessageTextToDefaultResponse
	382, // 802: zitadel.management.v1.ManagementService.GetCustomVerifyEmailMessageText:output_type -> zitadel.management.v1.GetCustomVerifyEmailMessageTextResponse
	384, // 803: zitadel.management.v1.ManagementService.GetDefaultVerifyEmailMessageText:output_type -> zitadel.management.v1.GetDefaultVerifyEmailMessageTextResponse
	386, // 804: zitadel.management.v1.ManagementService.SetCustomVerifyEmailMessageText:output_type -> zitadel.management.v1.SetCustomVerifyEmailMessageTextResponse
	388, // 805: zitadel.management.v1.ManagementService.ResetCustomVerifyEmailMessageTextToDefault:output_type -> zitadel.management.v1.ResetCustomVerifyEmailMessageTextToDefaultResponse
	390, // 806: zitadel.management.v1.ManagementService.GetCustomVerifyPhoneMessageText:output_type -> zitadel.management.v1.GetCustomVerifyPhoneMessageTextResponse
	392, // 807: zitadel.management.v1.ManagementService.GetDefaultVerifyPhoneMessageText:output_type -> zitadel.management.v1.GetDefaultVerifyPhoneMessageTextResponse
	394, // 808: zitadel.management.v1.ManagementService.SetCustomVerifyPhoneMessageText:output_type -> zitadel.management.v1.SetCustomVerifyPhoneMessageTextResponse
	396, // 809: zitadel.management.v1.ManagementService.ResetCustomVerifyPhoneMessageTextToDefault:output_type -> zitadel.management.v1.ResetCustomVerifyPhoneMessageTextToDefaultResponse
	398, // 810: zitadel.management.v1.ManagementService.GetCustomDomainClaimedMessageText:output_type -> zitadel.management.v1.GetCustomDomainClaimedMessageTextResponse
	400, // 811: zitadel.management.v1.ManagementService.GetDefaultDomainClaimedMessageText:output_type -> zitadel.management.v1.GetDefaultDomainClaimedMessageTextResponse
	402, // 812: zitadel.management.v1.ManagementService.SetCustomDomainClaimedMessageCustomText:output_type -> zitadel.management.v1.SetCustomDomainClaimedMessageTextResponse
	404, // 813: zitadel.management.v1.ManagementService.ResetCustomDomainClaimedMessageTextToDefault:output_type -> zitadel.management.v1.ResetCustomDomainClaimedMessageTextToDefaultResponse
	406, // 814: zitadel.management.v1.ManagementService.GetCustomPasswordlessRegistrationMessageText:output_type -> zitadel.management.v1.GetCustomPasswordlessRegistrationMessageTextResponse
	408, // 815: zitadel.management.v1.ManagementService.GetDefaultPasswordlessRegistrationMessageText:output_type -> zitadel.management.v1.GetDefaultPasswordlessRegistrationMessageTextResponse
	410, // 816: zitadel.management.v1.ManagementService.SetCustomPasswordlessRegistrationMessageCustomText:output_type -> zitadel.management.v1.SetCustomPasswordlessRegistrationMessageTextResponse
	412, // 817: zitadel.management.v1.ManagementService.ResetCustomPasswordlessRegistrationMessageTextToDefault:output_type -> zitadel.management.v1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse
	368, // 818: zitadel.management.v1.ManagementService.GetCustomLoginTexts:output_type -> zitadel.management.v1.GetCustomLoginTextsResponse
	366, // 819: zitadel.management.v1.ManagementService.GetDefaultLoginTexts:output_type -> zitadel.management.v1.GetDefaultLoginTextsResponse
	370, // 820: zitadel.management.v1.ManagementService.SetCustomLoginText:output_type -> zitadel.management.v1.SetCustomLoginTextsResponse
	372, // 821: zitadel.management.v1.ManagementService.ResetCustomLoginTextToDefault:output_type -> zitadel.management.v1.ResetCustomLoginTextsToDefaultResponse
	414, // 822: zitadel.management.v1.ManagementService.GetOrgIDPByID:output_type -> zitadel.management.v1.GetOrgIDPByIDResponse
	417, // 823: zitadel.management.v1.ManagementService.ListOrgIDPs:output_type -> zitadel.management.v1.ListOrgIDPsResponse
	419, // 824: zitadel.management.v1.ManagementService.AddOrgOIDCIDP:output_type -> zitadel.management.v1.AddOrgOIDCIDPResponse
	421, // 825: zitadel.management.v1.ManagementService.AddOrgJWTIDP:output_type -> zitadel.management.v1.AddOrgJWTIDPResponse
	423, // 826: zitadel.management.v1.ManagementService.DeactivateOrgIDP:output_type -> zitadel.management.v1.DeactivateOrgIDPResponse
	425, // 827: zitadel.management.v1.ManagementService.ReactivateOrgIDP:output_type -> zitadel.management.v1.ReactivateOrgIDPResponse
	427, // 828: zitadel.management.v1.ManagementService.RemoveOrgIDP:output_type -> zitadel.management.v1.RemoveOrgIDPResponse
	429, // 829: zitadel.management.v1.ManagementService.UpdateOrgIDP:output_type -> zitadel.management.v1.UpdateOrgIDPResponse
	431, // 830: zitadel.management.v1.ManagementService.UpdateOrgIDPOIDCConfig:output_type -> zitadel.management.v1.UpdateOrgIDPOIDCConfigResponse
	433, // 831: zitadel.management.v1.ManagementService.UpdateOrgIDPJWTConfig:output_type -> zitadel.management.v1.UpdateOrgIDPJWTConfigResponse
	436, // 832: zitadel.management.v1.ManagementService.ListActions:output_type -> zitadel.management.v1.ListActionsResponse
	440, // 833: zitadel.management.v1.ManagementService.GetAction:output_type -> zitadel.management.v1.GetActionResponse
	438, // 834: zitadel.management.v1.ManagementService.CreateAction:output_type -> zitadel.management.v1.CreateActionResponse
	442, // 835: zitadel.management.v1.ManagementService.UpdateAction:output_type -> zitadel.management.v1.UpdateActionResponse
	446, // 836: zitadel.management.v1.ManagementService.DeactivateAction:output_type -> zitadel.management.v1.DeactivateActionResponse
	448, // 837: zitadel.management.v1.ManagementService.ReactivateAction:output_type -> zitadel.management.v1.ReactivateActionResponse
	444, // 838: zitadel.management.v1.ManagementService.DeleteAction:output_type -> zitadel.management.v1.DeleteActionResponse
	450, // 839: zitadel.management.v1.ManagementService.GetFlow:output_type -> zitadel.management.v1.GetFlowResponse
	452, // 840: zitadel.management.v1.ManagementService.ClearFlow:output_type -> zitadel.management.v1.ClearFlowResponse
	454, // 841: zitadel.management.v1.ManagementService.SetTriggerActions:output_type -> zitadel.management.v1.SetTriggerActionsResponse
	616, // [616:842] is the sub-list for method output_type
	390, // [390:616] is the sub-list for method input_type
	390, // [390:390] is the sub-list for extension type_name
	390, // [390:390] is the sub-list for extension extendee
	0,   // [0:390] is the sub-list for field type_name
}

func init() { file_zitadel_management_proto_init() }
func file_zitadel_management_proto_init() {
	if File_zitadel_management_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zitadel_management_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthzRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOIDCInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOIDCInformationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIAMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIAMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSupportedLanguagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSupportedLanguagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByLoginNameGlobalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByLoginNameGlobalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserUniqueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserUniqueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHumanUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHumanUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportHumanUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportHumanUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMachineUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMachineUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkSetUserMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkSetUserMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkRemoveUserMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkRemoveUserMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHumanProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHumanProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHumanProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHumanProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHumanEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHumanEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHumanEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHumanEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendHumanInitializationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendHumanInitializationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendHumanEmailVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendHumanEmailVerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHumanPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHumanPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHumanPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHumanPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendHumanPhoneVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendHumanPhoneVerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHumanInitialPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHumanInitialPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHumanPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHumanPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendHumanResetPasswordNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendHumanResetPasswordNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHumanAuthFactorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHumanAuthFactorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanAuthFactorOTPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanAuthFactorOTPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanAuthFactorU2FRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanAuthFactorU2FResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHumanPasswordlessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHumanPasswordlessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPasswordlessRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPasswordlessRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPasswordlessRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPasswordlessRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanPasswordlessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanPasswordlessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMachineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachineKeyByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachineKeyByIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachineKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachineKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMachineKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMachineKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMachineKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMachineKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHumanLinkedIDPsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHumanLinkedIDPsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanLinkedIDPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveHumanLinkedIDPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserMembershipsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserMembershipsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyOrgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyOrgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgByDomainGlobalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgByDomainGlobalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateOrgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateOrgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateOrgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateOrgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgDomainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgDomainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrgDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrgDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveOrgDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveOrgDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateOrgDomainValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateOrgDomainValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateOrgDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateOrgDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPrimaryOrgDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPrimaryOrgDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgMemberRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgMemberRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrgMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrgMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveOrgMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveOrgMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGrantedProjectByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGrantedProjectByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGrantedProjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGrantedProjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectMemberRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectMemberRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAddProjectRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAddProjectRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProjectRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProjectRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGrantedProjectRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGrantedProjectRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProjectMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProjectMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOIDCAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOIDCAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAPIAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAPIAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOIDCAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOIDCAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAPIAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAPIAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateOIDCClientSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateOIDCClientSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateAPIClientSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateAPIClientSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAppKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAppKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAppKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAppKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectGrantByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectGrantByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectGrantsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectGrantsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllProjectGrantsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllProjectGrantsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateProjectGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateProjectGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateProjectGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateProjectGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProjectGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProjectGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectGrantMemberRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectGrantMemberRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectGrantMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectGrantMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectGrantMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectGrantMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectGrantMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectGrantMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProjectGrantMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProjectGrantMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGrantByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGrantByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateUserGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateUserGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateUserGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateUserGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkRemoveUserGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkRemoveUserGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeaturesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeaturesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgIAMPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgIAMPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultLoginPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultLoginPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomLoginPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomLoginPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomLoginPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomLoginPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetLoginPolicyToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetLoginPolicyToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoginPolicyIDPsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoginPolicyIDPsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIDPToLoginPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIDPToLoginPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveIDPFromLoginPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveIDPFromLoginPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoginPolicySecondFactorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoginPolicySecondFactorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSecondFactorToLoginPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSecondFactorToLoginPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSecondFactorFromLoginPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSecondFactorFromLoginPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoginPolicyMultiFactorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoginPolicyMultiFactorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMultiFactorToLoginPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMultiFactorToLoginPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMultiFactorFromLoginPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMultiFactorFromLoginPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPasswordComplexityPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[293].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPasswordComplexityPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[294].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultPasswordComplexityPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[295].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultPasswordComplexityPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[296].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomPasswordComplexityPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[297].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomPasswordComplexityPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[298].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomPasswordComplexityPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[299].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomPasswordComplexityPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[300].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordComplexityPolicyToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[301].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordComplexityPolicyToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[302].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPasswordAgePolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[303].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPasswordAgePolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[304].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultPasswordAgePolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[305].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultPasswordAgePolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[306].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomPasswordAgePolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[307].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomPasswordAgePolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[308].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomPasswordAgePolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[309].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomPasswordAgePolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[310].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordAgePolicyToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[311].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordAgePolicyToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[312].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLockoutPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[313].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLockoutPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[314].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultLockoutPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[315].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultLockoutPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[316].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomLockoutPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[317].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomLockoutPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[318].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomLockoutPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[319].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomLockoutPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[320].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetLockoutPolicyToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[321].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetLockoutPolicyToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[322].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrivacyPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[323].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrivacyPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[324].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultPrivacyPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[325].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultPrivacyPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[326].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomPrivacyPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[327].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomPrivacyPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[328].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomPrivacyPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[329].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomPrivacyPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[330].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPrivacyPolicyToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[331].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPrivacyPolicyToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[332].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[333].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[334].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviewLabelPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[335].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviewLabelPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[336].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultLabelPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[337].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultLabelPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[338].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomLabelPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[339].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomLabelPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[340].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomLabelPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[341].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomLabelPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[342].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateCustomLabelPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[343].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateCustomLabelPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[344].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomLabelPolicyLogoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[345].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomLabelPolicyLogoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[346].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomLabelPolicyLogoDarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[347].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomLabelPolicyLogoDarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[348].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomLabelPolicyIconRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[349].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomLabelPolicyIconResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[350].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomLabelPolicyIconDarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[351].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomLabelPolicyIconDarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[352].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomLabelPolicyFontRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[353].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomLabelPolicyFontResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[354].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetLabelPolicyToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[355].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetLabelPolicyToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[356].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomInitMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[357].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomInitMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[358].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultInitMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[359].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultInitMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[360].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomInitMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[361].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomInitMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[362].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomInitMessageTextToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[363].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomInitMessageTextToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[364].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultLoginTextsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[365].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultLoginTextsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[366].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomLoginTextsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[367].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomLoginTextsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[368].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomLoginTextsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[369].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomLoginTextsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[370].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomLoginTextsToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[371].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomLoginTextsToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[372].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomPasswordResetMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[373].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomPasswordResetMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[374].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultPasswordResetMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[375].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultPasswordResetMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[376].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomPasswordResetMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[377].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomPasswordResetMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[378].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomPasswordResetMessageTextToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[379].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomPasswordResetMessageTextToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[380].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomVerifyEmailMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[381].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomVerifyEmailMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[382].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultVerifyEmailMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[383].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultVerifyEmailMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[384].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomVerifyEmailMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[385].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomVerifyEmailMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[386].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomVerifyEmailMessageTextToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[387].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomVerifyEmailMessageTextToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[388].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomVerifyPhoneMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[389].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomVerifyPhoneMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[390].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultVerifyPhoneMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[391].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultVerifyPhoneMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[392].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomVerifyPhoneMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[393].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomVerifyPhoneMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[394].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomVerifyPhoneMessageTextToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[395].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomVerifyPhoneMessageTextToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[396].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomDomainClaimedMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[397].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomDomainClaimedMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[398].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultDomainClaimedMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[399].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultDomainClaimedMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[400].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomDomainClaimedMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[401].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomDomainClaimedMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[402].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomDomainClaimedMessageTextToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[403].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomDomainClaimedMessageTextToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[404].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomPasswordlessRegistrationMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[405].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomPasswordlessRegistrationMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[406].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultPasswordlessRegistrationMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[407].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultPasswordlessRegistrationMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[408].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomPasswordlessRegistrationMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[409].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCustomPasswordlessRegistrationMessageTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[410].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[411].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[412].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgIDPByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[413].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgIDPByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[414].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgIDPsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[415].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDPQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[416].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgIDPsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[417].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrgOIDCIDPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[418].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrgOIDCIDPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[419].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrgJWTIDPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[420].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrgJWTIDPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[421].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateOrgIDPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[422].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateOrgIDPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[423].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateOrgIDPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[424].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateOrgIDPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[425].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveOrgIDPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[426].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveOrgIDPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[427].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgIDPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[428].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgIDPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[429].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgIDPOIDCConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[430].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgIDPOIDCConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[431].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgIDPJWTConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[432].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgIDPJWTConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[433].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[434].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[435].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[436].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[437].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[438].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[439].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[440].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[441].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[442].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[443].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[444].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[445].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[446].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[447].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivateActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[448].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[449].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[450].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[451].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearFlowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[452].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTriggerActionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[453].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTriggerActionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[454].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHumanUserRequest_Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[455].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHumanUserRequest_Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[456].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHumanUserRequest_Phone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[457].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportHumanUserRequest_Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[458].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportHumanUserRequest_Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[459].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportHumanUserRequest_Phone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[460].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportHumanUserResponse_PasswordlessRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[461].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkSetUserMetadataRequest_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_management_proto_msgTypes[462].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAddProjectRolesRequest_Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zitadel_management_proto_msgTypes[415].OneofWrappers = []interface{}{
		(*IDPQuery_IdpIdQuery)(nil),
		(*IDPQuery_IdpNameQuery)(nil),
		(*IDPQuery_OwnerTypeQuery)(nil),
	}
	file_zitadel_management_proto_msgTypes[434].OneofWrappers = []interface{}{
		(*ActionQuery_ActionIdQuery)(nil),
		(*ActionQuery_ActionNameQuery)(nil),
		(*ActionQuery_ActionStateQuery)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_management_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   463,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zitadel_management_proto_goTypes,
		DependencyIndexes: file_zitadel_management_proto_depIdxs,
		EnumInfos:         file_zitadel_management_proto_enumTypes,
		MessageInfos:      file_zitadel_management_proto_msgTypes,
	}.Build()
	File_zitadel_management_proto = out.File
	file_zitadel_management_proto_rawDesc = nil
	file_zitadel_management_proto_goTypes = nil
	file_zitadel_management_proto_depIdxs = nil
}
